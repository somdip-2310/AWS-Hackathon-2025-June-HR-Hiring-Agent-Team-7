2025-06-22 00:39:13 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 3355 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-22 00:39:13 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-22 00:39:13 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-22 00:39:13 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-22 00:39:13 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-22 00:39:16 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-22 00:39:16 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-22 00:39:16 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-22 00:39:16 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-22 00:39:16 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2872 ms
2025-06-22 00:39:16 [restartedMain] INFO  com.hackathon.hr.config.HeaderConfig - Security Headers Configuration:
2025-06-22 00:39:16 [restartedMain] INFO  com.hackathon.hr.config.HeaderConfig -   Content-Security-Policy: frame-ancestors 'self' https://somdip.dev https://www.somdip.dev http://localhost:8080 http://localhost:8081;
2025-06-22 00:39:16 [restartedMain] INFO  com.hackathon.hr.config.HeaderConfig -   iFrame embedding enabled: true
2025-06-22 00:39:16 [restartedMain] DEBUG c.h.h.c.HeaderConfig$HeaderFilter - HeaderFilter initialized
2025-06-22 00:39:16 [restartedMain] INFO  com.hackathon.hr.config.AwsConfig - AWS Configuration initialized:
2025-06-22 00:39:16 [restartedMain] INFO  com.hackathon.hr.config.AwsConfig -   Region: us-east-1
2025-06-22 00:39:16 [restartedMain] INFO  com.hackathon.hr.config.AwsConfig -   Using credentials: Default chain
2025-06-22 00:39:16 [restartedMain] INFO  com.hackathon.hr.config.WebMvcConfig - CORS Configuration initialized:
2025-06-22 00:39:16 [restartedMain] INFO  com.hackathon.hr.config.WebMvcConfig -   Allowed Origins: https://somdip.dev,https://www.somdip.dev,https://demos.somdip.dev,http://localhost:8080,http://localhost:8081
2025-06-22 00:39:16 [restartedMain] INFO  com.hackathon.hr.config.WebMvcConfig -   Allowed Methods: GET,POST,PUT,DELETE,OPTIONS,HEAD
2025-06-22 00:39:16 [restartedMain] INFO  com.hackathon.hr.config.WebMvcConfig -   Max Age: 3600
2025-06-22 00:39:16 [restartedMain] INFO  com.hackathon.hr.config.AwsConfig - Using default AWS credentials provider chain (IAM role, etc.)
2025-06-22 00:39:16 [restartedMain] INFO  com.hackathon.hr.config.AwsConfig - Creating S3 client for region: us-east-1
2025-06-22 00:39:17 [restartedMain] INFO  com.hackathon.hr.service.S3Service - S3Service initialized with bucket: hr-hiring-resumes-js
2025-06-22 00:39:17 [restartedMain] INFO  com.hackathon.hr.config.AwsConfig - Creating Textract client for region: us-east-1
2025-06-22 00:39:18 [restartedMain] INFO  c.h.hr.service.TextractService - TextractService initialized with bucket: hr-hiring-resumes-js
2025-06-22 00:39:18 [restartedMain] INFO  com.hackathon.hr.config.AwsConfig - Creating Bedrock Runtime client for region: us-east-1
2025-06-22 00:39:18 [restartedMain] INFO  c.h.hr.service.BedrockService - BedrockService initialized with model: us.amazon.nova-premier-v1:0
2025-06-22 00:39:18 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-22 00:39:18 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-22 00:39:18 [restartedMain] WARN  c.hackathon.hr.service.EmailService - SendGrid API key not configured - email sending will be simulated
2025-06-22 00:39:18 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-22 00:39:18 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-22 00:39:18 [restartedMain] INFO  com.hackathon.hr.config.WebMvcConfig - CORS configured with 5 allowed origins
2025-06-22 00:39:18 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 36 mappings in 'requestMappingHandlerMapping'
2025-06-22 00:39:18 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-22 00:39:18 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-22 00:39:18 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-22 00:39:18 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-06-22 00:39:19 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-22 00:39:19 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 6.704 seconds (JVM running for 8.387)
2025-06-22 00:39:19 [RMI TCP Connection(9)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-22 00:39:19 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-22 00:39:19 [RMI TCP Connection(9)-127.0.0.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-22 00:39:19 [RMI TCP Connection(9)-127.0.0.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-22 00:39:19 [RMI TCP Connection(9)-127.0.0.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-22 00:39:19 [RMI TCP Connection(9)-127.0.0.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@60ab962e
2025-06-22 00:39:19 [RMI TCP Connection(9)-127.0.0.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5814ab9c
2025-06-22 00:39:19 [RMI TCP Connection(9)-127.0.0.1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-22 00:39:19 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-06-22 00:39:27 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-22 00:39:27 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-22 00:39:27 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-22 00:39:28 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-22 00:39:28 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-22 00:39:28 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3871dac8
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@75c74657
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@a9361fb
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-22 00:39:28 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-22 00:39:28 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:39:28 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-22 00:39:28 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-22 00:39:28 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:39:28 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-22 00:39:28 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-22 00:39:28 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:39:29 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-22 00:39:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-22 00:39:29 [http-nio-8081-exec-4] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-22 00:39:29 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/status", parameters={}
2025-06-22 00:39:29 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-22 00:39:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-22 00:39:29 [http-nio-8081-exec-6] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-22 00:39:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:39:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-22 00:39:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:39:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@2cbf3cd9, com.hackathon.hr.model.JobRequirement@33f66ebd, com (truncated)...]
2025-06-22 00:39:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getSessionStatus()
2025-06-22 00:39:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:39:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{queueLength=0, estimatedWaitTime=0, waitingUsers=[], sessionExpired=false, available=true, dataClea (truncated)...]
2025-06-22 00:39:29 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:39:29 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:39:29 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:39:29 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-22 00:39:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-22 00:39:30 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:39:33 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/session/request-verification", parameters={masked}
2025-06-22 00:39:33 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#requestEmailVerification(String)
2025-06-22 00:39:33 [http-nio-8081-exec-8] INFO  c.h.h.s.SessionManagementService - Storing verification code for normalized email: s***********y@gmail.com (original: s***********y@gmail.com)
2025-06-22 00:39:33 [ForkJoinPool.commonPool-worker-1] INFO  c.hackathon.hr.service.EmailService - === VERIFICATION CODE ===
2025-06-22 00:39:33 [ForkJoinPool.commonPool-worker-1] INFO  c.hackathon.hr.service.EmailService - Email: s***********y@gmail.com
2025-06-22 00:39:33 [ForkJoinPool.commonPool-worker-1] INFO  c.hackathon.hr.service.EmailService - Code: 642971
2025-06-22 00:39:33 [ForkJoinPool.commonPool-worker-1] INFO  c.hackathon.hr.service.EmailService - SendGrid Enabled: false
2025-06-22 00:39:33 [ForkJoinPool.commonPool-worker-1] INFO  c.hackathon.hr.service.EmailService - From Email: hr-agent@somdip.dev
2025-06-22 00:39:33 [ForkJoinPool.commonPool-worker-1] INFO  c.hackathon.hr.service.EmailService - ========================
2025-06-22 00:39:33 [ForkJoinPool.commonPool-worker-1] INFO  c.hackathon.hr.service.EmailService - Email sending simulated for: s***********y@gmail.com (SendGrid disabled)
2025-06-22 00:39:33 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Verification code requested for email: s***********y@gmail.com
2025-06-22 00:39:33 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:39:33 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{success=true, message=Verification code sent to your email! Please check your inbox., timestamp=202 (truncated)...]
2025-06-22 00:39:33 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:39:40 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/session/verify-email", parameters={masked}
2025-06-22 00:39:40 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#verifyEmail(String, String)
2025-06-22 00:39:40 [http-nio-8081-exec-9] INFO  c.h.h.s.SessionManagementService - Attempting to verify email: s***********y@gmail.com (normalized: s***********y@gmail.com)
2025-06-22 00:39:40 [http-nio-8081-exec-9] INFO  c.h.h.s.SessionManagementService - Email verified successfully: s***********y@gmail.com (normalized: s***********y@gmail.com)
2025-06-22 00:39:40 [http-nio-8081-exec-9] INFO  c.h.h.s.SessionManagementService - Email usage tracked for: s***********y@gmail.com
2025-06-22 00:39:40 [http-nio-8081-exec-9] INFO  c.h.h.s.SessionManagementService - Demo session started for email: s***********y@gmail.com with session ID: demo_1750532980957_3153
2025-06-22 00:39:40 [ForkJoinPool.commonPool-worker-1] INFO  c.hackathon.hr.service.EmailService - Welcome email simulated for: s***********y@gmail.com (SendGrid disabled)
2025-06-22 00:39:40 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Email verified and session started for: s***********y@gmail.com
2025-06-22 00:39:40 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:39:40 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{success=true, sessionId=demo_1750532980957_3153, message=Session started successfully, sessionDurat (truncated)...]
2025-06-22 00:39:40 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:39:56 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/cleanup-check", parameters={}
2025-06-22 00:39:56 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#checkAndCleanupSessions()
2025-06-22 00:39:56 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:39:56 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{sessionExpired=false, dataCleanupRequired=false, timestamp=2025-06-22T00:39:56.251931}]
2025-06-22 00:39:56 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:39:59 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/status", parameters={}
2025-06-22 00:39:59 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getSessionStatus()
2025-06-22 00:39:59 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:39:59 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{queueLength=0, remainingMinutes=7, estimatedWaitTime=7, available=false, remainingSeconds=402, sess (truncated)...]
2025-06-22 00:39:59 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:40:03 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-22 00:40:03 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile, String)
2025-06-22 00:40:03 [http-nio-8081-exec-2] DEBUG c.h.h.s.SessionManagementService - Session validation successful for ID: demo_1750532980957_3153
2025-06-22 00:40:03 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Processing resume upload: SanghamitraResume.pdf for session: demo_1750532980957_3153
2025-06-22 00:40:11 [http-nio-8081-exec-2] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully to bucket hr-hiring-resumes-js with key: resumes/84df5d42-1488-4645-9c3b-c3070fa163fe-SanghamitraResume.pdf
2025-06-22 00:40:11 [http-nio-8081-exec-2] INFO  c.h.hr.service.TextractService - Extracting text from s3://hr-hiring-resumes-js/resumes/84df5d42-1488-4645-9c3b-c3070fa163fe-SanghamitraResume.pdf
2025-06-22 00:40:11 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/cleanup-check", parameters={}
2025-06-22 00:40:11 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#checkAndCleanupSessions()
2025-06-22 00:40:11 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:40:11 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{sessionExpired=false, dataCleanupRequired=false, timestamp=2025-06-22T00:40:11.354848}]
2025-06-22 00:40:11 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:40:12 [http-nio-8081-exec-2] ERROR c.h.hr.service.TextractService - Unsupported document format for s3://hr-hiring-resumes-js/resumes/84df5d42-1488-4645-9c3b-c3070fa163fe-SanghamitraResume.pdf
software.amazon.awssdk.services.textract.model.UnsupportedDocumentException: Request has unsupported document format (Service: Textract, Status Code: 400, Request ID: a8d47c04-63b8-4480-9505-e7daab4bd915)
	at software.amazon.awssdk.core.internal.http.CombinedResponseHandler.handleErrorResponse(CombinedResponseHandler.java:125)
	at software.amazon.awssdk.core.internal.http.CombinedResponseHandler.handleResponse(CombinedResponseHandler.java:82)
	at software.amazon.awssdk.core.internal.http.CombinedResponseHandler.handle(CombinedResponseHandler.java:60)
	at software.amazon.awssdk.core.internal.http.CombinedResponseHandler.handle(CombinedResponseHandler.java:41)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.HandleResponseStage.execute(HandleResponseStage.java:40)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.HandleResponseStage.execute(HandleResponseStage.java:30)
	at software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallAttemptTimeoutTrackingStage.execute(ApiCallAttemptTimeoutTrackingStage.java:72)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallAttemptTimeoutTrackingStage.execute(ApiCallAttemptTimeoutTrackingStage.java:42)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.TimeoutExceptionHandlingStage.execute(TimeoutExceptionHandlingStage.java:78)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.TimeoutExceptionHandlingStage.execute(TimeoutExceptionHandlingStage.java:40)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallAttemptMetricCollectionStage.execute(ApiCallAttemptMetricCollectionStage.java:52)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallAttemptMetricCollectionStage.execute(ApiCallAttemptMetricCollectionStage.java:37)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.RetryableStage.execute(RetryableStage.java:81)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.RetryableStage.execute(RetryableStage.java:36)
	at software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)
	at software.amazon.awssdk.core.internal.http.StreamManagingStage.execute(StreamManagingStage.java:56)
	at software.amazon.awssdk.core.internal.http.StreamManagingStage.execute(StreamManagingStage.java:36)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallTimeoutTrackingStage.executeWithTimer(ApiCallTimeoutTrackingStage.java:80)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallTimeoutTrackingStage.execute(ApiCallTimeoutTrackingStage.java:60)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallTimeoutTrackingStage.execute(ApiCallTimeoutTrackingStage.java:42)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallMetricCollectionStage.execute(ApiCallMetricCollectionStage.java:50)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallMetricCollectionStage.execute(ApiCallMetricCollectionStage.java:32)
	at software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)
	at software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ExecutionFailureExceptionReportingStage.execute(ExecutionFailureExceptionReportingStage.java:37)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ExecutionFailureExceptionReportingStage.execute(ExecutionFailureExceptionReportingStage.java:26)
	at software.amazon.awssdk.core.internal.http.AmazonSyncHttpClient$RequestExecutionBuilderImpl.execute(AmazonSyncHttpClient.java:224)
	at software.amazon.awssdk.core.internal.handler.BaseSyncClientHandler.invoke(BaseSyncClientHandler.java:103)
	at software.amazon.awssdk.core.internal.handler.BaseSyncClientHandler.doExecute(BaseSyncClientHandler.java:173)
	at software.amazon.awssdk.core.internal.handler.BaseSyncClientHandler.lambda$execute$1(BaseSyncClientHandler.java:80)
	at software.amazon.awssdk.core.internal.handler.BaseSyncClientHandler.measureApiCallSuccess(BaseSyncClientHandler.java:182)
	at software.amazon.awssdk.core.internal.handler.BaseSyncClientHandler.execute(BaseSyncClientHandler.java:74)
	at software.amazon.awssdk.core.client.handler.SdkSyncClientHandler.execute(SdkSyncClientHandler.java:45)
	at software.amazon.awssdk.awscore.client.handler.AwsSyncClientHandler.execute(AwsSyncClientHandler.java:53)
	at software.amazon.awssdk.services.textract.DefaultTextractClient.detectDocumentText(DefaultTextractClient.java:898)
	at com.hackathon.hr.service.TextractService.extractText(TextractService.java:54)
	at com.hackathon.hr.service.CandidateService.processResume(CandidateService.java:136)
	at com.hackathon.hr.service.CandidateService.processResume(CandidateService.java:117)
	at com.hackathon.hr.controller.HRController.uploadResume(HRController.java:385)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.hackathon.hr.config.HeaderConfig$HeaderFilter.doFilter(HeaderConfig.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:765)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-22 00:40:12 [http-nio-8081-exec-2] ERROR c.h.hr.service.CandidateService - Unsupported document format: The PDF file '84df5d42-1488-4645-9c3b-c3070fa163fe-SanghamitraResume.pdf' has an unsupported format. Please try one of these solutions:

1. Open the PDF in Adobe Reader and 'Save As' a new PDF
2. Use an online PDF converter (like SmallPDF.com) to re-save the file
3. Ensure the PDF is not password-protected or encrypted
4. If it's a scanned document, try using OCR software first
5. Save as PDF version 1.4 or higher (not PDF/A or PDF/X)
2025-06-22 00:40:12 [http-nio-8081-exec-2] ERROR c.h.hr.controller.HRController - Error uploading resume: SanghamitraResume.pdf for session: demo_1750532980957_3153
java.lang.RuntimeException: DOCUMENT_FORMAT_ERROR: The PDF file '84df5d42-1488-4645-9c3b-c3070fa163fe-SanghamitraResume.pdf' has an unsupported format. Please try one of these solutions:

1. Open the PDF in Adobe Reader and 'Save As' a new PDF
2. Use an online PDF converter (like SmallPDF.com) to re-save the file
3. Ensure the PDF is not password-protected or encrypted
4. If it's a scanned document, try using OCR software first
5. Save as PDF version 1.4 or higher (not PDF/A or PDF/X)
	at com.hackathon.hr.service.CandidateService.processResume(CandidateService.java:171)
	at com.hackathon.hr.service.CandidateService.processResume(CandidateService.java:117)
	at com.hackathon.hr.controller.HRController.uploadResume(HRController.java:385)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.hackathon.hr.config.HeaderConfig$HeaderFilter.doFilter(HeaderConfig.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:765)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.hackathon.hr.exception.UnsupportedDocumentFormatException: The PDF file '84df5d42-1488-4645-9c3b-c3070fa163fe-SanghamitraResume.pdf' has an unsupported format. Please try one of these solutions:

1. Open the PDF in Adobe Reader and 'Save As' a new PDF
2. Use an online PDF converter (like SmallPDF.com) to re-save the file
3. Ensure the PDF is not password-protected or encrypted
4. If it's a scanned document, try using OCR software first
5. Save as PDF version 1.4 or higher (not PDF/A or PDF/X)
	at com.hackathon.hr.service.TextractService.extractText(TextractService.java:83)
	at com.hackathon.hr.service.CandidateService.processResume(CandidateService.java:136)
	... 60 common frames omitted
Caused by: software.amazon.awssdk.services.textract.model.UnsupportedDocumentException: Request has unsupported document format (Service: Textract, Status Code: 400, Request ID: a8d47c04-63b8-4480-9505-e7daab4bd915)
	at software.amazon.awssdk.core.internal.http.CombinedResponseHandler.handleErrorResponse(CombinedResponseHandler.java:125)
	at software.amazon.awssdk.core.internal.http.CombinedResponseHandler.handleResponse(CombinedResponseHandler.java:82)
	at software.amazon.awssdk.core.internal.http.CombinedResponseHandler.handle(CombinedResponseHandler.java:60)
	at software.amazon.awssdk.core.internal.http.CombinedResponseHandler.handle(CombinedResponseHandler.java:41)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.HandleResponseStage.execute(HandleResponseStage.java:40)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.HandleResponseStage.execute(HandleResponseStage.java:30)
	at software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallAttemptTimeoutTrackingStage.execute(ApiCallAttemptTimeoutTrackingStage.java:72)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallAttemptTimeoutTrackingStage.execute(ApiCallAttemptTimeoutTrackingStage.java:42)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.TimeoutExceptionHandlingStage.execute(TimeoutExceptionHandlingStage.java:78)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.TimeoutExceptionHandlingStage.execute(TimeoutExceptionHandlingStage.java:40)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallAttemptMetricCollectionStage.execute(ApiCallAttemptMetricCollectionStage.java:52)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallAttemptMetricCollectionStage.execute(ApiCallAttemptMetricCollectionStage.java:37)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.RetryableStage.execute(RetryableStage.java:81)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.RetryableStage.execute(RetryableStage.java:36)
	at software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)
	at software.amazon.awssdk.core.internal.http.StreamManagingStage.execute(StreamManagingStage.java:56)
	at software.amazon.awssdk.core.internal.http.StreamManagingStage.execute(StreamManagingStage.java:36)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallTimeoutTrackingStage.executeWithTimer(ApiCallTimeoutTrackingStage.java:80)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallTimeoutTrackingStage.execute(ApiCallTimeoutTrackingStage.java:60)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallTimeoutTrackingStage.execute(ApiCallTimeoutTrackingStage.java:42)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallMetricCollectionStage.execute(ApiCallMetricCollectionStage.java:50)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallMetricCollectionStage.execute(ApiCallMetricCollectionStage.java:32)
	at software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)
	at software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ExecutionFailureExceptionReportingStage.execute(ExecutionFailureExceptionReportingStage.java:37)
	at software.amazon.awssdk.core.internal.http.pipeline.stages.ExecutionFailureExceptionReportingStage.execute(ExecutionFailureExceptionReportingStage.java:26)
	at software.amazon.awssdk.core.internal.http.AmazonSyncHttpClient$RequestExecutionBuilderImpl.execute(AmazonSyncHttpClient.java:224)
	at software.amazon.awssdk.core.internal.handler.BaseSyncClientHandler.invoke(BaseSyncClientHandler.java:103)
	at software.amazon.awssdk.core.internal.handler.BaseSyncClientHandler.doExecute(BaseSyncClientHandler.java:173)
	at software.amazon.awssdk.core.internal.handler.BaseSyncClientHandler.lambda$execute$1(BaseSyncClientHandler.java:80)
	at software.amazon.awssdk.core.internal.handler.BaseSyncClientHandler.measureApiCallSuccess(BaseSyncClientHandler.java:182)
	at software.amazon.awssdk.core.internal.handler.BaseSyncClientHandler.execute(BaseSyncClientHandler.java:74)
	at software.amazon.awssdk.core.client.handler.SdkSyncClientHandler.execute(SdkSyncClientHandler.java:45)
	at software.amazon.awssdk.awscore.client.handler.AwsSyncClientHandler.execute(AwsSyncClientHandler.java:53)
	at software.amazon.awssdk.services.textract.DefaultTextractClient.detectDocumentText(DefaultTextractClient.java:898)
	at com.hackathon.hr.service.TextractService.extractText(TextractService.java:54)
	... 61 common frames omitted
2025-06-22 00:40:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:40:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{success=false, errorType=format, details= The PDF file '84df5d42-1488-4645-9c3b-c3070fa163fe-Sangha (truncated)...]
2025-06-22 00:40:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:40:12 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-22 00:40:12 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile, String)
2025-06-22 00:40:12 [http-nio-8081-exec-6] DEBUG c.h.h.s.SessionManagementService - Session validation successful for ID: demo_1750532980957_3153
2025-06-22 00:40:12 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Processing resume upload: Aarav Sharma - Junior Developer.pdf for session: demo_1750532980957_3153
2025-06-22 00:40:16 [http-nio-8081-exec-6] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully to bucket hr-hiring-resumes-js with key: resumes/4296ae4a-90ef-43f1-8184-67cc3c4c2a41-Aarav Sharma - Junior Developer.pdf
2025-06-22 00:40:16 [http-nio-8081-exec-6] INFO  c.h.hr.service.TextractService - Extracting text from s3://hr-hiring-resumes-js/resumes/4296ae4a-90ef-43f1-8184-67cc3c4c2a41-Aarav Sharma - Junior Developer.pdf
2025-06-22 00:40:21 [http-nio-8081-exec-6] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/4296ae4a-90ef-43f1-8184-67cc3c4c2a41-Aarav Sharma - Junior Developer.pdf (extracted 128 lines)
2025-06-22 00:40:21 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Aarav Sharma
Junior Software Developer
aarav.sharma@email.com
E
+91 98765 43210
linkedin.com/in/aaravsharma
github.com/aaravsharma
Jaipur, Rajasthan, India
Professional Summary
Technical Skills
Enthusiastic Junior Software Developer with 2+ years
FRONTEND
of experience in web development using modern
HTML5
CSS3
JavaScript
React
technologies. Passionate about creating clean,
Bootstrap
efficient code and building user-friendly applications.
Strong foundation in JavaScript, React, and Node js
BACKEND
with hands-on experience in full-stack development
Node.js
Express.js
PHP
REST APIs
projects. Eager to contribute to innovative software
solutions and grow within a dynamic development
DATABASES
team.
MongoDB
MySQL
TOOLS & TECHNOLOGIES
Git
GitHub
VS Code
Postman
Professional Experience
JWT
APIS & INTEGRATIONS
Junior Software Developer
TechStart Solutions Pvt Ltd
Jun 2022 Present
Stripe API
Local Storage
JavaScript
React
Node.js
MongoDB
Express.js
Education
Developed responsive web applications using React and
JavaScript ES6+
Bachelor of Computer
Built REST APIs using Node js and Express js serving
10,000+ daily requests
Applications (BCA)
University of Rajasthan
Implemented user authentication and authorization using
2019 2022
JWT tokens
Collaborated with senior developers using Git for version
control and code reviews
Certifications
Optimized database queries in MongoDB reducing
response time by 25%
JavaScript Fundamentals freeCodeCamp
React Developer Course Udemy
Participated in agile development cycles with daily
Node Certification Coursera
standups and sprint planning
Git Version Control Codecademy
Languages
Hindi: Native
Web Development Intern
English: Fluent
Digital Innovators
Jan 2022 May 2022
Rajasthani: Native
HTML5
CSS3
JavaScript
Bootstrap
MySQL
Created static websites using HTML5, CSS3, and
Bootstrap framework
Implemented interactive features using vanilla JavaScript
Assisted in maintaining MySQL databases and writing
basic SQL queries
Fixed UI bugs and improved cross-browser compatibility
Learned modern development practices and coding
standards
Key Projects
E-Commerce Shopping Platform
React
Node.js
Express.js
MongoDB
JWT
Stripe API
Built a full-stack e-commerce application with React frontend
and Node.js backend. Implemented user authentication using
JWT, integrated Stripe payment gateway, and created admin
dashboard for inventory management. Used MongoDB for
data storage and Express.j js for API development.
Task Management System
JavaScript
React
Local Storage
CSS3
Bootstrap
Developed a responsive task management application using
React and JavaScript. Features include task creation, editing,
deletion, and status tracking. Implemented local storage for
data persistence and used Bootstrap for responsive design
across devices.
Restaurant Website
HTML5
CSS3
JavaScript
MySQL
PHP
Created a dynamic restaurant website with online reservation
system. Used HTML5 and CSS3 for layout and styling,
JavaScript for interactive features, and PHP with MySQL for
backend functionality including reservation management and
menu display.

2025-06-22 00:40:26 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/cleanup-check", parameters={}
2025-06-22 00:40:26 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#checkAndCleanupSessions()
2025-06-22 00:40:26 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:40:26 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{sessionExpired=false, dataCleanupRequired=false, timestamp=2025-06-22T00:40:26.243602}]
2025-06-22 00:40:26 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:40:27 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"HTML5\",\n    \"CSS3\",\n    \"JavaScript\",\n    \"React\",\n    \"Bootstrap\",\n    \"Node.js\",\n    \"Express.js\",\n    \"PHP\",\n    \"REST APIs\",\n    \"JWT\",\n    \"Stripe API\",\n    \"Local Storage\",\n    \"JavaScript ES6+\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Communication\",\n    \"Problem-solving\",\n    \"Adaptability\"\n  ],\n  \"experience_level\": \"ENTRY\",\n  \"education\": \"Bachelor of Computer Applications (BCA)\",\n  \"years_of_experience\": 2,\n  \"certifications\": [\n    \"JavaScript Fundamentals - freeCodeCamp\",\n    \"React Developer Course - Udemy\",\n    \"Node Certification - Coursera\",\n    \"Git Version Control - Codecademy\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"Web Development\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"Node.js\",\n    \"PHP\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Bootstrap\",\n    \"Express.js\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Built REST APIs using Node.js and Express.js serving 10,000+ daily requests\",\n    \"Implemented user authentication and authorization using JWT tokens\",\n    \"Optimized database queries in MongoDB reducing response time by 25%\"\n  ],\n  \"summary\": \"Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":931,"outputTokens":505,"totalTokens":1436,"cacheReadInputTokenCount":0,"cacheWriteInputTokenCount":0}}
2025-06-22 00:40:27 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "HTML5",
    "CSS3",
    "JavaScript",
    "React",
    "Bootstrap",
    "Node.js",
    "Express.js",
    "PHP",
    "REST APIs",
    "JWT",
    "Stripe API",
    "Local Storage",
    "JavaScript ES6+"
  ],
  "soft_skills": [
    "Collaboration",
    "Communication",
    "Problem-solving",
    "Adaptability"
  ],
  "experience_level": "ENTRY",
  "education": "Bachelor of Computer Applications (BCA)",
  "years_of_experience": 2,
  "certifications": [
    "JavaScript Fundamentals - freeCodeCamp",
    "React Developer Course - Udemy",
    "Node Certification - Coursera",
    "Git Version Control - Codecademy"
  ],
  "industries": [
    "Software Development",
    "Web Development"
  ],
  "programming_languages": [
    "JavaScript",
    "Node.js",
    "PHP"
  ],
  "frameworks": [
    "React",
    "Bootstrap",
    "Express.js"
  ],
  "tools": [
    "Git",
    "GitHub",
    "VS Code",
    "Postman"
  ],
  "databases": [
    "MongoDB",
    "MySQL"
  ],
  "cloud_platforms": [],
  "key_achievements": [
    "Built REST APIs using Node.js and Express.js serving 10,000+ daily requests",
    "Implemented user authentication and authorization using JWT tokens",
    "Optimized database queries in MongoDB reducing response time by 25%"
  ],
  "summary": "Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects."
}
```
2025-06-22 00:40:27 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Aarav Sharma - Junior Developer.pdf
2025-06-22 00:40:27 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Processed candidate: Aarav Sharma - Junior Developer.pdf with ID: bd01ad9c-3722-4bef-8ab4-0591d5e48f0a
2025-06-22 00:40:27 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Aarav Sharma - Junior Developer.pdf (ID: bd01ad9c-3722-4bef-8ab4-0591d5e48f0a) in 14445ms for session: demo_1750532980957_3153
2025-06-22 00:40:27 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:40:27 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Aarav Sharma - Junior Developer.pdf, success=true, extractedData={experienceLevel=ENTRY, s (truncated)...]
2025-06-22 00:40:27 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:40:27 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-22 00:40:27 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile, String)
2025-06-22 00:40:27 [http-nio-8081-exec-5] DEBUG c.h.h.s.SessionManagementService - Session validation successful for ID: demo_1750532980957_3153
2025-06-22 00:40:27 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Processing resume upload: Anjali Patel - Data Analyst.pdf for session: demo_1750532980957_3153
2025-06-22 00:40:29 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/status", parameters={}
2025-06-22 00:40:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getSessionStatus()
2025-06-22 00:40:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:40:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{queueLength=0, remainingMinutes=7, estimatedWaitTime=7, available=false, remainingSeconds=372, sess (truncated)...]
2025-06-22 00:40:29 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:40:32 [http-nio-8081-exec-5] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully to bucket hr-hiring-resumes-js with key: resumes/23c962ca-ea36-4abe-9a05-eedcbd6541bf-Anjali Patel - Data Analyst.pdf
2025-06-22 00:40:32 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Extracting text from s3://hr-hiring-resumes-js/resumes/23c962ca-ea36-4abe-9a05-eedcbd6541bf-Anjali Patel - Data Analyst.pdf
2025-06-22 00:40:40 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/23c962ca-ea36-4abe-9a05-eedcbd6541bf-Anjali Patel - Data Analyst.pdf (extracted 115 lines)
2025-06-22 00:40:40 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Patel
S Intelligence Specialist
anjali.patel@email.com
+91 97845 62310
linkedin.com/in/anjalipatel
Bangalore, Karnataka, India
Professional Summary
Technical Skills
Innovative Data Analyst with 6+ years of experience in
transforming complex datasets into strategic business
Programming
insights for Indian tech startups and MNCs. Expert in
Python
R
SQL
Java
Scala
machine learning, statistical modeling, and data
visualization with proven track record of improving
business efficiency by 50% and reducing costs by
Databases
₹30 lakh annually through data-driven
recommendations.
MySQL
PostgreSQL
MongoDB
Cassandra
Snowflake
Professional Experience
Analytics & ML
Senior Data Analyst
Pandas
NumPy
Scikit-learn
TensorFlow
Flipkart Group
Feb 2022 Present
Statistical Modeling
Developed ML models for customer behavior analysis
processing 10M+ transactions daily
Created automated dashboards reducing reporting time by
Visualization
70% for 15+ stakeholders
Led data quality initiatives improving accuracy by 95%
Tableau
Power BI
matplotlib
seaborn
across e-commerce platform
D3.js
Implemented A/B testing framework increasing conversion
rates by 28%
Built recommendation engines improving customer
engagement by 35%
Cloud Platforms
AWS
Azure
GCP
Spark
Hadoop
Data Analyst
Infosys Limited
Jun 2020 Jan 2022
Analyzed financial data for global banking clients using
Python and SQL
Developed predictive models for fraud detection with 92%
Key Projects
accuracy
Created Power BI dashboards for C-level executives and
stakeholders
E-commerce Customer Segmentation
Optimized database queries improving performance by
Built ML clustering model using K-means and RFM
45%
analysis to segment 5M+ customers, enabling
personalized marketing campaigns with 40% higher
conversion rates.
Junior Data Analyst
Tata Consultancy Services
Jul 2018 May 2020
Real-time Fraud Detection System
Supported market research analysis for retail and
Developed ensemble learning model combining
healthcare clients
Random Forest and XGBoost achieving 94% accuracy
Developed Excel-based models for financial forecasting
in detecting fraudulent transactions for fintech
and budgeting
application.
Assisted in data migration projects and quality assurance
testing
Supply Chain Optimization Dashboard
Created interactive Tableau dashboard tracking 50+
KPIs across inventory, logistics, and vendor
performance, reducing operational costs by ₹25 lakh
annually.
Education
Master of Technology (Computer Science)
Indian Institute of Technology, Bombay
Certifications
2016 2018
AWS Certified Data Analytics Specialty (2024)
Bachelor of Engineering (Information
Technology)
Google Professional Data Engineer (2023)
Gujarat Technological University
2012 2016
Microsoft Azure Data Scientist Associate (2023)
Tableau Desktop Certified Professional (2022)
Google Analytics Individual Qualification (2022)
Languages
Hindi (Native)
English (Fluent)
Gujarati (Native)
Tamil (Conversational)

2025-06-22 00:40:44 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/cleanup-check", parameters={}
2025-06-22 00:40:44 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#checkAndCleanupSessions()
2025-06-22 00:40:44 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:40:44 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{sessionExpired=false, dataCleanupRequired=false, timestamp=2025-06-22T00:40:44.274045}]
2025-06-22 00:40:44 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:40:46 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Machine Learning\",\n    \"Statistical Modeling\",\n    \"Data Visualization\",\n    \"Data Quality Initiatives\",\n    \"A/B Testing\",\n    \"Recommendation Engines\",\n    \"Predictive Modeling\",\n    \"Fraud Detection\",\n    \"Database Query Optimization\",\n    \"Customer Segmentation\",\n    \"Real-time Fraud Detection\",\n    \"Supply Chain Optimization\"\n  ],\n  \"soft_skills\": [\n    \"Innovative\",\n    \"Analytical\",\n    \"Leadership\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Technology (Computer Science)\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"AWS Certified Data Analytics Specialty\",\n    \"Google Professional Data Engineer\",\n    \"Microsoft Azure Data Scientist Associate\",\n    \"Tableau Desktop Certified Professional\",\n    \"Google Analytics Individual Qualification\"\n  ],\n  \"industries\": [\n    \"Tech Startups\",\n    \"E-commerce\",\n    \"Global Banking\",\n    \"Retail\",\n    \"Healthcare\",\n    \"Fintech\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R\",\n    \"SQL\",\n    \"Java\",\n    \"Scala\"\n  ],\n  \"frameworks\": [\n    \"Pandas\",\n    \"NumPy\",\n    \"Scikit-learn\",\n    \"TensorFlow\",\n    \"Spark\",\n    \"Hadoop\"\n  ],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"matplotlib\",\n    \"seaborn\",\n    \"D3.js\",\n    \"Excel\"\n  ],\n  \"databases\": [\n    \"MySQL\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"Cassandra\",\n    \"Snowflake\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\",\n    \"GCP\"\n  ],\n  \"key_achievements\": [\n    \"Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.\",\n    \"Increased conversion rates by 28% by implementing an A/B testing framework.\",\n    \"Achieved 94% accuracy in detecting fraudulent transactions using an ensemble learning model.\"\n  ],\n  \"summary\": \"Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs through data-driven recommendations.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":935,"outputTokens":630,"totalTokens":1565,"cacheReadInputTokenCount":0,"cacheWriteInputTokenCount":0}}
2025-06-22 00:40:46 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Machine Learning",
    "Statistical Modeling",
    "Data Visualization",
    "Data Quality Initiatives",
    "A/B Testing",
    "Recommendation Engines",
    "Predictive Modeling",
    "Fraud Detection",
    "Database Query Optimization",
    "Customer Segmentation",
    "Real-time Fraud Detection",
    "Supply Chain Optimization"
  ],
  "soft_skills": [
    "Innovative",
    "Analytical",
    "Leadership"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Technology (Computer Science)",
  "years_of_experience": 6,
  "certifications": [
    "AWS Certified Data Analytics Specialty",
    "Google Professional Data Engineer",
    "Microsoft Azure Data Scientist Associate",
    "Tableau Desktop Certified Professional",
    "Google Analytics Individual Qualification"
  ],
  "industries": [
    "Tech Startups",
    "E-commerce",
    "Global Banking",
    "Retail",
    "Healthcare",
    "Fintech"
  ],
  "programming_languages": [
    "Python",
    "R",
    "SQL",
    "Java",
    "Scala"
  ],
  "frameworks": [
    "Pandas",
    "NumPy",
    "Scikit-learn",
    "TensorFlow",
    "Spark",
    "Hadoop"
  ],
  "tools": [
    "Tableau",
    "Power BI",
    "matplotlib",
    "seaborn",
    "D3.js",
    "Excel"
  ],
  "databases": [
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Cassandra",
    "Snowflake"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure",
    "GCP"
  ],
  "key_achievements": [
    "Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.",
    "Increased conversion rates by 28% by implementing an A/B testing framework.",
    "Achieved 94% accuracy in detecting fraudulent transactions using an ensemble learning model."
  ],
  "summary": "Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs through data-driven recommendations."
}
```
2025-06-22 00:40:46 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Anjali Patel - Data Analyst.pdf
2025-06-22 00:40:46 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Processed candidate: Anjali Patel - Data Analyst.pdf with ID: 5782801e-0000-4c4b-8fd5-119ee58af1ab
2025-06-22 00:40:46 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Anjali Patel - Data Analyst.pdf (ID: 5782801e-0000-4c4b-8fd5-119ee58af1ab) in 18504ms for session: demo_1750532980957_3153
2025-06-22 00:40:46 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:40:46 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Anjali Patel - Data Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, skil (truncated)...]
2025-06-22 00:40:46 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:40:46 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-22 00:40:46 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile, String)
2025-06-22 00:40:46 [http-nio-8081-exec-10] DEBUG c.h.h.s.SessionManagementService - Session validation successful for ID: demo_1750532980957_3153
2025-06-22 00:40:46 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Processing resume upload: Karan Singh - DevOps Engineer.pdf for session: demo_1750532980957_3153
2025-06-22 00:40:48 [http-nio-8081-exec-10] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully to bucket hr-hiring-resumes-js with key: resumes/1f855585-ae24-4a0e-8cb9-69a702bda4d2-Karan Singh - DevOps Engineer.pdf
2025-06-22 00:40:48 [http-nio-8081-exec-10] INFO  c.h.hr.service.TextractService - Extracting text from s3://hr-hiring-resumes-js/resumes/1f855585-ae24-4a0e-8cb9-69a702bda4d2-Karan Singh - DevOps Engineer.pdf
2025-06-22 00:40:58 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/cleanup-check", parameters={}
2025-06-22 00:40:58 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#checkAndCleanupSessions()
2025-06-22 00:40:58 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:40:58 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{sessionExpired=false, dataCleanupRequired=false, timestamp=2025-06-22T00:40:58.044971}]
2025-06-22 00:40:58 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:00 [http-nio-8081-exec-10] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/1f855585-ae24-4a0e-8cb9-69a702bda4d2-Karan Singh - DevOps Engineer.pdf (extracted 207 lines)
2025-06-22 00:41:00 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
karan singh@email.com
+91 97531 86420
Karan Singh
linkedin karansingh
DevOps Engineer & Cloud Architect
STATUS ACTIVE UPTIME YEARS DEPLOYMENTS 1000+
github.com/karansingh
Gurgaon, Haryana, India
$ cat professional_summary.txt
TECHNICAL ARSENAL
>
CLOUD PLATFORMS
Experienced DevOps Engineer with 5+ years of expertise in automating
AWS
AWS
EC2
AWS EKS
AWS
RDS
AWS
deployment pipelines, managing cloud infrastructure, and orchestrating
AWS CloudWatch
AWS
CodePipeline
AWS CLI
containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD
automation with strong background in Infrastructure as Code and monitoring
solutions. Proven track record of reducing deployment time by 80% and
CONTAINERIZATION
improving system reliability to 99.9% uptime through robust DevOps practices.
Docker
Kubernetes
Docker Swarm
Helm
Container Registry
$ grep -r "experience" /career/history
CI/CD TOOLS
[PROCESS]
Jenkins
GitLab CI
GitHub Actions
Git
Maven
Senior DevOps Engineer
SonarQube
Paytm (One97 Communications)
Jan 2022 Present
AWS
Kubernetes
Jenkins
Terraform
Ansible
Prometheus
Grafana
ELK Stack
INFRASTRUCTURE AS CODE
Architected AWS cloud infrastructure using Terraform managing 100+ EC2 instances
Terraform
Ansible
CloudFormation
YAML
JSON
and RDS clusters
Implemented Kubernetes orchestration for microservices serving 50M+ daily
transactions
MONITORING LOGGING
Built Jenkins CI/CD pipelines reducing deployment time from 4 hours to 30 minutes
Prometheus
Grafana
ELK Stack
Alertmanager
Elasticsearch
Kibana
Configured monitoring stack using Prometheus and Grafana achieving 99.9% uptime SLA
Automated infrastructure provisioning using Ansible playbooks saving 20 hours/week
Implemented ELK Stack for centralized logging and real-time log analysis
SYSTEM ADMINISTRATION
Managed Docker container registry and optimized image sizes by 60%
Linux
Shell Scripting
Nginx
Apache
Tomcat
Redis
[PROCESS]
# PERFORMANCE METRICS
DevOps Engineer
Nagarro Software
Mar 2021 Dec 2021
99.9%
80%
AWS EC2
Docker Swarm
GitLab CI
CloudFormation
Nginx
Redis
SYSTEM UPTIME
DEPLOY TIME REDUCTION
Deployed applications on AWS EC2 using Docker Swarm for container orchestration
1000+
100+
Created GitLab CI pipelines for automated testing and deployment processes
DEPLOYMENTS
EC2 INSTANCES
Implemented infrastructure using AWS CloudFormation templates
Configured Nginx load balancers for high availability and traffic distribution
SYSTEM CONFIGURATION
Set up Redis clusters for caching and session management
Optimized application performance resulting in 40% faster response times
Bachelor of Technology (Information
Technology)
Guru Gobind Singh Indraprastha University
2016 2020
(PROCESS)
Junior DevOps Engineer
#
SECURITY CERTIFICATES
Mindtree Limited
Jun 2020 Feb 2021
Linux
Shell Scripting
Git
Maven
Tomcat
AWS Certified DevOps Engineer Professional
Managed Linux servers and wrote Shell scripts for automation tasks
Certified Kubernetes Administrator (CKA)
Implemented Git workflows and branching strategies for development teams
Docker Certified Associate
Configured Maven build processes for Java applications
Terraform Associate Certification
Deployed applications on Apache Tomcat servers
Learned infrastructure management and deployment best practices
Jenkins Certified Engineer
AWS Solutions Architect Associate
Prometheus Certified Associate
$ ls -la /projects/featured
# LANGUAGE SUPPORT
[PROJECT]
[PROJECT]
Microservices Platform
CI/CD Automation Pipeline
Hindi: Native
Kubernetes
Docker
AWS
EKS
Terraform
Jenkins
GitLab
Docker
English: Fluent
Helm
AWS CodePipeline
SonarQube
Punjabi: Native
Urdu: Conversational
Built scalable microservices platform on
Implemented end-to-end CI/CD pipeline
AWS EKS using Kubernetes and Docker.
using Jenkins and GitLab CI with Docker
Automated infrastructure deployment with
containerization. Integrated AWS
# ADDITIONAL MODULES
Terraform and managed application
CodePipeline for cloud-native deployments
deployments using Helm charts for
and SonarQube for code quality analysis.
Microservices Architecture
consistent and reliable releases.
Site Reliability Engineering
Cloud Security Best Practices
Disaster Recovery Planning
Cost Optimization Strategies
Agile DevOps Methodologies
[PROJECT]
[PROJECT]
Infrastructure Monitoring
Infrastructure as Code
SYSTEM STATUS
Prometheus
Grafana
ELK Stack
Terraform
Ansible
CloudFormation
AWS CloudWatch
Alertmanager
Shell Scripting
AWS
CLI
OPERATIONAL: All systems running
MONITORING: Active 24/7
BACKUP: Automated daily
Set up comprehensive monitoring solution
Automated infrastructure provisioning
SECURITY: Enhanced protection
PERFORMANCE: Optimized
using Prometheus and Grafana with ELK
using Terraform and Ansible with AWS
Stack for log aggregation. Configured AWS
CloudFormation. Created Shell scripts and
CloudWatch and Alertmanager for proactive
AWS CLI automation for infrastructure
incident management.
management and deployment processes.

2025-06-22 00:41:02 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/status", parameters={}
2025-06-22 00:41:02 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getSessionStatus()
2025-06-22 00:41:02 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:02 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{queueLength=0, remainingMinutes=6, estimatedWaitTime=6, available=false, remainingSeconds=339, sess (truncated)...]
2025-06-22 00:41:02 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:08 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"AWS\", \"Docker\", \"Kubernetes\", \"CI/CD automation\", \"Infrastructure as Code\", \"Monitoring solutions\",\n    \"Terraform\", \"Ansible\", \"Prometheus\", \"Grafana\", \"ELK Stack\", \"Linux\", \"Shell Scripting\", \"Nginx\",\n    \"Apache\", \"Tomcat\", \"Redis\", \"Git\", \"Maven\", \"SonarQube\", \"Helm\", \"Container Registry\", \"Jenkins\",\n    \"GitLab CI\", \"GitHub Actions\", \"CloudFormation\", \"YAML\", \"JSON\", \"Alertmanager\", \"Elasticsearch\",\n    \"Kibana\", \"AWS CLI\", \"Docker Swarm\", \"Microservices Architecture\", \"Site Reliability Engineering\",\n    \"Cloud Security Best Practices\", \"Disaster Recovery Planning\", \"Cost Optimization Strategies\",\n    \"Agile DevOps Methodologies\"\n  ],\n  \"soft_skills\": [\n    \"Problem-solving\", \"Automation\", \"Optimization\", \"System reliability\", \"Team collaboration\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Information Technology)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified DevOps Engineer Professional\",\n    \"Certified Kubernetes Administrator (CKA)\",\n    \"Docker Certified Associate\",\n    \"Terraform Associate Certification\",\n    \"Jenkins Certified Engineer\",\n    \"AWS Solutions Architect Associate\",\n    \"Prometheus Certified Associate\"\n  ],\n  \"industries\": [\n    \"IT\", \"Fintech\", \"Consulting\"\n  ],\n  \"programming_languages\": [\n    \"Shell Scripting\"\n  ],\n  \"frameworks\": [\n    \"Kubernetes\", \"Docker Swarm\", \"Helm\"\n  ],\n  \"tools\": [\n    \"Terraform\", \"Ansible\", \"Jenkins\", \"GitLab CI\", \"GitHub Actions\", \"Git\", \"Maven\", \"SonarQube\",\n    \"Prometheus\", \"Grafana\", \"ELK Stack\", \"Alertmanager\", \"Elasticsearch\", \"Kibana\", \"AWS CLI\",\n    \"Nginx\", \"Apache\", \"Tomcat\", \"Redis\", \"AWS CloudFormation\", \"Container Registry\"\n  ],\n  \"databases\": [\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Reduced deployment time by 80%\",\n    \"Improved system reliability to 99.9% uptime\",\n    \"Optimized Docker image sizes by 60%\"\n  ],\n  \"summary\": \"Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1426,"outputTokens":681,"totalTokens":2107,"cacheReadInputTokenCount":0,"cacheWriteInputTokenCount":0}}
2025-06-22 00:41:08 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "AWS", "Docker", "Kubernetes", "CI/CD automation", "Infrastructure as Code", "Monitoring solutions",
    "Terraform", "Ansible", "Prometheus", "Grafana", "ELK Stack", "Linux", "Shell Scripting", "Nginx",
    "Apache", "Tomcat", "Redis", "Git", "Maven", "SonarQube", "Helm", "Container Registry", "Jenkins",
    "GitLab CI", "GitHub Actions", "CloudFormation", "YAML", "JSON", "Alertmanager", "Elasticsearch",
    "Kibana", "AWS CLI", "Docker Swarm", "Microservices Architecture", "Site Reliability Engineering",
    "Cloud Security Best Practices", "Disaster Recovery Planning", "Cost Optimization Strategies",
    "Agile DevOps Methodologies"
  ],
  "soft_skills": [
    "Problem-solving", "Automation", "Optimization", "System reliability", "Team collaboration"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Information Technology)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified DevOps Engineer Professional",
    "Certified Kubernetes Administrator (CKA)",
    "Docker Certified Associate",
    "Terraform Associate Certification",
    "Jenkins Certified Engineer",
    "AWS Solutions Architect Associate",
    "Prometheus Certified Associate"
  ],
  "industries": [
    "IT", "Fintech", "Consulting"
  ],
  "programming_languages": [
    "Shell Scripting"
  ],
  "frameworks": [
    "Kubernetes", "Docker Swarm", "Helm"
  ],
  "tools": [
    "Terraform", "Ansible", "Jenkins", "GitLab CI", "GitHub Actions", "Git", "Maven", "SonarQube",
    "Prometheus", "Grafana", "ELK Stack", "Alertmanager", "Elasticsearch", "Kibana", "AWS CLI",
    "Nginx", "Apache", "Tomcat", "Redis", "AWS CloudFormation", "Container Registry"
  ],
  "databases": [
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Reduced deployment time by 80%",
    "Improved system reliability to 99.9% uptime",
    "Optimized Docker image sizes by 60%"
  ],
  "summary": "Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions."
}
```
2025-06-22 00:41:08 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Karan Singh - DevOps Engineer.pdf
2025-06-22 00:41:08 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Processed candidate: Karan Singh - DevOps Engineer.pdf with ID: 58e43b9b-50b1-47c8-9c58-3d6f197f3909
2025-06-22 00:41:08 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Karan Singh - DevOps Engineer.pdf (ID: 58e43b9b-50b1-47c8-9c58-3d6f197f3909) in 22583ms for session: demo_1750532980957_3153
2025-06-22 00:41:08 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:08 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Karan Singh - DevOps Engineer.pdf, success=true, extractedData={experienceLevel=SENIOR, sk (truncated)...]
2025-06-22 00:41:08 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:08 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-22 00:41:08 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile, String)
2025-06-22 00:41:08 [http-nio-8081-exec-2] DEBUG c.h.h.s.SessionManagementService - Session validation successful for ID: demo_1750532980957_3153
2025-06-22 00:41:08 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Processing resume upload: Mei Chen - Marketing Analyst.pdf for session: demo_1750532980957_3153
2025-06-22 00:41:18 [http-nio-8081-exec-2] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully to bucket hr-hiring-resumes-js with key: resumes/99b9bc19-f1c0-45f1-963b-a65600f2a1be-Mei Chen - Marketing Analyst.pdf
2025-06-22 00:41:18 [http-nio-8081-exec-2] INFO  c.h.hr.service.TextractService - Extracting text from s3://hr-hiring-resumes-js/resumes/99b9bc19-f1c0-45f1-963b-a65600f2a1be-Mei Chen - Marketing Analyst.pdf
2025-06-22 00:41:19 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/cleanup-check", parameters={}
2025-06-22 00:41:19 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#checkAndCleanupSessions()
2025-06-22 00:41:19 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:19 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{sessionExpired=false, dataCleanupRequired=false, timestamp=2025-06-22T00:41:19.528651}]
2025-06-22 00:41:19 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:26 [http-nio-8081-exec-2] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/99b9bc19-f1c0-45f1-963b-a65600f2a1be-Mei Chen - Marketing Analyst.pdf (extracted 88 lines)
2025-06-22 00:41:26 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Mei Chen
Marketing Analyst & Growth Strategist
mei.chen@email.com
+65 9876 5432
linkedin.com/in/meichen
i
Singapore
П
PROFESSIONAL SUMMARY
Core Skills
Data Analytics
95%
Data-driven Marketing Analyst with 6+ years of experience in
SQL & Python
90%
digital marketing analytics and customer insights across Asia-
Tableau & Power BI
88%
Pacific markets. Expert in transforming complex data into
actionable marketing strategies that drove 45% increase in ROI
Google Analytics
92%
and 35% growth in customer acquisition. Specialized in cross-
cultural marketing campaigns and multilingual market analysis.
A/B Testing
85%
Languages
PROFESSIONAL EXPERIENCE
Mandarin
English
Native
Fluent
Senior Marketing Analyst
Hindi
Shopee Singapore
Jan 2022 Present
Malay
Conversational
Basic
Analyzed user behavior data from 8 Southeast Asian markets with
100M+ active users
Developed attribution models improving campaign ROI
Education
measurement accuracy by 50%
Led A/B testing initiatives across mobile and web platforms with
28% conversion improvement
Master of Science in
Marketing Analytics
Created automated dashboards reducing manual reporting time by
National University of
75%
Singapore
2016 2018
Managed marketing analytics for flash sales generating S$50M+
revenue
Bachelor of Business
Administration
Nanyang Technological
University
Marketing Data Analyst
2012 2016
Grab Holdings
Mar 2020 Dec 2021
Performed cohort analysis for ride-hailing and food delivery
services across 6 countries
Certifications
Built predictive models for customer lifetime value with 89%
accuracy
Google Analytics 4 Certified
Optimized marketing spend allocation reducing CAC by 30%
across all verticals
Facebook Blueprint Certified
Conducted market research for new service launches in emerging
markets
Tableau Desktop Specialist
AWS Cloud Practitioner
Junior Marketing Analyst
Google Ads Certified
ByteDance (TikTok)
Jun 2018 Feb 2020
Analyzed viral content patterns and user engagement metrics for
HubSpot Marketing Analytics
APAC region
Created weekly performance reports for marketing campaigns
across 12 markets
Supported influencer marketing ROI analysis and campaign
optimization
Assisted in competitive analysis and market positioning strategies

2025-06-22 00:41:29 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/cleanup-check", parameters={}
2025-06-22 00:41:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#checkAndCleanupSessions()
2025-06-22 00:41:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{sessionExpired=false, dataCleanupRequired=false, timestamp=2025-06-22T00:41:29.772182}]
2025-06-22 00:41:29 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:30 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/status", parameters={}
2025-06-22 00:41:30 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getSessionStatus()
2025-06-22 00:41:30 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:30 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{queueLength=0, remainingMinutes=6, estimatedWaitTime=6, available=false, remainingSeconds=311, sess (truncated)...]
2025-06-22 00:41:30 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:31 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Data Analytics\",\n    \"SQL\",\n    \"Python\",\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\",\n    \"A/B Testing\",\n    \"Predictive Modeling\",\n    \"Marketing Spend Allocation\",\n    \"Market Research\"\n  ],\n  \"soft_skills\": [\n    \"Cross-cultural Marketing\",\n    \"Multilingual Market Analysis\",\n    \"Campaign Optimization\",\n    \"Customer Insights\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Science in Marketing Analytics\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"Google Analytics 4 Certified\",\n    \"Facebook Blueprint Certified\",\n    \"Tableau Desktop Specialist\",\n    \"AWS Cloud Practitioner\",\n    \"Google Ads Certified\",\n    \"HubSpot Marketing Analytics\"\n  ],\n  \"industries\": [\n    \"Digital Marketing\",\n    \"E-commerce\",\n    \"Ride-hailing\",\n    \"Food Delivery\",\n    \"Social Media\"\n  ],\n  \"programming_languages\": [\n    \"SQL\",\n    \"Python\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\"\n  ],\n  \"databases\": [\n    \"SQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Drove 45% increase in ROI and 35% growth in customer acquisition\",\n    \"Improved campaign ROI measurement accuracy by 50%\",\n    \"Achieved 28% conversion improvement through A/B testing initiatives\"\n  ],\n  \"summary\": \"Data-driven Marketing Analyst with 6+ years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":754,"outputTokens":482,"totalTokens":1236,"cacheReadInputTokenCount":0,"cacheWriteInputTokenCount":0}}
2025-06-22 00:41:31 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Data Analytics",
    "SQL",
    "Python",
    "Tableau",
    "Power BI",
    "Google Analytics",
    "A/B Testing",
    "Predictive Modeling",
    "Marketing Spend Allocation",
    "Market Research"
  ],
  "soft_skills": [
    "Cross-cultural Marketing",
    "Multilingual Market Analysis",
    "Campaign Optimization",
    "Customer Insights"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Science in Marketing Analytics",
  "years_of_experience": 6,
  "certifications": [
    "Google Analytics 4 Certified",
    "Facebook Blueprint Certified",
    "Tableau Desktop Specialist",
    "AWS Cloud Practitioner",
    "Google Ads Certified",
    "HubSpot Marketing Analytics"
  ],
  "industries": [
    "Digital Marketing",
    "E-commerce",
    "Ride-hailing",
    "Food Delivery",
    "Social Media"
  ],
  "programming_languages": [
    "SQL",
    "Python"
  ],
  "frameworks": [],
  "tools": [
    "Tableau",
    "Power BI",
    "Google Analytics"
  ],
  "databases": [
    "SQL"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Drove 45% increase in ROI and 35% growth in customer acquisition",
    "Improved campaign ROI measurement accuracy by 50%",
    "Achieved 28% conversion improvement through A/B testing initiatives"
  ],
  "summary": "Data-driven Marketing Analyst with 6+ years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis."
}
```
2025-06-22 00:41:31 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Mei Chen - Marketing Analyst.pdf
2025-06-22 00:41:31 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Processed candidate: Mei Chen - Marketing Analyst.pdf with ID: c977c712-a457-44ec-8867-a710bf48515b
2025-06-22 00:41:31 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Mei Chen - Marketing Analyst.pdf (ID: c977c712-a457-44ec-8867-a710bf48515b) in 23157ms for session: demo_1750532980957_3153
2025-06-22 00:41:31 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:31 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Mei Chen - Marketing Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, ski (truncated)...]
2025-06-22 00:41:31 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:34 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-22 00:41:34 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-22 00:41:34 [http-nio-8081-exec-8] DEBUG c.h.hr.controller.HRController - Retrieved 4 candidates
2025-06-22 00:41:34 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:34 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@cc31b36, com.hackathon.hr.model.Candidate@f15d850, com.hackathon.h (truncated)...]
2025-06-22 00:41:34 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:37 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-22 00:41:37 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-22 00:41:37 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 4 (Java Backend Developer)
2025-06-22 00:41:37 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Java Backend Developer
2025-06-22 00:41:37 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Java Backend Developer
2025-06-22 00:41:37 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 49.0 for candidate Karan Singh - DevOps Engineer.pdf and job Java Backend Developer
2025-06-22 00:41:37 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Anjali Patel - Data Analyst.pdf and job Java Backend Developer
2025-06-22 00:41:37 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Found 4 matches for job: Java Backend Developer
2025-06-22 00:41:37 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Found 4 matches for job ID: 4 in 32ms
2025-06-22 00:41:37 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:37 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=4, success=true, totalCandidates=4, jobTitle=Java Backend Developer, matchCount=4, matches=[c (truncated)...]
2025-06-22 00:41:37 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:41 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/cleanup-check", parameters={}
2025-06-22 00:41:41 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#checkAndCleanupSessions()
2025-06-22 00:41:41 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:41 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{sessionExpired=false, dataCleanupRequired=false, timestamp=2025-06-22T00:41:41.291404}]
2025-06-22 00:41:41 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:43 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-22 00:41:43 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-22 00:41:43 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 5 (DevOps Engineer - Cloud Infrastructure)
2025-06-22 00:41:43 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-22 00:41:43 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-22 00:41:43 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 81.0 for candidate Karan Singh - DevOps Engineer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-22 00:41:43 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Anjali Patel - Data Analyst.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-22 00:41:43 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Found 4 matches for job: DevOps Engineer - Cloud Infrastructure
2025-06-22 00:41:43 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Found 4 matches for job ID: 5 in 2ms
2025-06-22 00:41:43 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:43 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=5, success=true, totalCandidates=4, jobTitle=DevOps Engineer - Cloud Infrastructure, matchCou (truncated)...]
2025-06-22 00:41:43 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:49 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-22 00:41:49 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-22 00:41:49 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 10 (Senior Angular Developer)
2025-06-22 00:41:49 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 36.888888888888886 for candidate Aarav Sharma - Junior Developer.pdf and job Senior Angular Developer
2025-06-22 00:41:49 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Senior Angular Developer
2025-06-22 00:41:49 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Karan Singh - DevOps Engineer.pdf and job Senior Angular Developer
2025-06-22 00:41:49 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Anjali Patel - Data Analyst.pdf and job Senior Angular Developer
2025-06-22 00:41:49 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Found 4 matches for job: Senior Angular Developer
2025-06-22 00:41:49 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Found 4 matches for job ID: 10 in 1ms
2025-06-22 00:41:49 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:49 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=10, success=true, totalCandidates=4, jobTitle=Senior Angular Developer, matchCount=4, matches (truncated)...]
2025-06-22 00:41:49 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:56 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/cleanup-check", parameters={}
2025-06-22 00:41:56 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#checkAndCleanupSessions()
2025-06-22 00:41:56 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:56 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{sessionExpired=false, dataCleanupRequired=false, timestamp=2025-06-22T00:41:56.265560}]
2025-06-22 00:41:56 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:58 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-22 00:41:58 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-22 00:41:58 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 1 (Junior Frontend Developer)
2025-06-22 00:41:58 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 90.72727272727272 for candidate Aarav Sharma - Junior Developer.pdf and job Junior Frontend Developer
2025-06-22 00:41:58 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Junior Frontend Developer
2025-06-22 00:41:58 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.63636363636364 for candidate Karan Singh - DevOps Engineer.pdf and job Junior Frontend Developer
2025-06-22 00:41:58 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Anjali Patel - Data Analyst.pdf and job Junior Frontend Developer
2025-06-22 00:41:58 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Found 4 matches for job: Junior Frontend Developer
2025-06-22 00:41:58 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Found 4 matches for job ID: 1 in 1ms
2025-06-22 00:41:58 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:58 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=1, success=true, totalCandidates=4, jobTitle=Junior Frontend Developer, matchCount=4, matches (truncated)...]
2025-06-22 00:41:58 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:41:59 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/status", parameters={}
2025-06-22 00:41:59 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getSessionStatus()
2025-06-22 00:41:59 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:41:59 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{queueLength=0, remainingMinutes=5, estimatedWaitTime=5, available=false, remainingSeconds=282, sess (truncated)...]
2025-06-22 00:41:59 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:42:02 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-22 00:42:02 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-22 00:42:02 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 2 (Data Analyst - Tech & Analytics)
2025-06-22 00:42:02 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-22 00:42:02 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 57.54545454545455 for candidate Mei Chen - Marketing Analyst.pdf and job Data Analyst - Tech & Analytics
2025-06-22 00:42:02 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.63636363636364 for candidate Karan Singh - DevOps Engineer.pdf and job Data Analyst - Tech & Analytics
2025-06-22 00:42:02 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 44.63636363636364 for candidate Anjali Patel - Data Analyst.pdf and job Data Analyst - Tech & Analytics
2025-06-22 00:42:02 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Found 4 matches for job: Data Analyst - Tech & Analytics
2025-06-22 00:42:02 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Found 4 matches for job ID: 2 in 1ms
2025-06-22 00:42:02 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:42:02 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=2, success=true, totalCandidates=4, jobTitle=Data Analyst - Tech & Analytics, matchCount=4, m (truncated)...]
2025-06-22 00:42:02 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:42:07 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-22 00:42:07 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-22 00:42:07 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 4 (Java Backend Developer)
2025-06-22 00:42:07 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Java Backend Developer
2025-06-22 00:42:07 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Java Backend Developer
2025-06-22 00:42:07 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 49.0 for candidate Karan Singh - DevOps Engineer.pdf and job Java Backend Developer
2025-06-22 00:42:07 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Anjali Patel - Data Analyst.pdf and job Java Backend Developer
2025-06-22 00:42:07 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Found 4 matches for job: Java Backend Developer
2025-06-22 00:42:07 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Found 4 matches for job ID: 4 in 1ms
2025-06-22 00:42:07 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:42:07 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=4, success=true, totalCandidates=4, jobTitle=Java Backend Developer, matchCount=4, matches=[c (truncated)...]
2025-06-22 00:42:07 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:42:11 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-22 00:42:11 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-22 00:42:11 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 5 (DevOps Engineer - Cloud Infrastructure)
2025-06-22 00:42:11 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-22 00:42:11 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-22 00:42:11 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 81.0 for candidate Karan Singh - DevOps Engineer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-22 00:42:11 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Anjali Patel - Data Analyst.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-22 00:42:11 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Found 4 matches for job: DevOps Engineer - Cloud Infrastructure
2025-06-22 00:42:11 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Found 4 matches for job ID: 5 in 3ms
2025-06-22 00:42:11 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:42:11 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=5, success=true, totalCandidates=4, jobTitle=DevOps Engineer - Cloud Infrastructure, matchCou (truncated)...]
2025-06-22 00:42:11 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:42:11 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/session/cleanup-check", parameters={}
2025-06-22 00:42:11 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#checkAndCleanupSessions()
2025-06-22 00:42:11 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:42:11 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{sessionExpired=false, dataCleanupRequired=false, timestamp=2025-06-22T00:42:11.280438}]
2025-06-22 00:42:11 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:42:15 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-22 00:42:15 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-22 00:42:15 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 6 (Full Stack Developer - React/Django)
2025-06-22 00:42:15 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 36.0 for candidate Aarav Sharma - Junior Developer.pdf and job Full Stack Developer - React/Django
2025-06-22 00:42:15 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 47.0 for candidate Mei Chen - Marketing Analyst.pdf and job Full Stack Developer - React/Django
2025-06-22 00:42:15 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 49.0 for candidate Karan Singh - DevOps Engineer.pdf and job Full Stack Developer - React/Django
2025-06-22 00:42:15 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Anjali Patel - Data Analyst.pdf and job Full Stack Developer - React/Django
2025-06-22 00:42:15 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Found 4 matches for job: Full Stack Developer - React/Django
2025-06-22 00:42:15 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Found 4 matches for job ID: 6 in 1ms
2025-06-22 00:42:15 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-22 00:42:15 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=6, success=true, totalCandidates=4, jobTitle=Full Stack Developer - React/Django, matchCount= (truncated)...]
2025-06-22 00:42:15 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-22 00:42:25 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-22 00:42:25 [RMI TCP Connection(12)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-22 00:42:25 [RMI TCP Connection(12)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-22 00:42:25 [RMI TCP Connection(12)-127.0.0.1] DEBUG c.h.h.c.HeaderConfig$HeaderFilter - HeaderFilter destroyed
