2025-06-13 11:08:13 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 72197 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 11:08:13 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 11:08:13 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 11:08:13 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 11:08:13 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 11:08:15 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 11:08:15 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 11:08:15 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 11:08:15 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 11:08:15 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1757 ms
2025-06-13 11:08:17 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 5 sample jobs
2025-06-13 11:08:17 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 5 sample jobs
2025-06-13 11:08:17 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 11:08:17 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 11:08:17 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 19 mappings in 'requestMappingHandlerMapping'
2025-06-13 11:08:17 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 11:08:17 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 11:08:17 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 11:08:17 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 11:08:17 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.798 seconds (JVM running for 6.295)
2025-06-13 11:08:37 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 11:08:37 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 11:08:37 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 11:08:37 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 11:08:37 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 11:08:37 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@172a3bb9
2025-06-13 11:08:37 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@73eaf7b2
2025-06-13 11:08:37 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 11:08:37 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-13 11:08:37 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 11:08:37 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 11:08:37 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 5 jobs
2025-06-13 11:08:37 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 11:08:37 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 11:08:38 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@760335d4
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3205c2b4
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@57c34e76
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 11:08:38 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 11:08:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:08:38 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 11:08:38 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 11:08:38 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/matching.js", parameters={}
2025-06-13 11:08:38 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/upload.js", parameters={}
2025-06-13 11:08:38 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/candidates.js", parameters={}
2025-06-13 11:08:38 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 11:08:38 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 11:08:38 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:08:38 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:08:38 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:08:38 [http-nio-8081-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:08:38 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:08:38 [http-nio-8081-exec-7] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:08:38 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:08:38 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:08:38 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:08:38 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:08:38 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:08:38 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:08:38 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:08:38 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:08:38 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:08:38 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:08:38 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:08:38 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:08:39 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 11:08:39 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 11:08:39 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 11:08:39 [http-nio-8081-exec-8] DEBUG c.h.hr.controller.HRController - Retrieved 5 job requirements
2025-06-13 11:08:39 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 11:08:39 [http-nio-8081-exec-9] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 11:08:39 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:08:39 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 11:08:39 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:08:39 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@3fe0b439, com.hackathon.hr.model.JobRequirement@3b4480e8, com (truncated)...]
2025-06-13 11:08:39 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:08:39 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:08:52 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 11:08:52 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 11:08:52 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 11:08:52 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 11:08:52 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:09:18 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:09:18 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:09:18 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Processing resume upload: Aarav Sharma - Junior Developer.pdf
2025-06-13 11:09:22 [http-nio-8081-exec-1] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/485d185c-46c6-4e5f-b492-1bea9dbe101b-Aarav Sharma - Junior Developer.pdf
2025-06-13 11:09:30 [http-nio-8081-exec-1] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/485d185c-46c6-4e5f-b492-1bea9dbe101b-Aarav Sharma - Junior Developer.pdf
2025-06-13 11:09:30 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Aarav Sharma
Junior Software Developer
aarav.sharma@email.com
+91 98765 43210
linkedin.com/in/aaravsharma
github .com/aaravsharma
Jaipur, Rajasthan, India
Professional Summary
Technical Skills
Enthusiastic Junior Software Developer with 2+ years
FRONTEND
of experience in web development using modern
HTML5
CSS3
JavaScript
React
technologies. Passionate about creating clean,
efficient code and building user-friendly applications.
Bootstrap
Strong foundation in JavaScript, React, and Node is
BACKEND
with hands-on experience in full-stack development
Node.j
Express
PHP
REST APIs
projects. Eager to contribute to innovative software
solutions and grow within a dynamic development
DATABASES
team.
MongoDB
MySQL
TOOLS TECHNOLOGIES
Git GitHub
VS Code
Postman
Professional Experience
JWT
APIS INTEGRATIONS
Junior Software Developer
TechStart Solutions Pvt Ltd
Jun 2022 Present
Stripe API
Local Storage
JavaScript React Node.js MongoDB Express.js Git
Education
Developed responsive web applications using React and
JavaScript ES6+
Bachelor of Computer
Built REST APIs using Node js and Express js serving
10,000+ daily requests
Applications (BCA)
University of Rajasthan
Implemented user authentication and authorization using
2019 - 2022
JWT tokens
Collaborated with senior developers using Git for version
control and code reviews
Certifications
Optimized database queries in MongoDB reducing
.
response time by 25%
JavaScript Fundamentals freeCodeCamp
.
React Developer Course Udemy
Participated in agile development cycles with daily
.
Node js Certification Coursera
standups and sprint planning
.
Git Version Control Codecademy
Languages
Hindi: Native
Web Development Intern
English: Fluent
Digital Innovators
Jan 2022 May 2022
Rajasthani: Native
HTML5 CSS3 JavaScript Bootstrap MySQL
Created static websites using HTML5, CSS3, and
Bootstrap framework
Implemented interactive features using vanilla JavaScript
Assisted in maintaining MySQL databases and writing
basic SQL queries
Fixed UI bugs and improved cross-browser compatibility
Learned modern development practices and coding
standards
Key Projects
E-Commerce Shopping Platform
React
Node.j
Express
MongoDB
JWT
Stripe API
Built full-stack e-commerce application with React frontend
and Node js backend Implemented user authentication using
JWT. integrated Stripe payment gateway, and created admin
dashboard for inventory management. Used MongoDB for
data storage and Express js for API development.
Task Management System
JavaScript
React
Local Storage
CSS3
Bootstrap
Developed a responsive task management application using
React and JavaScript. Features include task creation, editing,
deletion. and status tracking. Implemented local storage for
data persistence and used Bootstrap for responsive design
across devices.
Restaurant Website
HTML5
CSS3
JavaScript
MySQL
PHP
Created dynamic restaurant website with online reservation
system. Used HTML5 and CSS3 for layout and styling,
JavaScript for interactive features, and PHP with MySQL for
backend functionality including reservation management and
menu display.

2025-06-13 11:09:38 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"HTML5\",\n    \"CSS3\",\n    \"JavaScript\",\n    \"React\",\n    \"Bootstrap\",\n    \"Node.js\",\n    \"Express\",\n    \"PHP\",\n    \"REST APIs\",\n    \"MongoDB\",\n    \"MySQL\",\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\",\n    \"JWT\",\n    \"Stripe API\",\n    \"Local Storage\",\n    \"JavaScript ES6+\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Communication\",\n    \"Problem-solving\",\n    \"Agile development\"\n  ],\n  \"experience_level\": \"ENTRY\",\n  \"education\": \"Bachelor of Computer Applications (BCA)\",\n  \"years_of_experience\": 2,\n  \"certifications\": [\n    \"JavaScript Fundamentals - freeCodeCamp\",\n    \"React Developer Course - Udemy\",\n    \"Node.js Certification - Coursera\",\n    \"Git Version Control - Codecademy\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"Web Development\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"Node.js\",\n    \"PHP\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Bootstrap\",\n    \"Express\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Built REST APIs using Node.js and Express.js serving 10,000+ daily requests\",\n    \"Optimized database queries in MongoDB reducing response time by 25%\",\n    \"Implemented user authentication and authorization using JWT tokens\"\n  ],\n  \"summary\": \"Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":920,"outputTokens":538,"totalTokens":1458}}
2025-06-13 11:09:38 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "HTML5",
    "CSS3",
    "JavaScript",
    "React",
    "Bootstrap",
    "Node.js",
    "Express",
    "PHP",
    "REST APIs",
    "MongoDB",
    "MySQL",
    "Git",
    "GitHub",
    "VS Code",
    "Postman",
    "JWT",
    "Stripe API",
    "Local Storage",
    "JavaScript ES6+"
  ],
  "soft_skills": [
    "Collaboration",
    "Communication",
    "Problem-solving",
    "Agile development"
  ],
  "experience_level": "ENTRY",
  "education": "Bachelor of Computer Applications (BCA)",
  "years_of_experience": 2,
  "certifications": [
    "JavaScript Fundamentals - freeCodeCamp",
    "React Developer Course - Udemy",
    "Node.js Certification - Coursera",
    "Git Version Control - Codecademy"
  ],
  "industries": [
    "Software Development",
    "Web Development"
  ],
  "programming_languages": [
    "JavaScript",
    "Node.js",
    "PHP"
  ],
  "frameworks": [
    "React",
    "Bootstrap",
    "Express"
  ],
  "tools": [
    "Git",
    "GitHub",
    "VS Code",
    "Postman"
  ],
  "databases": [
    "MongoDB",
    "MySQL"
  ],
  "cloud_platforms": [],
  "key_achievements": [
    "Built REST APIs using Node.js and Express.js serving 10,000+ daily requests",
    "Optimized database queries in MongoDB reducing response time by 25%",
    "Implemented user authentication and authorization using JWT tokens"
  ],
  "summary": "Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects."
}
```
2025-06-13 11:09:38 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Aarav Sharma - Junior Developer.pdf
2025-06-13 11:09:38 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Processed candidate: Aarav Sharma - Junior Developer.pdf with ID: 3c7caee7-421d-402d-9c01-e05c0e1449de
2025-06-13 11:09:38 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Aarav Sharma - Junior Developer.pdf (ID: 3c7caee7-421d-402d-9c01-e05c0e1449de) in 19151ms
2025-06-13 11:09:38 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:09:38 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Aarav Sharma - Junior Developer.pdf, success=true, extractedData={experienceLevel=ENTRY, s (truncated)...]
2025-06-13 11:09:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:09:39 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:09:39 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:09:39 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Processing resume upload: Anjali Patel - Data Analyst.pdf
2025-06-13 11:09:45 [http-nio-8081-exec-5] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/ddedf10e-4d2f-4de7-a80e-bf969609c599-Anjali Patel - Data Analyst.pdf
2025-06-13 11:09:53 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/ddedf10e-4d2f-4de7-a80e-bf969609c599-Anjali Patel - Data Analyst.pdf
2025-06-13 11:09:53 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Pater
S Intelligence Specialist
anjali.patel@email.com
+91 97845 62310
linkedin.com/in/anjalipate
Bangalore, Karnataka, India
Professional Summary
Technical Skills
Innovative Data Analyst with 6+ years of experience in
transforming complex datasets into strategic business
Programming
insights for Indian tech startups and MNCs. Expert in
Python
R
SQL
Java
Scala
machine learning, statistical modeling, and data
visualization with proven track record of improving
business efficiency by 50% and reducing costs by
Databases
₹30 lakh annually through data-driven
recommendations.
MySQL
PostgreSQL
MongoDB
Cassandra
Snowflake
Professional Experience
Analytics & ML
Senior Data Analyst
Pandas
NumPy
Scikit-learn
TensorFlow
Flipkart Group
Feb 2022 Present
Statistical Modeling
Developed ML models for customer behavior analysis
processing 10M+ transactions daily
Created automated dashboards reducing reporting time by
Visualization
70% for 15+ stakeholders
Led data quality initiatives improving accuracy by 95%
Tableau
Power B
matplotlib
seaborn
across e-commerce platform
D3.js
Implemented A/B testing framework increasing conversion
rates by 28%
Built recommendation engines improving customer
engagement by 35%
Cloud Platforms
AWS
Azure
GCP
Spark
Hadoop
Data Analyst
Infosys Limited
Jun 2020 Jan 2022
Analyzed financial data for global banking clients using
Python and SQL
Developed predictive models for fraud detection with 92%
Key Projects
accuracy
Created Power BI dashboards for C-level executives and
stakeholders
E-commerce Customer Segmentation
Optimized database queries improving performance by
Built ML clustering model using K-means and RFM
45%
analysis to segment 5M+ customers, enabling
personalized marketing campaigns with 40% higher
conversion rates.
Junior Data Analyst
Tata Consultancy Services
Jul 2018 May 2020
Real-time Fraud Detection System
Supported market research analysis for retail and
Developed ensemble learning model combining
healthcare clients
Random Forest and XGBoost achieving 94% accuracy
Developed Excel-based models for financial forecasting
in detecting fraudulent transactions for fintech
and budgeting
application.
Assisted in data migration projects and quality assurance
testing
Supply Chain Optimization Dashboard
Created interactive Tableau dashboard tracking 50+
KPIs across inventory, logistics, and vendor
performance, reducing operational costs by ₹25 lakh
annually.
Education
Master of Technology (Computer Science)
Indian Institute of Technology, Bombay
Certifications
2016 2018
AWS Certified Data Analytics Specialty (2024)
Bachelor of Engineering (Information
Technology)
Google Professional Data Engineer (2023)
Gujarat Technological University
2012 2016
Microsoft Azure Data Scientist Associate (2023)
Tableau Desktop Certified Professional (2022)
Google Analytics Individual Qualification (2022)
Languages
Hindi (Native)
English (Fluent)
Gujarati (Native)
Tamil (Conversational)

2025-06-13 11:10:00 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Machine Learning\",\n    \"Statistical Modeling\",\n    \"Data Visualization\",\n    \"Data Quality Initiatives\",\n    \"A/B Testing\",\n    \"Recommendation Engines\",\n    \"Predictive Modeling\",\n    \"Fraud Detection\",\n    \"Database Optimization\",\n    \"Data Migration\",\n    \"Quality Assurance Testing\",\n    \"KPI Tracking\"\n  ],\n  \"soft_skills\": [\n    \"Innovative\",\n    \"Analytical\",\n    \"Leadership\",\n    \"Communication\",\n    \"Problem-solving\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Technology (Computer Science)\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"AWS Certified Data Analytics Specialty\",\n    \"Google Professional Data Engineer\",\n    \"Microsoft Azure Data Scientist Associate\",\n    \"Tableau Desktop Certified Professional\",\n    \"Google Analytics Individual Qualification\"\n  ],\n  \"industries\": [\n    \"Tech Startups\",\n    \"E-commerce\",\n    \"Global Banking\",\n    \"Retail\",\n    \"Healthcare\",\n    \"Fintech\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R\",\n    \"SQL\",\n    \"Java\",\n    \"Scala\"\n  ],\n  \"frameworks\": [\n    \"Pandas\",\n    \"NumPy\",\n    \"Scikit-learn\",\n    \"TensorFlow\",\n    \"Spark\",\n    \"Hadoop\"\n  ],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"matplotlib\",\n    \"seaborn\",\n    \"D3.js\",\n    \"Excel\"\n  ],\n  \"databases\": [\n    \"MySQL\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"Cassandra\",\n    \"Snowflake\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\",\n    \"GCP\"\n  ],\n  \"key_achievements\": [\n    \"Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.\",\n    \"Increased conversion rates by 28% by implementing an A/B testing framework.\",\n    \"Achieved 94% accuracy in detecting fraudulent transactions using an ensemble learning model.\"\n  ],\n  \"summary\": \"Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs through data-driven recommendations.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":934,"outputTokens":639,"totalTokens":1573}}
2025-06-13 11:10:00 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Machine Learning",
    "Statistical Modeling",
    "Data Visualization",
    "Data Quality Initiatives",
    "A/B Testing",
    "Recommendation Engines",
    "Predictive Modeling",
    "Fraud Detection",
    "Database Optimization",
    "Data Migration",
    "Quality Assurance Testing",
    "KPI Tracking"
  ],
  "soft_skills": [
    "Innovative",
    "Analytical",
    "Leadership",
    "Communication",
    "Problem-solving"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Technology (Computer Science)",
  "years_of_experience": 6,
  "certifications": [
    "AWS Certified Data Analytics Specialty",
    "Google Professional Data Engineer",
    "Microsoft Azure Data Scientist Associate",
    "Tableau Desktop Certified Professional",
    "Google Analytics Individual Qualification"
  ],
  "industries": [
    "Tech Startups",
    "E-commerce",
    "Global Banking",
    "Retail",
    "Healthcare",
    "Fintech"
  ],
  "programming_languages": [
    "Python",
    "R",
    "SQL",
    "Java",
    "Scala"
  ],
  "frameworks": [
    "Pandas",
    "NumPy",
    "Scikit-learn",
    "TensorFlow",
    "Spark",
    "Hadoop"
  ],
  "tools": [
    "Tableau",
    "Power BI",
    "matplotlib",
    "seaborn",
    "D3.js",
    "Excel"
  ],
  "databases": [
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Cassandra",
    "Snowflake"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure",
    "GCP"
  ],
  "key_achievements": [
    "Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.",
    "Increased conversion rates by 28% by implementing an A/B testing framework.",
    "Achieved 94% accuracy in detecting fraudulent transactions using an ensemble learning model."
  ],
  "summary": "Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs through data-driven recommendations."
}
```
2025-06-13 11:10:00 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Anjali Patel - Data Analyst.pdf
2025-06-13 11:10:00 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Processed candidate: Anjali Patel - Data Analyst.pdf with ID: 186522ac-a3a2-414c-bd01-28de7a70c9a1
2025-06-13 11:10:00 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Anjali Patel - Data Analyst.pdf (ID: 186522ac-a3a2-414c-bd01-28de7a70c9a1) in 21047ms
2025-06-13 11:10:00 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:10:00 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Anjali Patel - Data Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, skil (truncated)...]
2025-06-13 11:10:00 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:10:01 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:10:01 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:10:01 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Processing resume upload: Arjun Singh - Software Developer.pdf
2025-06-13 11:10:04 [http-nio-8081-exec-7] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/d6ba1d37-7eb1-4da4-8e22-d06802e34f2b-Arjun Singh - Software Developer.pdf
2025-06-13 11:10:09 [http-nio-8081-exec-7] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/d6ba1d37-7eb1-4da4-8e22-d06802e34f2b-Arjun Singh - Software Developer.pdf
2025-06-13 11:10:09 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Professional Summary
Experienced Full Stack Software Developer with 7+ years of
expertise in building scalable web applications and
Arjun Singh
microservices for Indian tech companies and global clients.
Proficient in modern JavaScript frameworks, cloud
Full Stack Developer
technologies, and agile methodologies. Strong track record of
leading development teams and delivering high-quality
arjun.singh@email.com
software solutions that improved system performance by 60%
+91 94567 89012
and reduced deployment time by 45%.
linkedin.com/in/arjunsingh
github.com/arjunsingh
Professional Experience
T
Hyderabad, Telangana, India
Senior Software Developer
TECHNICAL SKILLS
Zomato Limited
Mar 2022 Present
Frontend
React Node.js TypeScript MongoDB Redis AWS Docker
PostgreSQL
Led development of real-time order tracking system serving
Redis
200K+ daily orders
- Built microservices architecture reducing API response time by
55%
LANGUAGES
- Implemented automated testing pipeline achieving 90% code
Hindi
Native
coverage
English
Fluent
- Mentored 4 junior developers and conducted code reviews
Punjabi
Native
Optimized database queries reducing server costs by ₹8 lakh
monthly
Telugu
Conversational
Software Developer
TOOLS & PLATFORMS
PayTM (One97 Communications)
Jan 2020 Feb 2022
Git Docker . Kubernetes Jenkins AWS
Azure Jira Slack vs Code Intelli]
Vue.js
Express.js
MySQL
Python
Django
Jenkins
IDEA Postman Webpack
- Developed payment gateway integration handling 100 crore+
daily transactions
- Created fraud detection algorithms reducing fraudulent
transactions by 40%
- Built responsive wallet interface used by 50M+ active users
- Implemented CI/CD pipelines reducing deployment time from 4
hours to 30 minutes
Junior Software Developer
Mindtree Limited
Jul 2018 Dec 2019
Angular Spring Boot PostgreSQU HTML5 CSS3
- Developed e-commerce modules for US retail client using Angular
and Spring Boot
- Created responsive UI components improving user experience by
35%
T Participated in agile development with 2-week sprint cycles
1 Fixed 200+ bugs and implemented 50+ feature enhancements
Key Projects
Food Delivery
Cryptocurrency
Platform
Trading Bot
Built end-to-end food
Developed automated
delivery platform with real-
trading bot using Python
time tracking, payment
and machine learning
integration, and restaurant
algorithms achieving 15%
management system using
monthly returns in
MERN stack.
backtesting.
React
Node.js
Python TensorFlow
MongoDB
Redis
Education
Bachelor of Technology (Computer Science
Engineering)
Indian Institute of Technology, Hyderabad
2014 2018
Certifications & Achievements
AWS Certified Solutions Architect Associate (2024)
Google Cloud Professional Developer (2023)
MongoDB Certified Developer (2022)
Scrum Master Certified (2021)
Winner Smart India Hackathon 2017 (Government of India)
Open Source Contributor 1000+ GitHub contributions

2025-06-13 11:10:15 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Node.js\",\n    \"TypeScript\",\n    \"MongoDB\",\n    \"Redis\",\n    \"AWS\",\n    \"Docker\",\n    \"PostgreSQL\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"MySQL\",\n    \"Python\",\n    \"Django\",\n    \"Jenkins\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"TensorFlow\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentorship\",\n    \"Team Collaboration\",\n    \"Agile Methodologies\",\n    \"Problem Solving\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science Engineering)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect Associate (2024)\",\n    \"Google Cloud Professional Developer (2023)\",\n    \"MongoDB Certified Developer (2022)\",\n    \"Scrum Master Certified (2021)\"\n  ],\n  \"industries\": [\n    \"Technology\",\n    \"E-commerce\",\n    \"Finance\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"HTML5\",\n    \"CSS3\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Node.js\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"Django\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"AWS\",\n    \"Azure\",\n    \"Jira\",\n    \"Slack\",\n    \"VS Code\",\n    \"IntelliJ IDEA\",\n    \"Postman\",\n    \"Webpack\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"Redis\",\n    \"PostgreSQL\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\"\n  ],\n  \"key_achievements\": [\n    \"Improved system performance by 60% and reduced deployment time by 45%\",\n    \"Reduced API response time by 55% through microservices architecture\",\n    \"Achieved 90% code coverage with automated testing pipeline\"\n  ],\n  \"summary\": \"Experienced Full Stack Software Developer with over 7 years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Proven track record of leading development teams and delivering high-quality software solutions.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":937,"outputTokens":676,"totalTokens":1613}}
2025-06-13 11:10:15 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Node.js",
    "TypeScript",
    "MongoDB",
    "Redis",
    "AWS",
    "Docker",
    "PostgreSQL",
    "Vue.js",
    "Express.js",
    "MySQL",
    "Python",
    "Django",
    "Jenkins",
    "Angular",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "TensorFlow"
  ],
  "soft_skills": [
    "Leadership",
    "Mentorship",
    "Team Collaboration",
    "Agile Methodologies",
    "Problem Solving"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science Engineering)",
  "years_of_experience": 7,
  "certifications": [
    "AWS Certified Solutions Architect Associate (2024)",
    "Google Cloud Professional Developer (2023)",
    "MongoDB Certified Developer (2022)",
    "Scrum Master Certified (2021)"
  ],
  "industries": [
    "Technology",
    "E-commerce",
    "Finance"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "HTML5",
    "CSS3"
  ],
  "frameworks": [
    "React",
    "Node.js",
    "Vue.js",
    "Express.js",
    "Angular",
    "Spring Boot",
    "Django"
  ],
  "tools": [
    "Git",
    "Docker",
    "Kubernetes",
    "Jenkins",
    "AWS",
    "Azure",
    "Jira",
    "Slack",
    "VS Code",
    "IntelliJ IDEA",
    "Postman",
    "Webpack"
  ],
  "databases": [
    "MongoDB",
    "Redis",
    "PostgreSQL",
    "MySQL"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure"
  ],
  "key_achievements": [
    "Improved system performance by 60% and reduced deployment time by 45%",
    "Reduced API response time by 55% through microservices architecture",
    "Achieved 90% code coverage with automated testing pipeline"
  ],
  "summary": "Experienced Full Stack Software Developer with over 7 years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Proven track record of leading development teams and delivering high-quality software solutions."
}
```
2025-06-13 11:10:15 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Arjun Singh - Software Developer.pdf
2025-06-13 11:10:15 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Processed candidate: Arjun Singh - Software Developer.pdf with ID: cb0fd305-68d2-4724-a09d-a83ba627a03a
2025-06-13 11:10:15 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Arjun Singh - Software Developer.pdf (ID: cb0fd305-68d2-4724-a09d-a83ba627a03a) in 14395ms
2025-06-13 11:10:15 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:10:15 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Arjun Singh - Software Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, (truncated)...]
2025-06-13 11:10:15 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:10:16 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:10:16 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:10:16 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Processing resume upload: Deepika Reddy - Java Developer.pdf
2025-06-13 11:10:23 [http-nio-8081-exec-9] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/acc0f742-a9d6-4709-854c-3ec64275ac1c-Deepika Reddy - Java Developer.pdf
2025-06-13 11:10:31 [http-nio-8081-exec-9] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/acc0f742-a9d6-4709-854c-3ec64275ac1c-Deepika Reddy - Java Developer.pdf
2025-06-13 11:10:31 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Deepika Reddy
Java Developer & Backend Engineer
dccpika.reddy@email .com
H
+91 98712 34567
- linkedin com/1 in/deepikareddy
github.com/deepikareddy
T
Hyderabad, Telangana, India
PROFESSIONAL SUMMARY
TECHNICAL
SKILLS
Dedicated Java Developer with 5+ years of experience in
designing and developing enterprise level applications
CORE JAVA
using Java Spring Framework and microservices
lava I'
Java 11
architecture Expertise in building scalable backend
systems, RESTful APIs, and database integration with
lava OOP Concepts
strong knowledge of software design patterns and best
practices Proven track record of optimizing application
Multithreading
performance and delivering high-quality code in agile
environments
FRAMEWORKS
PROFESSIONAL EXPERIENCE
Spring Boot
Spring MVC
Spring Security
Senior Java Developer
Hibernato
JPA
Accenture Solutions
Jan 2022 Present
Java 17
Spring Boot
Spring Security
Microservices
DATABASES
PostgreSQL
Redis
Docker
Kafka
JUnit
PostgreSQI
MySQI
Developed microservices architecture using Java 17 and Spring
Oracle DB
Redis
Boot serving 500K+ daily transactions
Implemented secure authentication and authorization using
JDBC
Spring Security and JWT tokens
Designed and optimized PostgreSQI database schemas reducing
query execution time by 50%
WEB
Built event driven systems using Apache Kafka for real-time
TECHNOLOGIES
data processing
RESTAI
Implemented Redis caching strategies improving application
response 40%
Microservice
Servlets
Containerized applications using Docker and deployed on
Kubernetes clusters
JSP
SON
Achieved 90% code coverage through compreher sive unit
testing with JUnit and Mockito
TOOLS DEVOPS
Docker Kafka
Java Developer
Mayen Gi
Tomcat
Capgemini India
Mar 2020 Dec 2021
Java 11
Spring MVC
libernato
MySQI
RESTAPI
TESTING
Maven
Git
Unit
Mockito
Buil enterprise web applications using Java 11. Spring MVC.
and Hibernate ORM
Integration Testing
Developed RESTful APIs for frontend consumption and third-
party integrations
Unit Testing
Implemented database operations using Hibernate with MySQL
backend
Used Mayen for project management and dependency resolution
EDUCATION
Collaborated with cross-functional teams using Git for version
control
Participated code reviews and maintained high coding
Bachelor Technology
standards
(Computer Science)
Jawaharlal Nehru
Technological University
2015-2019
Associate Software Engineer
Wipro Technologies
Jul 2019 - Fcb 2020
CERTIFICATIONS
Juya8
Servlets
JSP
JDBC
Oracle
Tomcat
Oracle Certified Professional Java
Developed web applications using Java Servlets, and ISP
SE
technologies
Implemented database connectivity using JDBC with Oracle
Spring Professional Certification
database
Deployed applications on Apache Tomcat server
AWS Certified Developer
Fixed bugs and implemented feature enhancements based on
Associate
client requirements
Learned enterprise development practices and coding standards
Docker Certified Associate
Apache Kafka Developer
FEATURED PROJECTS
Microservice Architecture
LANGUAGES
Banking
E-Commerce Order
Microservices
Management
Platform
Telugu: Native
Java II
Spring MVC
Hindi: Fluent
Java 17
Spring Boot
libernate
MySQL
English: Fluent
PostgreSQ1
Redis
Tamil: Basic
RESTAPI
Kafka
Docker
Built order management
system using Java and
KEY
Architected prehensive
banki platform using
Spring MVC framework
ACHIEVEMENTS
microservices with Java 17
Implemented Hibernate for
and Spring Boot Implemented
ORM mapping with MySQL
database created REST APIs
PostgreSQL data
. performance improvement
persistence Redis caching
for order processing and
database queries
and Kalka for event streaming
integrated payment gateway
90% coverage
testing
Containerized services using
services
Led team of developers
500K daily transactions handled
Docker scalable
Zero production bugs in last months
deployment
Employee
Inventory Tracking
Management stem
API
Java 8
Servlets
Spring Boot
JSP
JDBC
Spring Security
JUnit
Oracle DB
Mockito
Mayen
Developed employee
Created REST for
management application using
inventory management using
Java with Servlets JSP
Spring Spring
for interface Used JDBC
Security authentication
for database operations with
Implemented comprehensive
Oracle backend implemented
testing with JUnit and
CRU D operations and
Mockito managed project
employee reporting features
dependencies with Mayen
build tool

2025-06-13 11:10:37 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Java 11\",\n    \"Java OOP Concepts\",\n    \"Multithreading\",\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\",\n    \"RESTful APIs\",\n    \"Servlets\",\n    \"JSP\",\n    \"JDBC\",\n    \"JSON\",\n    \"Microservices\",\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Integration Testing\",\n    \"Unit Testing\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\"\n  ],\n  \"soft_skills\": [\n    \"Team collaboration\",\n    \"Code reviews\",\n    \"Problem-solving\",\n    \"Project management\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"Oracle Certified Professional Java SE\",\n    \"Spring Professional Certification\",\n    \"AWS Certified Developer Associate\",\n    \"Docker Certified Associate\",\n    \"Apache Kafka Developer\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\"\n  ],\n  \"tools\": [\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\",\n    \"Tomcat\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"Oracle DB\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions\",\n    \"Designed and optimized PostgreSQL database schemas reducing query execution time by 50%\",\n    \"Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito\"\n  ],\n  \"summary\": \"Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1286,"outputTokens":629,"totalTokens":1915}}
2025-06-13 11:10:37 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Java 11",
    "Java OOP Concepts",
    "Multithreading",
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA",
    "RESTful APIs",
    "Servlets",
    "JSP",
    "JDBC",
    "JSON",
    "Microservices",
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Integration Testing",
    "Unit Testing",
    "Docker",
    "Kafka",
    "Kubernetes"
  ],
  "soft_skills": [
    "Team collaboration",
    "Code reviews",
    "Problem-solving",
    "Project management"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 5,
  "certifications": [
    "Oracle Certified Professional Java SE",
    "Spring Professional Certification",
    "AWS Certified Developer Associate",
    "Docker Certified Associate",
    "Apache Kafka Developer"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "Java"
  ],
  "frameworks": [
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA"
  ],
  "tools": [
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Docker",
    "Kafka",
    "Kubernetes",
    "Tomcat"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "Oracle DB",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions",
    "Designed and optimized PostgreSQL database schemas reducing query execution time by 50%",
    "Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito"
  ],
  "summary": "Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices."
}
```
2025-06-13 11:10:37 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Deepika Reddy - Java Developer.pdf
2025-06-13 11:10:37 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Processed candidate: Deepika Reddy - Java Developer.pdf with ID: b94f9a39-5d89-4be5-b2cd-79cec542440f
2025-06-13 11:10:37 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Deepika Reddy - Java Developer.pdf (ID: b94f9a39-5d89-4be5-b2cd-79cec542440f) in 20557ms
2025-06-13 11:10:37 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:10:37 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Deepika Reddy - Java Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, s (truncated)...]
2025-06-13 11:10:37 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:10:38 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:10:38 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:10:38 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Processing resume upload: Karan Singh - DevOps Engineer.pdf
2025-06-13 11:10:48 [http-nio-8081-exec-8] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/a79d6994-c690-4332-937e-738102d38517-Karan Singh - DevOps Engineer.pdf
2025-06-13 11:11:09 [http-nio-8081-exec-8] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/a79d6994-c690-4332-937e-738102d38517-Karan Singh - DevOps Engineer.pdf
2025-06-13 11:11:09 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
karan.singh@email.com
+91 97531 86420
Karan Singh
DevOps Engineer & Cloud Architect
linkedin.com/in/karansingh
STATUS: ACTIVE UPTIME: 5+ YEARS I DEPLOYMENTS: 1000+
in github.com/karansingh
o
Gurgaon, Haryana, India
$ cat professional_summary.txt
TECHNICAL ARSENAL
CLOUD PLATFORMS
Experienced DevOps Engineer with 5+ years of expertise in automating
AWS EC2
AWS EKS
AWS RDS
AWS
deployment pipelines, managing cloud infrastructure. and orchestrating
AWS CloudWatch
AWS CodePipeline
AWS CLI
containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD
automation with strong background in Infrastructure as Code and monitoring
solutions Proven track record of reducing deployment time by 80% and
CONTAINERIZATION
improving system reliability to 99.9% uptime through robust DevOps practices.
Docker
Kubernetes
Docker Swarm
Helm
Container Registry
$ grep -r "experience" /career/history
CI/CD TOOLS
[PROCESS]
Jenkins
GitLab
GitHub Actions
Git
Maven
Senior DevOps Engineer
SonarQub
Paytm (One97 Communications)
Jan 2022 Present
AWS
Kubernetes
Docker
Jenkins
Terraform
Ansible
Prometheus
Grafana
ELK Stack
INFRASTRUCTURE AS CODE
Architected AWS cloud infrastructure using Terraform managing 100+ EC2 instances
Terraform
Ansible
CloudFormation
YAML
JSON
and RDS clusters
Implemented Kubernetes orchestration for microservices serving 50M+ daily
transactions
MONITORING LOGGING
Built Jenkins CI/CD pipelines reducing deployment time from 4 hours to 30 minutes
Prometheus
Grafana
ELK Stack
Alertmanager
Elasticsearch
Kibana
Configured monitoring stack using Prometheus and Grafana achieving 99.9% uptime SLA
Automated infrastructure provisioning using Ansible playbooks saving 20 hours/week
Implemented ELK Stack for centralized logging and real-time log analysis
SYSTEM ADMINISTRATION
Managed Docker container registry and optimized image sizes by 60%
Linux
Shell Scripting
Nainx
Apache
Tomcat
Redis
[PROCESS]
# PERFORMANCE METRICS
DevOps Engineer
Nagarro Software
Mar 2021 Dec 2021
99.9%
80%
AWS EC2
Docker Swarm
GitLab CI
CloudFormation
Nginx
Redis
SYSTEMUPTIME
DEPLOY TIME REDUCTION
Deployed applications on AWS EC2 using Docker Swarm for container orchestration
1000+
100+
Created GitLab CT pipelines for automated testing and deployment processes
DEPLOYMENTS
EC2 INSTANCES
Implemented infrastructure using AWS CloudFormation templates
Configured Nginx load balancers for high availability and traffic distribution
# SYSTEM CONFIGURATION
Set up Redis clusters for caching and session management
Optimized application performance resulting in 40% faster response times
Bachelor of Technology (Information
Technology)
Guru Gobind Singh Indraprastha University
2016 2020
[PROCESS]
Junior DevOps Engineer
# SECURITY CERTIFICATES
Mindtree Limited
Jun 2020 Feb 2021
Linux
Shell Scripting
Git
Mayer
Tomcat
AWS Certified DevOps Engineer Professional
Managed Linux servers and wrote Shell scripts for automation tasks
Certified Kubernetes Administrator (CKA)
Implemented Git workflows and branching strategies for development teams
Docker Certified Associate
Configured Mayen build processes for Java applications
Terraform Associate Certification
Deployed applications on Apache Tomcat servers
Learned infrastructure management and deployment best practices
Jenkins Certified Engineer
AWS Solutions Architect Associate
Prometheus Certified Associate
$ ls -la /projects/featured
LANGUAGE SUPPORT
[PROJECT]
[PROJECT]
Microservices Platform
CI/CD Automation Pipeline
Hindi: Native
Kubernetes
Docker
AWS EKS
Terraform
Jenkins
GitLab
Docker
English: Fluent
Helm
AWS CodePipeline
SonarQube
Punjabi: Native
Urdu: Conversational
Built scalable microservices platform on
Implemented end-to-end CI/CD pipeline
AWS EKS using Kubernetes and Docker.
using Jenkins and GitLab CI with Docker
Automated infrastructure deployment with
containerization. Integrated AWS
ADDITIONAL MODULES
Terraform and managed application
CodePipeline for cloud-native deployments
deployments using Helm charts for
and SonarQube for code quality analysis.
Microservices Architecture
consistent and reliable releases.
Site Reliability Engineering
cloud Security Best Practices
Disaster Recovery Planning
Cost Optimization Strategies
Agile DevOps Methodologies
[PROJECT]
[PROJECT]
Infrastructure Monitoring
Infrastructure as Code
SYSTEM STATUS
Prometheus
Grafana
ELK Stack
Terraform
Ansible
CloudFormation
AWS CloudWatch
Alertmanager
Shell Scripting
AWS CLI
OPERATIONAL: All systems running
MONITORING: Active 24/7
BACKUP: Automated daily
Set up comprehensive monitoring solution
Automated infrastructure provisioning
SECURITY Enhanced protection
PERFORMANCE: Optimized
using Prometheus and Grafana with ELK
using Terraform and Ansible with AWS
Stack for log aggregation. Configured AWS
CloudFormation. Created Shell scripts and
CloudWatch and Alertmanager for proactive
AWS CLI automation for infrastructure
incident management
management and deployment processes.

2025-06-13 11:11:17 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"AWS EC2\",\n    \"AWS EKS\",\n    \"AWS RDS\",\n    \"AWS CloudWatch\",\n    \"AWS CodePipeline\",\n    \"AWS CLI\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Docker Swarm\",\n    \"Helm\",\n    \"Container Registry\",\n    \"Jenkins\",\n    \"GitLab\",\n    \"GitHub Actions\",\n    \"Git\",\n    \"Maven\",\n    \"SonarQub\",\n    \"Terraform\",\n    \"Ansible\",\n    \"Prometheus\",\n    \"Grafana\",\n    \"ELK Stack\",\n    \"Alertmanager\",\n    \"Elasticsearch\",\n    \"Kibana\",\n    \"Linux\",\n    \"Shell Scripting\",\n    \"Nginx\",\n    \"Apache\",\n    \"Tomcat\",\n    \"Redis\",\n    \"YAML\",\n    \"JSON\"\n  ],\n  \"soft_skills\": [\n    \"Problem-solving\",\n    \"Automation\",\n    \"Optimization\",\n    \"Team collaboration\",\n    \"Project management\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Information Technology)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified DevOps Engineer Professional\",\n    \"Certified Kubernetes Administrator (CKA)\",\n    \"Docker Certified Associate\",\n    \"Terraform Associate Certification\",\n    \"Jenkins Certified Engineer\",\n    \"AWS Solutions Architect Associate\",\n    \"Prometheus Certified Associate\"\n  ],\n  \"industries\": [\n    \"IT\",\n    \"Finance\",\n    \"Consulting\"\n  ],\n  \"programming_languages\": [\n    \"Shell Scripting\"\n  ],\n  \"frameworks\": [\n    \"Kubernetes\",\n    \"Docker\",\n    \"Docker Swarm\",\n    \"Helm\"\n  ],\n  \"tools\": [\n    \"Jenkins\",\n    \"GitLab\",\n    \"GitHub Actions\",\n    \"Git\",\n    \"Maven\",\n    \"SonarQub\",\n    \"Terraform\",\n    \"Ansible\",\n    \"Prometheus\",\n    \"Grafana\",\n    \"ELK Stack\",\n    \"Alertmanager\",\n    \"Elasticsearch\",\n    \"Kibana\",\n    \"Nginx\",\n    \"Apache\",\n    \"Tomcat\",\n    \"Redis\",\n    \"AWS CLI\"\n  ],\n  \"databases\": [\n    \"AWS RDS\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Reduced deployment time by 80%\",\n    \"Improved system reliability to 99.9% uptime\",\n    \"Optimized Docker image sizes by 60%\"\n  ],\n  \"summary\": \"Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment times and improving system reliability.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1431,"outputTokens":760,"totalTokens":2191}}
2025-06-13 11:11:17 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "AWS EC2",
    "AWS EKS",
    "AWS RDS",
    "AWS CloudWatch",
    "AWS CodePipeline",
    "AWS CLI",
    "Docker",
    "Kubernetes",
    "Docker Swarm",
    "Helm",
    "Container Registry",
    "Jenkins",
    "GitLab",
    "GitHub Actions",
    "Git",
    "Maven",
    "SonarQub",
    "Terraform",
    "Ansible",
    "Prometheus",
    "Grafana",
    "ELK Stack",
    "Alertmanager",
    "Elasticsearch",
    "Kibana",
    "Linux",
    "Shell Scripting",
    "Nginx",
    "Apache",
    "Tomcat",
    "Redis",
    "YAML",
    "JSON"
  ],
  "soft_skills": [
    "Problem-solving",
    "Automation",
    "Optimization",
    "Team collaboration",
    "Project management"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Information Technology)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified DevOps Engineer Professional",
    "Certified Kubernetes Administrator (CKA)",
    "Docker Certified Associate",
    "Terraform Associate Certification",
    "Jenkins Certified Engineer",
    "AWS Solutions Architect Associate",
    "Prometheus Certified Associate"
  ],
  "industries": [
    "IT",
    "Finance",
    "Consulting"
  ],
  "programming_languages": [
    "Shell Scripting"
  ],
  "frameworks": [
    "Kubernetes",
    "Docker",
    "Docker Swarm",
    "Helm"
  ],
  "tools": [
    "Jenkins",
    "GitLab",
    "GitHub Actions",
    "Git",
    "Maven",
    "SonarQub",
    "Terraform",
    "Ansible",
    "Prometheus",
    "Grafana",
    "ELK Stack",
    "Alertmanager",
    "Elasticsearch",
    "Kibana",
    "Nginx",
    "Apache",
    "Tomcat",
    "Redis",
    "AWS CLI"
  ],
  "databases": [
    "AWS RDS"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Reduced deployment time by 80%",
    "Improved system reliability to 99.9% uptime",
    "Optimized Docker image sizes by 60%"
  ],
  "summary": "Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment times and improving system reliability."
}
```
2025-06-13 11:11:17 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Karan Singh - DevOps Engineer.pdf
2025-06-13 11:11:17 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Processed candidate: Karan Singh - DevOps Engineer.pdf with ID: fbe1c5d3-dced-4065-acf6-f42b84c5376b
2025-06-13 11:11:17 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Karan Singh - DevOps Engineer.pdf (ID: fbe1c5d3-dced-4065-acf6-f42b84c5376b) in 39036ms
2025-06-13 11:11:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:11:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Karan Singh - DevOps Engineer.pdf, success=true, extractedData={experienceLevel=SENIOR, sk (truncated)...]
2025-06-13 11:11:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:11:18 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:11:18 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:11:18 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Processing resume upload: Kavya Nair - Full Stack Developer.pdf
2025-06-13 11:11:20 [http-nio-8081-exec-10] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/2821d416-c654-423f-b5e5-58d1529d646d-Kavya Nair - Full Stack Developer.pdf
2025-06-13 11:11:30 [http-nio-8081-exec-10] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/2821d416-c654-423f-b5e5-58d1529d646d-Kavya Nair - Full Stack Developer.pdf
2025-06-13 11:11:30 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
+91 98765 12345
Full Stack Developer
linkedin com/in/kavyanair
"Building scalable web solutions with modern technologies'
github.com/kavyanair
9
Kochi. Kerala India
PROFESSIONAL SUMMARY
TECHNICAL
ARSENAL
Passionate Full Stack Developer with 5+ years of experience
FRONTEND
building robust web applications using modern JavaScript
React
Vue.js
Angular
frameworks and cloud technologies. Expertise in React, Node.js,
TypeScript
JavaScript
Python, and AWS with a strong focus on creating scalable,
HTML5
CSS3
maintainable solutions. Proven track record of leading development
teams and delivering high-quality software that serves 100K+ users
daily.
BACKEND
Node.js
Express.js
Python
Django
Java
Spring Boot
PROFESSIONAL EXPERIENCE
DATABASES
PostgreSQL
MySQL
Senior Full Stack Developer
MongoDB
Redis
Oracle DE
Freshworks Inc.
Mar 2022 Present
React
TypeScript
Node.js
Express.js
PostgreSQL
Redis
AWS
Docker
CLOUD DEVOPS
Kubernetes
AWS
Docker
Kubernetes
Architected and developed microservices using Node js and Express.js
Jenkins
GitHub Actions
serving 100K+ daily active users
Built responsive React applications with TypeScript ensuring type safety and
maintainable code
APIS TOOLS
Optimized PostgreSQL database queries and implemented Redis caching
REST APIs
GraphQL
reducing API response time by 60%
Socket.ic
JWT
WebRTC
Deployed applications on AWS using Docker containers and Kubernetes
Chart.js
JUnit
Swagger
orchestration
Led team of developers and mentored junior developers in best practices
Implemented CI/CD pipelines using Jenkins and GitHub Actions reducing
EDUCATION
deployment time by 50%
Master of Computer
Applications (MCA)
Cochin University of Science &
Technology
Full Stack Developer
2017 2019
Zoho Corporation
Jan 2020 Feb 2022
Vue.js
Python
Django
MySQL
MongoDB
REST APIs
GraphQL
Bachelor of Science
(Computer Science)
Developed enterprise CRM features using Vue js frontend and Python Django
University of Kerala
backend
2014 2017
Created RESTful APIs and GraphQL endpoints handling 50K+ requests per
hour
Designed and implemented database schemas in MySQL and MongoDB for
CERTIFICATIONS
optimal performance
Integrated third-party services and APIs for email marketing and analytics
AWS Certified Solutions Architect
functionality
Participated in code reviews and maintained high code quality standards
MongoDB Certified Developer
React Professional Certificate
Node.js Application Developer
Software Developer
Docker Certified Associate
UST Global
Jun 2019 Dec 2019
Kubernetes Administrator
Angular
Java
Spring Boot
Oracle DB
JUnit
Built banking applications using Angular frontend and Java Spring Boot
backend
LANGUAGES
Implemented secure user authentication and authorization using Spring
Security
Malayalam: Native
Developed unit tests using JUnit achieving 85% code coverage
English: Fluent
Hindi: Conversational
Worked with Oracle databases and optimized complex SQL queries
Tamil: Basic
FEATURED PROJECTS
Social Media Analytics
E-Learning Management
Platform
System
React Node.js MongoDB
Vue.js Python Django
Redis Chart.js AWS
PostgreSQL WebRTC
Developed comprehensive social
Built an online learning platform with
media analytics dashboard using
Vue. js frontend and Django backend
React and Chart. js for data
Integrated video conferencing using
visualization. Built scalable backend
WebRTC, implemented course
with Node.js and MongoDB,
management features, and used
implemented Redis for caching, and
PostgreSQL for data storage with
deployed on AWS with auto-scaling
automated backups.
capabilities.
Real-time Chat Application
Inventory Management API
TypeScript Socket.io Express.js
Java
Spring Boot MySQL
JWT
Docker
JUnit
Swagger
Created real-time messaging
Developed RESTful API for inventory
application using Socket io for
management using Java Spring Boot
WebSocket communication and
and MySQL Created comprehensive
TypeScript for type safety.
API documentation with Swagger,
Implemented JWT authentication,
implemented unit testing with JUnit,
built with Express js backend and
and added data validation and error
containerized using Docker for easy
handling.
deployment.

2025-06-13 11:11:37 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"Python\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Java\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"REST APIs\",\n    \"GraphQL\",\n    \"Socket.io\",\n    \"JWT\",\n    \"WebRTC\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"Swagger\",\n    \"Spring Security\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Code Quality Standards\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Computer Applications (MCA)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect\",\n    \"MongoDB Certified Developer\",\n    \"React Professional Certificate\",\n    \"Node.js Application Developer\",\n    \"Docker Certified Associate\",\n    \"Kubernetes Administrator\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"CRM\",\n    \"Banking\",\n    \"Analytics\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Spring Boot\"\n  ],\n  \"tools\": [\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"GitHub Actions\",\n    \"Swagger\",\n    \"Chart.js\",\n    \"JUnit\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"MongoDB\",\n    \"Redis\",\n    \"Oracle DB\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Architected and developed microservices serving 100K+ daily active users\",\n    \"Optimized PostgreSQL database queries reducing API response time by 60%\",\n    \"Implemented CI/CD pipelines reducing deployment time by 50%\"\n  ],\n  \"summary\": \"Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1215,"outputTokens":657,"totalTokens":1872}}
2025-06-13 11:11:37 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Vue.js",
    "Angular",
    "TypeScript",
    "JavaScript",
    "Python",
    "Node.js",
    "Express.js",
    "Django",
    "Java",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "REST APIs",
    "GraphQL",
    "Socket.io",
    "JWT",
    "WebRTC",
    "Chart.js",
    "JUnit",
    "Swagger",
    "Spring Security"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Code Quality Standards"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Computer Applications (MCA)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified Solutions Architect",
    "MongoDB Certified Developer",
    "React Professional Certificate",
    "Node.js Application Developer",
    "Docker Certified Associate",
    "Kubernetes Administrator"
  ],
  "industries": [
    "Software Development",
    "CRM",
    "Banking",
    "Analytics"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "Java"
  ],
  "frameworks": [
    "React",
    "Vue.js",
    "Angular",
    "Node.js",
    "Express.js",
    "Django",
    "Spring Boot"
  ],
  "tools": [
    "Docker",
    "Kubernetes",
    "Jenkins",
    "GitHub Actions",
    "Swagger",
    "Chart.js",
    "JUnit"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "MongoDB",
    "Redis",
    "Oracle DB"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Architected and developed microservices serving 100K+ daily active users",
    "Optimized PostgreSQL database queries reducing API response time by 60%",
    "Implemented CI/CD pipelines reducing deployment time by 50%"
  ],
  "summary": "Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software."
}
```
2025-06-13 11:11:37 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Kavya Nair - Full Stack Developer.pdf
2025-06-13 11:11:37 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Processed candidate: Kavya Nair - Full Stack Developer.pdf with ID: e2fc1c3e-c259-469e-aff9-c7dec23e1e3b
2025-06-13 11:11:37 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Kavya Nair - Full Stack Developer.pdf (ID: e2fc1c3e-c259-469e-aff9-c7dec23e1e3b) in 18938ms
2025-06-13 11:11:37 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:11:37 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Kavya Nair - Full Stack Developer.pdf, success=true, extractedData={experienceLevel=SENIOR (truncated)...]
2025-06-13 11:11:37 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:11:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:11:38 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:11:38 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Processing resume upload: Mei Chen - Marketing Analyst.pdf
2025-06-13 11:11:47 [http-nio-8081-exec-1] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/6063afef-9f01-4f8b-8318-f2711d7accb2-Mei Chen - Marketing Analyst.pdf
2025-06-13 11:11:57 [http-nio-8081-exec-1] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/6063afef-9f01-4f8b-8318-f2711d7accb2-Mei Chen - Marketing Analyst.pdf
2025-06-13 11:11:57 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Mei Chen
Marketing Analyst & Growth Strategist
mei.chen@email.com
+65 9876 5432
linkedin .com/in/meichen
Singapore
PROFESSIONAL SUMMARY
Core Skills
Data Analytics
95%
Data-driven Marketing Analyst with 6+ years of experience in
SQL & Python
90%
digital marketing analytics and customer insights across Asia-
Tableau & Power BI
88%
Pacific markets. Expert in transforming complex data into
actionable marketing strategies that drove 45% increase in ROI
Google Analytics
92%
and 35% growth in customer acquisition. Specialized in cross-
cultural marketing campaigns and multilingual market analysis.
A/B Testing
85%
Languages
PROFESSIONAL EXPERIENCE
Mandarin
English
Native
Fluent
Senior Marketing Analyst
Hindi
Shopee Singapore
Jan 2022 Present
Malay
Conversational
Basic
Analyzed user behavior data from 8 Southeast Asian markets with
100M+ active users
Developed attribution models improving campaign ROI
Education
measurement accuracy by 50%
Led A/B testing initiatives across mobile and web platforms with
28% conversion improvement
Master of Science in
Marketing Analytics
Created automated dashboards reducing manual reporting time by
National University of
75%
Singapore
2016 2018
Managed marketing analytics for flash sales generating S$50M+
revenue
Bachelor of Business
Administration
Nanyang Technological
University
Marketing Data Analyst
2012 2016
Grab Holdings
Mar 2020 Dec 2021
Performed cohort analysis for ride-hailing and food delivery
services across 6 countries
Certifications
Built predictive models for customer lifetime value with 89%
accuracy
Google Analytics 4 Certified
Optimized marketing spend allocation reducing CAC by 30%
across all verticals
Facebook Blueprint Certified
Conducted market research for new service launches in emerging
markets
Tableau Desktop Specialist
AWS Cloud Practitioner
Junior Marketing Analyst
Google Ads Certified
ByteDance (TikTok)
Jun 2018 Feb 2020
Analyzed viral content patterns and user engagement metrics for
HubSpot Marketing Analytics
APAC region
Created weekly performance reports for marketing campaigns
across 12 markets
Supported influencer marketing ROI analysis and campaign
optimization
Assisted in competitive analysis and market positioning strategies

2025-06-13 11:12:07 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Data Analytics\",\n    \"SQL\",\n    \"Python\",\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\",\n    \"A/B Testing\",\n    \"Predictive Modeling\",\n    \"Marketing Spend Allocation\",\n    \"Market Research\"\n  ],\n  \"soft_skills\": [\n    \"Cross-cultural Marketing\",\n    \"Multilingual Market Analysis\",\n    \"Campaign Optimization\",\n    \"Market Positioning Strategies\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Science in Marketing Analytics\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"Google Analytics 4 Certified\",\n    \"Facebook Blueprint Certified\",\n    \"Tableau Desktop Specialist\",\n    \"AWS Cloud Practitioner\",\n    \"Google Ads Certified\",\n    \"HubSpot Marketing Analytics\"\n  ],\n  \"industries\": [\n    \"Digital Marketing\",\n    \"E-commerce\",\n    \"Ride-hailing\",\n    \"Food Delivery\",\n    \"Social Media\"\n  ],\n  \"programming_languages\": [\n    \"SQL\",\n    \"Python\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Drove 45% increase in ROI and 35% growth in customer acquisition\",\n    \"Improved campaign ROI measurement accuracy by 50%\",\n    \"Achieved 28% conversion improvement through A/B testing initiatives\"\n  ],\n  \"summary\": \"Data-driven Marketing Analyst with 6+ years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":751,"outputTokens":473,"totalTokens":1224}}
2025-06-13 11:12:07 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Data Analytics",
    "SQL",
    "Python",
    "Tableau",
    "Power BI",
    "Google Analytics",
    "A/B Testing",
    "Predictive Modeling",
    "Marketing Spend Allocation",
    "Market Research"
  ],
  "soft_skills": [
    "Cross-cultural Marketing",
    "Multilingual Market Analysis",
    "Campaign Optimization",
    "Market Positioning Strategies"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Science in Marketing Analytics",
  "years_of_experience": 6,
  "certifications": [
    "Google Analytics 4 Certified",
    "Facebook Blueprint Certified",
    "Tableau Desktop Specialist",
    "AWS Cloud Practitioner",
    "Google Ads Certified",
    "HubSpot Marketing Analytics"
  ],
  "industries": [
    "Digital Marketing",
    "E-commerce",
    "Ride-hailing",
    "Food Delivery",
    "Social Media"
  ],
  "programming_languages": [
    "SQL",
    "Python"
  ],
  "frameworks": [],
  "tools": [
    "Tableau",
    "Power BI",
    "Google Analytics"
  ],
  "databases": [],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Drove 45% increase in ROI and 35% growth in customer acquisition",
    "Improved campaign ROI measurement accuracy by 50%",
    "Achieved 28% conversion improvement through A/B testing initiatives"
  ],
  "summary": "Data-driven Marketing Analyst with 6+ years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis."
}
```
2025-06-13 11:12:07 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Mei Chen - Marketing Analyst.pdf
2025-06-13 11:12:07 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Processed candidate: Mei Chen - Marketing Analyst.pdf with ID: 6819b958-e947-48cc-b25a-52358957ec00
2025-06-13 11:12:07 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Mei Chen - Marketing Analyst.pdf (ID: 6819b958-e947-48cc-b25a-52358957ec00) in 28364ms
2025-06-13 11:12:07 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:12:07 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Mei Chen - Marketing Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, ski (truncated)...]
2025-06-13 11:12:07 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:12:08 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:12:08 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:12:08 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Processing resume upload: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 11:12:09 [http-nio-8081-exec-2] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/5267159c-48a2-418e-9cec-ed0565114b0d-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 11:12:15 [http-nio-8081-exec-2] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/5267159c-48a2-418e-9cec-ed0565114b0d-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 11:12:15 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
PROFESSIONAL SUMMARY
Results-oriented Sales & Marketing professional with 7+
years of experience in the Indian market, specializing in
digital marketing strategies and B2B sales. Proven track
Priya Sharma
record of increasing revenue by 40% and expanding
market presence across Tier 1 and Tier 2 cities. Expert in
Sales & Marketing Professional
managing multi-channel campaigns and building long-term
client relationships in competitive markets.
Contact
priya.sharma@email.com
PROFESSIONAL EXPERIENCE
+91 98765 43210
Senior Marketing Manager
linkedin.com/in/priyasharma
Tata Digital Solutions
Jan 2021 Present
Mumbai, Maharashtra, India
Led digital marketing initiatives for pan-India market expansion,
Core Skills
reaching 15+ states
Managed ₹50 lakh annual marketing budget with 35% ROI
Lead Generation
improvement
Developed localized campaigns for regional markets increasing
Digital Marketing
engagement by 60%
Built strategic partnerships with 25+ B2B clients across various
CRM Management
industries
Campaign Strategy
Implemented CRM system reducing sales cycle time by 30%
Analytics
Marketing Executive
Languages
Reliance Industries Ltd
Mar 2019 Dec 2020
Executed social media strategies achieving 2M+ followers across
Hindi (Native)
platforms
English (Fluent)
Coordinated trade shows and exhibitions in Mumbai, Delhi, and
Bangalore
Marathi (Native)
Managed vendor relationships and negotiated contracts saving
₹15 lakh annually
Certifications
Created content marketing strategy increasing website traffic by
150%
Google Ads Certified Professional
HubSpot Inbound Marketing
Salesforce Administrator
Sales Associate
Digital Marketing Institute
Wipro Technologies
Jun 2017 Feb 2019
Achieved 125% of sales targets consistently across Western
India region
Built client database of 200+ prospects through cold calling and
networking
Participated in 10+ industry conferences and generated 50+
qualified leads
EDUCATION
Master of Business Administration (Marketing)
Indian Institute of Management, Ahmedabad
2015 2017
Bachelor of Commerce
University of Mumbai
2012 2015

2025-06-13 11:12:21 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Lead Generation\",\n    \"Digital Marketing\",\n    \"CRM Management\",\n    \"Campaign Strategy\",\n    \"Analytics\"\n  ],\n  \"soft_skills\": [\n    \"Client Relationship Management\",\n    \"Strategic Partnerships\",\n    \"Negotiation\",\n    \"Content Creation\",\n    \"Budget Management\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Marketing)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"Google Ads Certified Professional\",\n    \"HubSpot Inbound Marketing\",\n    \"Salesforce Administrator\",\n    \"Digital Marketing Institute\"\n  ],\n  \"industries\": [\n    \"Digital Solutions\",\n    \"Reliance Industries\",\n    \"Information Technology\"\n  ],\n  \"programming_languages\": [],\n  \"frameworks\": [],\n  \"tools\": [\n    \"CRM system\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.\",\n    \"Managed ₹50 lakh annual marketing budget with 35% ROI improvement.\",\n    \"Executed social media strategies achieving 2M+ followers across platforms.\"\n  ],\n  \"summary\": \"Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market, specializing in digital marketing strategies and B2B sales. Proven track record of increasing revenue and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":722,"outputTokens":392,"totalTokens":1114}}
2025-06-13 11:12:21 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Lead Generation",
    "Digital Marketing",
    "CRM Management",
    "Campaign Strategy",
    "Analytics"
  ],
  "soft_skills": [
    "Client Relationship Management",
    "Strategic Partnerships",
    "Negotiation",
    "Content Creation",
    "Budget Management"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Marketing)",
  "years_of_experience": 7,
  "certifications": [
    "Google Ads Certified Professional",
    "HubSpot Inbound Marketing",
    "Salesforce Administrator",
    "Digital Marketing Institute"
  ],
  "industries": [
    "Digital Solutions",
    "Reliance Industries",
    "Information Technology"
  ],
  "programming_languages": [],
  "frameworks": [],
  "tools": [
    "CRM system"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.",
    "Managed ₹50 lakh annual marketing budget with 35% ROI improvement.",
    "Executed social media strategies achieving 2M+ followers across platforms."
  ],
  "summary": "Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market, specializing in digital marketing strategies and B2B sales. Proven track record of increasing revenue and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships."
}
```
2025-06-13 11:12:21 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 11:12:21 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Processed candidate: Priya Sharma - Sales & Marketing Professional.pdf with ID: 132bd788-1f51-46ba-8d3a-2fa88fca92bc
2025-06-13 11:12:21 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Priya Sharma - Sales & Marketing Professional.pdf (ID: 132bd788-1f51-46ba-8d3a-2fa88fca92bc) in 12920ms
2025-06-13 11:12:21 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:12:21 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Priya Sharma - Sales & Marketing Professional.pdf, success=true, extractedData={experience (truncated)...]
2025-06-13 11:12:21 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:12:22 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:12:22 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:12:22 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Processing resume upload: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 11:12:24 [http-nio-8081-exec-3] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/2e130c72-9c1f-4fc6-bd59-e4a8ca629005-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 11:12:29 [http-nio-8081-exec-3] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/2e130c72-9c1f-4fc6-bd59-e4a8ca629005-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 11:12:29 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Rajesh Kumar
Demand Planning Specialist
rajesh kumar@email.com
+91 98765 54321
linkedin.com/in/rajeshkumar
T
Pune, Maharashtra, India
Professional Summary
Strategic Demand Planning professional with 8+ years of experience in supply chain
optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting,
inventory management, and S&OP processes with proven track record of improving forecast
accuracy by 45% and reducing inventory costs by ₹2.5 crores annually. Skilled in implementing
demand planning solutions for multi-location operations across India.
Professional Experience
O
Senior Demand Planning Manager
Apr 202 Present
Hindustan Unilever Limited
Lead demand planning for 800+ SKUs across North and West India regions
Improved forecast accuracy from 72% to 91% using advanced analytics and ML models
Reduced excess inventory by ₹1.8 crores through enhanced demand sensing
Led S&OP implementation across 8 manufacturing locations
Managed cross-functional teams of 15+ members across supply chain functions
Implemented SAP IBP resulting in 40% reduction in planning cycle time
Demand Planner
Jun 2019 Mar 2021
ITC Limited
Managed demand planning for cigarettes and FMCG portfolio worth ₹500 crores
Developed statistical models for seasonal demand patterns using R and Python
Collaborated with marketing teams for promotional planning and new product launches
Reduced stockout incidents by 35% through improved demand sensing
Created automated dashboards using Power BI for executive reporting
Supply Chain Analyst
Jul 2017 May 2019
Mahindra & Mahindra
Supported inventory optimization for automotive spare parts across 200+ dealers
Performed root cause analysis on forecast variances and implemented corrections
Created Excel-based planning tools reducing manual effort by 60%
Assisted in vendor collaboration initiatives improving supplier fill rates
Core Competencies
Planning & Forecasting
Technology & Tools
Statistical Forecasting
Demand Sensing
SAP IBP/APO
Oracle Demantra
Power BI
S&OP
Inventory Optimization
Advanced Excel
Python
R Programming
Collaborative Planning
Industry Knowledge
FMCG
Automotive
Manufacturing
Retail
Multi- location Ops
Education & Certifications
Master of Business Administration (Operations)
Indian Institute of Management, Kozhikode
2015 2017
Bachelor of Engineering (Mechanical)
Pune University
2011 2015
Certifications
APICS SCOR Certified CPIM Certified SAP IBP Certification Six Sigma Green Belt

2025-06-13 11:12:33 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Statistical Forecasting\",\n    \"Demand Sensing\",\n    \"Inventory Optimization\",\n    \"Advanced Excel\",\n    \"Python\",\n    \"R Programming\"\n  ],\n  \"soft_skills\": [\n    \"Collaborative Planning\",\n    \"Industry Knowledge\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Operations)\",\n  \"years_of_experience\": 8,\n  \"certifications\": [\n    \"APICS SCOR Certified\",\n    \"CPIM Certified\",\n    \"SAP IBP Certification\",\n    \"Six Sigma Green Belt\"\n  ],\n  \"industries\": [\n    \"FMCG\",\n    \"Automotive\",\n    \"Manufacturing\",\n    \"Retail\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R Programming\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"SAP IBP/APO\",\n    \"Oracle Demantra\",\n    \"Power BI\",\n    \"Advanced Excel\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Improved forecast accuracy from 72% to 91% using advanced analytics and ML models\",\n    \"Reduced excess inventory by ₹1.8 crores through enhanced demand sensing\",\n    \"Reduced stockout incidents by 35% through improved demand sensing\"\n  ],\n  \"summary\": \"Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with proven track record of improving forecast accuracy by 45% and reducing inventory costs by ₹2.5 crores annually.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":775,"outputTokens":427,"totalTokens":1202}}
2025-06-13 11:12:33 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Statistical Forecasting",
    "Demand Sensing",
    "Inventory Optimization",
    "Advanced Excel",
    "Python",
    "R Programming"
  ],
  "soft_skills": [
    "Collaborative Planning",
    "Industry Knowledge"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Operations)",
  "years_of_experience": 8,
  "certifications": [
    "APICS SCOR Certified",
    "CPIM Certified",
    "SAP IBP Certification",
    "Six Sigma Green Belt"
  ],
  "industries": [
    "FMCG",
    "Automotive",
    "Manufacturing",
    "Retail"
  ],
  "programming_languages": [
    "Python",
    "R Programming"
  ],
  "frameworks": [],
  "tools": [
    "SAP IBP/APO",
    "Oracle Demantra",
    "Power BI",
    "Advanced Excel"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Improved forecast accuracy from 72% to 91% using advanced analytics and ML models",
    "Reduced excess inventory by ₹1.8 crores through enhanced demand sensing",
    "Reduced stockout incidents by 35% through improved demand sensing"
  ],
  "summary": "Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with proven track record of improving forecast accuracy by 45% and reducing inventory costs by ₹2.5 crores annually."
}
```
2025-06-13 11:12:33 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 11:12:33 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Processed candidate: Rajesh Kumar - Demand Planning Specialist.pdf with ID: 9306fd1e-ef5b-4c0c-bb6a-b7c6e2da7489
2025-06-13 11:12:33 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rajesh Kumar - Demand Planning Specialist.pdf (ID: 9306fd1e-ef5b-4c0c-bb6a-b7c6e2da7489) in 11566ms
2025-06-13 11:12:33 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:12:33 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rajesh Kumar - Demand Planning Specialist.pdf, success=true, extractedData={experienceLeve (truncated)...]
2025-06-13 11:12:33 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:12:34 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:12:34 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:12:34 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Processing resume upload: Rohit Gupta - Angular Developer.pdf
2025-06-13 11:12:41 [http-nio-8081-exec-6] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/9ba195e7-64ff-468a-b218-3247c6420b32-Rohit Gupta - Angular Developer.pdf
2025-06-13 11:12:51 [http-nio-8081-exec-6] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/9ba195e7-64ff-468a-b218-3247c6420b32-Rohit Gupta - Angular Developer.pdf
2025-06-13 11:12:51 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
hit Gupta
per & Frontend Specialist
+91 99876 54321
A linkedin.com/in/rohitgupta
github.com/rohitgupta
Delhi. India
I
PROFESSIONAL SUMMARY
TECHNICAL
EXPERTISE
Experienced Angular Developer with 4+ years of
ANGULAR FRAMEWORK
expertise in building dynamic, responsive web
applications using Angular framework and
Angular
Angular 1
TypeScript. Proficient in creating scalable frontend
Angular
Angular CLI
solutions with RxJS, NgRx state management, and
Angula Router
modern UI libraries. Strong background in integrating
RESTful APIs, implementing unit testing with Jasmine
and Karma, and optimizing application performance.
CORE TECHNOLOGIES
Passionate about clean code, user experience, and
TypeScript
JavaScript
staying updated with latest Angular trends and best
practices.
HTML5 CSS3
STATE MANAGEMENT
T
PROFESSIONAL EXPERIENCE
NgRx RxJ
Observable
Reactive Programming
Senior Angular Developer
HCL Technologies
Feb 2022 Present
UI LIBRARIES
Angular
TypeScript
RxJS
NgRx
ingula Material
Bootstra
Angular Material
Jasmine Karma REST APIs
Chart.j
PrimeNG
. Developed enterprise banking applications using Angular
15+ and TypeScript with 99 9% uptime
.
Implemented state management using NgR> for complex
TESTING APIS
application state handling
Jasmine
Karma
. Built reusable components using Angular Material and
custom UI libraries
REST
Integrated RESTful APIs and handled asynchronous
WebSocke
Socket.ic
operations using Rx1S observables
Achieved 95% code coverage through comprehensive unit
testing with Jasmine and Karma
TOOLS OTHERS
Optimized application performance resulting 40% faster
page load times
VS Code
Mentored junior developers Angular best practices
Webpack
and code review processes
EDUCATION
Angular Developer
Tech Mahindra
Jun 2021 2022
Bachelor of Technology
Angular 12
TypeScript
Bootstrap
Chart.js
(Computer Science)
HTTP Client
Forms
Delhi Technological University
2016-2020
. Built responsive dashboard applications using Angular 12
and Bootstrap framework
.
Created interactive data visualizations using Chart.js and
Angular integration
CERTIFICATIONS
Implemented reactive forms and template-driven forms
for data collection
Angular Certified Developer
Consumed REST APIs using Angular HTTP Client and
handled error scenarios
TypeScript Professional
Collaborated with UX/UI teams to implement pixel perfect
designs
NgRx State Management
Participated agile development cycles with daily
standups and sprint planning
Rx1S Reactive Programming
Frontend Web Development
Frontend Developer
Angular Testing with Jasmine
Cognizant Technology
Aug 2020 May
Solutions
2021
LANGUAGES
Angular
JavaScript
HTML5
CSS3
SCSS
Gi
Hindi: Native
English: Fluent
.
Developed customer facing web applications using
Angular 10 and modern JavaScript
Punjabi: Conversational
Created responsive layouts using HTML5, CSS3, and SCSS
preprocessor
INTERESTS
Implemented routing and navigation using Angular Router
Worked with version control using Git and collaborated in
Frontend Architectur Angular
team environments
Updates Open Source Contributing
Fixed bugs and implemented feature enhancements
. Tech Blogging UI/UX Design
based on client requirements
FEATURED PROJECTS
Banking Dashboard
E-Commerce Admin
System
Panel
Angular
NgRx
Angular 12
Angular Material
TypeScript
Bootstrap
Chart.js
RxJS
REST APIs
Forms
Developed comprehensive
Built admin panel e
banking dashboard using
commerce management
Angular with NgRx for
using Angular 12 and
state management
TypeScript Implemented
Integrated Angular Material
Bootstrap responsive
components consistent
design integrated REST
UI and Chart.j for financial
APIs data operations,
data visualization Used
and created complex forms
RxJS handling complex
for product and inventory
asynchronous operations
management
and real-time updates.
Task Management
Real-time Chat
Application
Interface
Angular
Jasmine
Angula Socket.ig
Karma
HTTP Client
SCSS WebSocket
Local Storage
Reactive Forms
Created task management
Developed real-time chat
app using Angular 10 with
application using Angular 14
local storage data
and Socket.ic WebSocket
persistence. Implemented
communication Styled with
comprehensive unit testing
SCSS custom
with Jasmine and Karma.
animations impleme nted
used HTTP Client for API
reactive forms message
integration and built drag
input. and handled real time
and-drop functionality for
message updates efficiently
task organization

2025-06-13 11:12:57 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Angular\",\n    \"Angular 1\",\n    \"TypeScript\",\n    \"RxJS\",\n    \"NgRx\",\n    \"Angular CLI\",\n    \"Angular Router\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\",\n    \"Jasmine\",\n    \"Karma\",\n    \"REST APIs\",\n    \"WebSocket\",\n    \"Chart.js\",\n    \"PrimeNG\",\n    \"VS Code\",\n    \"Webpack\",\n    \"Git\"\n  ],\n  \"soft_skills\": [\n    \"Mentoring\",\n    \"Collaboration\",\n    \"Agile development\",\n    \"Team environments\"\n  ],\n  \"experience_level\": \"MID\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 4,\n  \"certifications\": [\n    \"Angular Certified Developer\",\n    \"TypeScript Professional\",\n    \"NgRx State Management\",\n    \"RxJS Reactive Programming\",\n    \"Frontend Web Development\",\n    \"Angular Testing with Jasmine\"\n  ],\n  \"industries\": [\n    \"IT\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"TypeScript\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\"\n  ],\n  \"frameworks\": [\n    \"Angular\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"PrimeNG\"\n  ],\n  \"tools\": [\n    \"VS Code\",\n    \"Webpack\",\n    \"Git\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Developed enterprise banking applications with 99.9% uptime\",\n    \"Achieved 95% code coverage through comprehensive unit testing\",\n    \"Optimized application performance resulting in 40% faster page load times\"\n  ],\n  \"summary\": \"Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular, TypeScript, and modern UI libraries. Passionate about clean code and user experience.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1267,"outputTokens":546,"totalTokens":1813}}
2025-06-13 11:12:57 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Angular",
    "Angular 1",
    "TypeScript",
    "RxJS",
    "NgRx",
    "Angular CLI",
    "Angular Router",
    "Angular Material",
    "Bootstrap",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS",
    "Jasmine",
    "Karma",
    "REST APIs",
    "WebSocket",
    "Chart.js",
    "PrimeNG",
    "VS Code",
    "Webpack",
    "Git"
  ],
  "soft_skills": [
    "Mentoring",
    "Collaboration",
    "Agile development",
    "Team environments"
  ],
  "experience_level": "MID",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 4,
  "certifications": [
    "Angular Certified Developer",
    "TypeScript Professional",
    "NgRx State Management",
    "RxJS Reactive Programming",
    "Frontend Web Development",
    "Angular Testing with Jasmine"
  ],
  "industries": [
    "IT",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "TypeScript",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS"
  ],
  "frameworks": [
    "Angular",
    "Angular Material",
    "Bootstrap",
    "PrimeNG"
  ],
  "tools": [
    "VS Code",
    "Webpack",
    "Git"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Developed enterprise banking applications with 99.9% uptime",
    "Achieved 95% code coverage through comprehensive unit testing",
    "Optimized application performance resulting in 40% faster page load times"
  ],
  "summary": "Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular, TypeScript, and modern UI libraries. Passionate about clean code and user experience."
}
```
2025-06-13 11:12:57 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rohit Gupta - Angular Developer.pdf
2025-06-13 11:12:57 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Processed candidate: Rohit Gupta - Angular Developer.pdf with ID: 2adee6a6-4fba-47b6-8fa4-7496d44995da
2025-06-13 11:12:57 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rohit Gupta - Angular Developer.pdf (ID: 2adee6a6-4fba-47b6-8fa4-7496d44995da) in 22825ms
2025-06-13 11:12:57 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:12:57 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rohit Gupta - Angular Developer.pdf, success=true, extractedData={experienceLevel=MID, ski (truncated)...]
2025-06-13 11:12:57 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:12:58 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 11:12:58 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 11:12:58 [http-nio-8081-exec-4] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 11:12:58 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:12:58 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@60ce4483, com.hackathon.hr.model.Candidate@7dee1e68, com.hackathon (truncated)...]
2025-06-13 11:12:58 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 11:14:14 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: f27fdf46-e29a-4c4e-9c36-a442cb038e95 (Java Developer)
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 39.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Java Developer
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 50.714285714285715 for candidate Arjun Singh - Software Developer.pdf and job Java Developer
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Karan Singh - DevOps Engineer.pdf and job Java Developer
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.14285714285714 for candidate Kavya Nair - Full Stack Developer.pdf and job Java Developer
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Java Developer
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Anjali Patel - Data Analyst.pdf and job Java Developer
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 33.714285714285715 for candidate Aarav Sharma - Junior Developer.pdf and job Java Developer
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.14285714285714 for candidate Deepika Reddy - Java Developer.pdf and job Java Developer
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 63.714285714285715 for candidate Rohit Gupta - Angular Developer.pdf and job Java Developer
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Java Developer
2025-06-13 11:14:14 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Java Developer
2025-06-13 11:14:14 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: f27fdf46-e29a-4c4e-9c36-a442cb038e95 in 48ms
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=f27fdf46-e29a-4c4e-9c36-a442cb038e95, success=true, totalCandidates=10, jobTitle=Java Develop (truncated)...]
2025-06-13 11:14:14 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 11:17:25 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 88e5ae88-a6c0-4cec-8298-9c5dbd0fa640 (Sales Demand Planning)
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 70.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Sales Demand Planning
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Arjun Singh - Software Developer.pdf and job Sales Demand Planning
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Karan Singh - DevOps Engineer.pdf and job Sales Demand Planning
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Sales Demand Planning
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Sales Demand Planning
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Anjali Patel - Data Analyst.pdf and job Sales Demand Planning
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Sales Demand Planning
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Deepika Reddy - Java Developer.pdf and job Sales Demand Planning
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Rohit Gupta - Angular Developer.pdf and job Sales Demand Planning
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Mei Chen - Marketing Analyst.pdf and job Sales Demand Planning
2025-06-13 11:17:25 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Sales Demand Planning
2025-06-13 11:17:25 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 88e5ae88-a6c0-4cec-8298-9c5dbd0fa640 in 6ms
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=88e5ae88-a6c0-4cec-8298-9c5dbd0fa640, success=true, totalCandidates=10, jobTitle=Sales Demand (truncated)...]
2025-06-13 11:17:25 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 11:17:43 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 299a69af-d433-4908-a25d-aadc28a8ca08 (DevOps Engineer)
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 54.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job DevOps Engineer
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 77.14285714285714 for candidate Arjun Singh - Software Developer.pdf and job DevOps Engineer
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 88.57142857142857 for candidate Karan Singh - DevOps Engineer.pdf and job DevOps Engineer
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Kavya Nair - Full Stack Developer.pdf and job DevOps Engineer
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job DevOps Engineer
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Anjali Patel - Data Analyst.pdf and job DevOps Engineer
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job DevOps Engineer
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 69.42857142857143 for candidate Deepika Reddy - Java Developer.pdf and job DevOps Engineer
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Rohit Gupta - Angular Developer.pdf and job DevOps Engineer
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Mei Chen - Marketing Analyst.pdf and job DevOps Engineer
2025-06-13 11:17:43 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: DevOps Engineer
2025-06-13 11:17:43 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 299a69af-d433-4908-a25d-aadc28a8ca08 in 22ms
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=299a69af-d433-4908-a25d-aadc28a8ca08, success=true, totalCandidates=10, jobTitle=DevOps Engin (truncated)...]
2025-06-13 11:17:43 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 11:18:00 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: f3c0ec69-af59-41b2-aa1e-c1c894bd1516 (Data Scientist)
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 44.714285714285715 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Data Scientist
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 56.42857142857143 for candidate Arjun Singh - Software Developer.pdf and job Data Scientist
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Karan Singh - DevOps Engineer.pdf and job Data Scientist
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.714285714285715 for candidate Kavya Nair - Full Stack Developer.pdf and job Data Scientist
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Data Scientist
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 50.714285714285715 for candidate Anjali Patel - Data Analyst.pdf and job Data Scientist
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Data Scientist
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Deepika Reddy - Java Developer.pdf and job Data Scientist
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Rohit Gupta - Angular Developer.pdf and job Data Scientist
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 54.42857142857143 for candidate Mei Chen - Marketing Analyst.pdf and job Data Scientist
2025-06-13 11:18:00 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Data Scientist
2025-06-13 11:18:00 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: f3c0ec69-af59-41b2-aa1e-c1c894bd1516 in 2ms
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=f3c0ec69-af59-41b2-aa1e-c1c894bd1516, success=true, totalCandidates=10, jobTitle=Data Scienti (truncated)...]
2025-06-13 11:18:00 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:18:29 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 11:18:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 11:18:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 11:18:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 11:18:29 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:22:02 [RMI TCP Connection(23)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 11:22:02 [RMI TCP Connection(23)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 11:22:02 [RMI TCP Connection(23)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 11:31:55 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 72396 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 11:31:55 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 11:31:55 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 11:31:55 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 11:31:55 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 11:31:57 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 11:31:57 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 11:31:57 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 11:31:57 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 11:31:57 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1723 ms
2025-06-13 11:31:59 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 5 sample jobs
2025-06-13 11:31:59 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 5 sample jobs
2025-06-13 11:31:59 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 11:31:59 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 11:31:59 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 19 mappings in 'requestMappingHandlerMapping'
2025-06-13 11:31:59 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 11:31:59 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 11:31:59 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 11:31:59 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 11:31:59 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.606 seconds (JVM running for 5.806)
2025-06-13 11:32:08 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 11:32:08 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@62c0ca86
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5a260959
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 11:32:08 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 5 jobs
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7c92de05
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@b30c218
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@463afcae
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 11:32:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:09 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 11:32:09 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 11:32:09 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 11:32:09 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 11:32:09 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 5 job requirements
2025-06-13 11:32:09 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 11:32:09 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:32:09 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:32:09 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@4c97616e, com.hackathon.hr.model.JobRequirement@7ba79cb0, com (truncated)...]
2025-06-13 11:32:09 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 11:32:09 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:09 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:18 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 11:32:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 11:32:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 11:32:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 11:32:19 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:29 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 11:32:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:32:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:32:29 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:32:29 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:32:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:32:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:32:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:32:29 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:32:29 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:32:34 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 11:32:34 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 11:32:34 [http-nio-8081-exec-6] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 5 jobs
2025-06-13 11:32:34 [http-nio-8081-exec-6] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 11:32:34 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:34 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 11:32:34 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:32:34 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 11:32:34 [http-nio-8081-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 11:32:34 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/candidates.js", parameters={}
2025-06-13 11:32:34 [http-nio-8081-exec-7] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:32:34 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:32:34 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/matching.js", parameters={}
2025-06-13 11:32:34 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:32:34 [http-nio-8081-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:32:34 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:32:34 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:32:34 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:32:34 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:32:34 [http-nio-8081-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:32:34 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 11:32:34 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:32:34 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:34 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:34 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:32:34 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/upload.js", parameters={}
2025-06-13 11:32:34 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:32:34 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:34 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:34 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:35 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 11:32:35 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 11:32:35 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 11:32:35 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Retrieved 5 job requirements
2025-06-13 11:32:35 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:32:35 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 11:32:35 [http-nio-8081-exec-2] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:32:35 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:32:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 11:32:35 [http-nio-8081-exec-4] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 11:32:35 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:32:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:32:35 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:32:35 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:32:35 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:32:35 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@4c97616e, com.hackathon.hr.model.JobRequirement@7ba79cb0, com (truncated)...]
2025-06-13 11:32:35 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:32:35 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:32:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 11:32:35 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:35 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:35 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:32:43 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 11:32:43 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 11:32:43 [http-nio-8081-exec-6] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 5 jobs
2025-06-13 11:32:43 [http-nio-8081-exec-6] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 11:32:43 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:43 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 11:32:43 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/upload.js", parameters={}
2025-06-13 11:32:43 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/matching.js", parameters={}
2025-06-13 11:32:43 [http-nio-8081-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:32:43 [http-nio-8081-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:32:43 [http-nio-8081-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:32:43 [http-nio-8081-exec-8] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:32:43 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:32:43 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:43 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:43 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 11:32:43 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 11:32:43 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:32:43 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 11:32:43 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:32:43 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:43 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:32:43 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:32:43 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:32:43 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:32:43 [http-nio-8081-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:32:43 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/candidates.js", parameters={}
2025-06-13 11:32:43 [http-nio-8081-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:32:43 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:43 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:44 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 11:32:44 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 11:32:44 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 11:32:44 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 11:32:44 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Retrieved 5 job requirements
2025-06-13 11:32:44 [http-nio-8081-exec-4] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 11:32:44 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:32:44 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@4c97616e, com.hackathon.hr.model.JobRequirement@7ba79cb0, com (truncated)...]
2025-06-13 11:32:44 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:32:44 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 11:32:44 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:44 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:32:46 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 11:32:46 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 11:32:46 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 11:32:46 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 11:32:47 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:10 [RMI TCP Connection(11)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 11:33:10 [RMI TCP Connection(11)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 11:33:10 [RMI TCP Connection(11)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 11:33:17 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 72419 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 11:33:17 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 11:33:17 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 11:33:17 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 11:33:17 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 11:33:19 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 11:33:19 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 11:33:19 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 11:33:19 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 11:33:19 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1872 ms
2025-06-13 11:33:20 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 5 sample jobs
2025-06-13 11:33:20 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 5 sample jobs
2025-06-13 11:33:21 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 11:33:21 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 11:33:21 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 19 mappings in 'requestMappingHandlerMapping'
2025-06-13 11:33:21 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 11:33:21 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 11:33:21 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 11:33:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 11:33:21 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.831 seconds (JVM running for 5.98)
2025-06-13 11:33:29 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 11:33:29 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@674bce1b
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@906dc9d
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 11:33:29 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 5 jobs
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5b22a9a5
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2e42b2de
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@53a7a238
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 11:33:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:29 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 11:33:29 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 11:33:29 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/matching.js", parameters={}
2025-06-13 11:33:29 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/upload.js", parameters={}
2025-06-13 11:33:29 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 11:33:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:33:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:33:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:33:29 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 11:33:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:33:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:33:29 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:33:29 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:29 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:29 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:29 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:29 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/candidates.js", parameters={}
2025-06-13 11:33:29 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:33:29 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:33:29 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:33:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:33:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:33:29 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:33:29 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:33:30 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 11:33:30 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 11:33:30 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 11:33:30 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 11:33:30 [http-nio-8081-exec-7] DEBUG c.h.hr.controller.HRController - Retrieved 5 job requirements
2025-06-13 11:33:30 [http-nio-8081-exec-8] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 11:33:30 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:33:30 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:33:30 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@442d02cf, com.hackathon.hr.model.JobRequirement@7c5ce619, com (truncated)...]
2025-06-13 11:33:30 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 11:33:30 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:30 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:35 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 11:33:35 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 11:33:35 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 11:33:35 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 11:33:35 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:42 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 11:33:42 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 11:33:42 [http-nio-8081-exec-10] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 5 jobs
2025-06-13 11:33:42 [http-nio-8081-exec-10] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 11:33:42 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:42 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 11:33:42 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 11:33:42 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/upload.js", parameters={}
2025-06-13 11:33:42 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 11:33:42 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/matching.js", parameters={}
2025-06-13 11:33:42 [http-nio-8081-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:33:42 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 11:33:42 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:33:42 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:33:42 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:33:42 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:42 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:42 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:42 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:42 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/candidates.js", parameters={}
2025-06-13 11:33:42 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:33:42 [http-nio-8081-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:33:42 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:33:42 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:33:42 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:33:42 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:33:42 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:33:42 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:33:42 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:33:42 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:43 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 11:33:43 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 11:33:43 [http-nio-8081-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:33:43 [http-nio-8081-exec-8] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:33:43 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:33:43 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:33:43 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:33:43 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:33:43 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:33:43 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:33:43 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 11:33:43 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 11:33:43 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 11:33:43 [http-nio-8081-exec-7] DEBUG c.h.hr.controller.HRController - Retrieved 5 job requirements
2025-06-13 11:33:43 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 11:33:43 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:33:43 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 11:33:43 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:33:43 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@442d02cf, com.hackathon.hr.model.JobRequirement@7c5ce619, com (truncated)...]
2025-06-13 11:33:43 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:43 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:43 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:33:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 11:33:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 11:33:51 [http-nio-8081-exec-9] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 5 jobs
2025-06-13 11:33:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 11:33:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:51 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 11:33:51 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/candidates.js", parameters={}
2025-06-13 11:33:51 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:33:51 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/upload.js", parameters={}
2025-06-13 11:33:51 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:33:51 [http-nio-8081-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:33:51 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/matching.js", parameters={}
2025-06-13 11:33:51 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 11:33:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 11:33:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:33:51 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:51 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:51 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:51 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:51 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:51 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 11:33:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:33:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:33:51 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:33:51 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:33:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:33:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:33:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:33:51 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:33:51 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:33:52 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 11:33:52 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 11:33:52 [http-nio-8081-exec-6] DEBUG c.h.hr.controller.HRController - Retrieved 5 job requirements
2025-06-13 11:33:52 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:33:52 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@442d02cf, com.hackathon.hr.model.JobRequirement@7c5ce619, com (truncated)...]
2025-06-13 11:33:52 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 11:33:52 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 11:33:52 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 11:33:52 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:33:52 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 11:33:52 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:52 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:33:52 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 11:33:52 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:33:52 [http-nio-8081-exec-7] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:33:52 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:33:52 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:33:52 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:33:52 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:33:52 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:33:52 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:33:52 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:33:54 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 11:33:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 11:33:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 11:33:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 11:33:54 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:34:08 [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 11:34:08 [RMI TCP Connection(10)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 11:34:08 [RMI TCP Connection(10)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 11:34:55 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 72461 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 11:34:55 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 11:34:55 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 11:34:55 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 11:34:55 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 11:34:57 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 11:34:57 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 11:34:57 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 11:34:58 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 11:34:58 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2259 ms
2025-06-13 11:35:00 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 5 sample jobs
2025-06-13 11:35:00 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 5 sample jobs
2025-06-13 11:35:00 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 11:35:00 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 11:35:00 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 19 mappings in 'requestMappingHandlerMapping'
2025-06-13 11:35:00 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 11:35:00 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 11:35:00 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 11:35:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 11:35:01 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 5.95 seconds (JVM running for 7.243)
2025-06-13 11:35:13 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 11:35:13 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@62c0ca86
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5a260959
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 11:35:13 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 5 jobs
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7c92de05
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@b30c218
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@463afcae
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 11:35:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:35:14 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 11:35:14 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 11:35:14 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 11:35:14 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 11:35:14 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 5 job requirements
2025-06-13 11:35:14 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 11:35:14 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:35:14 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:35:14 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 11:35:14 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@43450b4, com.hackathon.hr.model.JobRequirement@37f1fde4, com. (truncated)...]
2025-06-13 11:35:14 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:35:14 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:35:20 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 11:35:20 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 11:35:20 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 11:35:20 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 11:35:20 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:39:11 [RMI TCP Connection(14)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 11:39:11 [RMI TCP Connection(14)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 11:39:11 [RMI TCP Connection(14)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 11:39:41 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 72507 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 11:39:41 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 11:39:41 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 11:39:41 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 11:39:41 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 11:39:43 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 11:39:43 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 11:39:43 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 11:39:43 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 11:39:43 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1948 ms
2025-06-13 11:39:45 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 5 sample jobs
2025-06-13 11:39:45 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 5 sample jobs
2025-06-13 11:39:45 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 11:39:45 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 11:39:45 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 19 mappings in 'requestMappingHandlerMapping'
2025-06-13 11:39:45 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 11:39:45 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 11:39:45 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 11:39:45 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 11:39:45 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 5.152 seconds (JVM running for 6.608)
2025-06-13 11:39:52 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 11:39:52 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@62c0ca86
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5a260959
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 11:39:52 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 5 jobs
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7c92de05
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@b30c218
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@463afcae
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 11:39:52 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:39:53 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 11:39:53 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 11:39:53 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 11:39:53 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 11:39:53 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 11:39:53 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 5 job requirements
2025-06-13 11:39:53 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:39:53 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:39:53 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@6376ba1c, com.hackathon.hr.model.JobRequirement@5223a8d, com. (truncated)...]
2025-06-13 11:39:53 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 11:39:53 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:39:53 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:39:59 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 11:39:59 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:39:59 [http-nio-8081-exec-4] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:39:59 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:39:59 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:39:59 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:39:59 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:39:59 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:39:59 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:39:59 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:40:01 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 11:40:01 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 11:40:01 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 5 jobs
2025-06-13 11:40:01 [http-nio-8081-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 11:40:01 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:40:01 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/upload.js", parameters={}
2025-06-13 11:40:01 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/matching.js", parameters={}
2025-06-13 11:40:01 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 11:40:01 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:40:01 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 11:40:01 [http-nio-8081-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:40:01 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:40:01 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 11:40:01 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:40:01 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:40:01 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:40:01 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:40:01 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 11:40:01 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/candidates.js", parameters={}
2025-06-13 11:40:01 [http-nio-8081-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:40:01 [http-nio-8081-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 11:40:01 [http-nio-8081-exec-8] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:40:01 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:40:01 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:40:01 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:40:01 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:40:01 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:40:01 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:40:01 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:40:01 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:40:02 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 11:40:02 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 11:40:02 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 5 job requirements
2025-06-13 11:40:02 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:40:02 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@6376ba1c, com.hackathon.hr.model.JobRequirement@5223a8d, com. (truncated)...]
2025-06-13 11:40:02 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 11:40:02 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 11:40:02 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 11:40:02 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 11:40:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 11:40:02 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:40:02 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 11:40:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 11:40:02 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 11:40:02 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:40:02 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:40:02 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 11:40:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 11:40:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:40:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 11:40:02 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 11:40:02 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 11:40:06 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 11:40:06 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 11:40:06 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 11:40:06 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 11:40:06 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:40:29 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:40:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:40:29 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Processing resume upload: Aarav Sharma - Junior Developer.pdf
2025-06-13 11:40:33 [http-nio-8081-exec-7] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/de5bc259-f3c9-4db4-994a-c0a1b6e70415-Aarav Sharma - Junior Developer.pdf
2025-06-13 11:40:38 [http-nio-8081-exec-7] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/de5bc259-f3c9-4db4-994a-c0a1b6e70415-Aarav Sharma - Junior Developer.pdf
2025-06-13 11:40:38 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Aarav Sharma
Junior Software Developer
aarav.sharma@email.com
+91 98765 43210
linkedin.com/in/aaravsharma
github .com/aaravsharma
Jaipur, Rajasthan, India
Professional Summary
Technical Skills
Enthusiastic Junior Software Developer with 2+ years
FRONTEND
of experience in web development using modern
HTML5
CSS3
JavaScript
React
technologies. Passionate about creating clean,
efficient code and building user-friendly applications.
Bootstrap
Strong foundation in JavaScript, React, and Node is
BACKEND
with hands-on experience in full-stack development
Node.j
Express
PHP
REST APIs
projects. Eager to contribute to innovative software
solutions and grow within a dynamic development
DATABASES
team.
MongoDB
MySQL
TOOLS TECHNOLOGIES
Git GitHub
VS Code
Postman
Professional Experience
JWT
APIS INTEGRATIONS
Junior Software Developer
TechStart Solutions Pvt Ltd
Jun 2022 Present
Stripe API
Local Storage
JavaScript React Node.js MongoDB Express.js Git
Education
Developed responsive web applications using React and
JavaScript ES6+
Bachelor of Computer
Built REST APIs using Node js and Express js serving
10,000+ daily requests
Applications (BCA)
University of Rajasthan
Implemented user authentication and authorization using
2019 - 2022
JWT tokens
Collaborated with senior developers using Git for version
control and code reviews
Certifications
Optimized database queries in MongoDB reducing
.
response time by 25%
JavaScript Fundamentals freeCodeCamp
.
React Developer Course Udemy
Participated in agile development cycles with daily
.
Node js Certification Coursera
standups and sprint planning
.
Git Version Control Codecademy
Languages
Hindi: Native
Web Development Intern
English: Fluent
Digital Innovators
Jan 2022 May 2022
Rajasthani: Native
HTML5 CSS3 JavaScript Bootstrap MySQL
Created static websites using HTML5, CSS3, and
Bootstrap framework
Implemented interactive features using vanilla JavaScript
Assisted in maintaining MySQL databases and writing
basic SQL queries
Fixed UI bugs and improved cross-browser compatibility
Learned modern development practices and coding
standards
Key Projects
E-Commerce Shopping Platform
React
Node.j
Express
MongoDB
JWT
Stripe API
Built full-stack e-commerce application with React frontend
and Node js backend Implemented user authentication using
JWT. integrated Stripe payment gateway, and created admin
dashboard for inventory management. Used MongoDB for
data storage and Express js for API development.
Task Management System
JavaScript
React
Local Storage
CSS3
Bootstrap
Developed a responsive task management application using
React and JavaScript. Features include task creation, editing,
deletion. and status tracking. Implemented local storage for
data persistence and used Bootstrap for responsive design
across devices.
Restaurant Website
HTML5
CSS3
JavaScript
MySQL
PHP
Created dynamic restaurant website with online reservation
system. Used HTML5 and CSS3 for layout and styling,
JavaScript for interactive features, and PHP with MySQL for
backend functionality including reservation management and
menu display.

2025-06-13 11:40:46 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"HTML5\",\n    \"CSS3\",\n    \"JavaScript\",\n    \"React\",\n    \"Bootstrap\",\n    \"Node.js\",\n    \"Express.js\",\n    \"PHP\",\n    \"REST APIs\",\n    \"MongoDB\",\n    \"MySQL\",\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\",\n    \"JWT\",\n    \"Stripe API\",\n    \"Local Storage\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Communication\",\n    \"Problem-solving\",\n    \"Agile development\"\n  ],\n  \"experience_level\": \"ENTRY\",\n  \"education\": \"Bachelor of Computer Applications (BCA)\",\n  \"years_of_experience\": 2,\n  \"certifications\": [\n    \"JavaScript Fundamentals - freeCodeCamp\",\n    \"React Developer Course - Udemy\",\n    \"Node.js Certification - Coursera\",\n    \"Git Version Control - Codecademy\"\n  ],\n  \"industries\": [\n    \"Software Development\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"Node.js\",\n    \"PHP\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Bootstrap\",\n    \"Express.js\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Built REST APIs using Node.js and Express.js serving 10,000+ daily requests\",\n    \"Optimized database queries in MongoDB reducing response time by 25%\",\n    \"Implemented user authentication and authorization using JWT tokens\"\n  ],\n  \"summary\": \"Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":920,"outputTokens":529,"totalTokens":1449}}
2025-06-13 11:40:46 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "HTML5",
    "CSS3",
    "JavaScript",
    "React",
    "Bootstrap",
    "Node.js",
    "Express.js",
    "PHP",
    "REST APIs",
    "MongoDB",
    "MySQL",
    "Git",
    "GitHub",
    "VS Code",
    "Postman",
    "JWT",
    "Stripe API",
    "Local Storage"
  ],
  "soft_skills": [
    "Collaboration",
    "Communication",
    "Problem-solving",
    "Agile development"
  ],
  "experience_level": "ENTRY",
  "education": "Bachelor of Computer Applications (BCA)",
  "years_of_experience": 2,
  "certifications": [
    "JavaScript Fundamentals - freeCodeCamp",
    "React Developer Course - Udemy",
    "Node.js Certification - Coursera",
    "Git Version Control - Codecademy"
  ],
  "industries": [
    "Software Development"
  ],
  "programming_languages": [
    "JavaScript",
    "Node.js",
    "PHP"
  ],
  "frameworks": [
    "React",
    "Bootstrap",
    "Express.js"
  ],
  "tools": [
    "Git",
    "GitHub",
    "VS Code",
    "Postman"
  ],
  "databases": [
    "MongoDB",
    "MySQL"
  ],
  "cloud_platforms": [],
  "key_achievements": [
    "Built REST APIs using Node.js and Express.js serving 10,000+ daily requests",
    "Optimized database queries in MongoDB reducing response time by 25%",
    "Implemented user authentication and authorization using JWT tokens"
  ],
  "summary": "Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects."
}
```
2025-06-13 11:40:46 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Aarav Sharma - Junior Developer.pdf
2025-06-13 11:40:46 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Processed candidate: Aarav Sharma - Junior Developer.pdf with ID: cf4309b3-8a6a-4d18-a689-6afb42c6d54c
2025-06-13 11:40:46 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Aarav Sharma - Junior Developer.pdf (ID: cf4309b3-8a6a-4d18-a689-6afb42c6d54c) in 17515ms
2025-06-13 11:40:46 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:40:46 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Aarav Sharma - Junior Developer.pdf, success=true, extractedData={experienceLevel=ENTRY, s (truncated)...]
2025-06-13 11:40:46 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:40:47 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:40:47 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:40:48 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Processing resume upload: Anjali Patel - Data Analyst.pdf
2025-06-13 11:40:49 [http-nio-8081-exec-1] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/b118090f-bf4d-4d6d-82fd-bd4fd2e6be3d-Anjali Patel - Data Analyst.pdf
2025-06-13 11:41:03 [http-nio-8081-exec-1] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/b118090f-bf4d-4d6d-82fd-bd4fd2e6be3d-Anjali Patel - Data Analyst.pdf
2025-06-13 11:41:03 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Pater
S Intelligence Specialist
anjali.patel@email.com
+91 97845 62310
linkedin.com/in/anjalipate
Bangalore, Karnataka, India
Professional Summary
Technical Skills
Innovative Data Analyst with 6+ years of experience in
transforming complex datasets into strategic business
Programming
insights for Indian tech startups and MNCs. Expert in
Python
R
SQL
Java
Scala
machine learning, statistical modeling, and data
visualization with proven track record of improving
business efficiency by 50% and reducing costs by
Databases
₹30 lakh annually through data-driven
recommendations.
MySQL
PostgreSQL
MongoDB
Cassandra
Snowflake
Professional Experience
Analytics & ML
Senior Data Analyst
Pandas
NumPy
Scikit-learn
TensorFlow
Flipkart Group
Feb 2022 Present
Statistical Modeling
Developed ML models for customer behavior analysis
processing 10M+ transactions daily
Created automated dashboards reducing reporting time by
Visualization
70% for 15+ stakeholders
Led data quality initiatives improving accuracy by 95%
Tableau
Power B
matplotlib
seaborn
across e-commerce platform
D3.js
Implemented A/B testing framework increasing conversion
rates by 28%
Built recommendation engines improving customer
engagement by 35%
Cloud Platforms
AWS
Azure
GCP
Spark
Hadoop
Data Analyst
Infosys Limited
Jun 2020 Jan 2022
Analyzed financial data for global banking clients using
Python and SQL
Developed predictive models for fraud detection with 92%
Key Projects
accuracy
Created Power BI dashboards for C-level executives and
stakeholders
E-commerce Customer Segmentation
Optimized database queries improving performance by
Built ML clustering model using K-means and RFM
45%
analysis to segment 5M+ customers, enabling
personalized marketing campaigns with 40% higher
conversion rates.
Junior Data Analyst
Tata Consultancy Services
Jul 2018 May 2020
Real-time Fraud Detection System
Supported market research analysis for retail and
Developed ensemble learning model combining
healthcare clients
Random Forest and XGBoost achieving 94% accuracy
Developed Excel-based models for financial forecasting
in detecting fraudulent transactions for fintech
and budgeting
application.
Assisted in data migration projects and quality assurance
testing
Supply Chain Optimization Dashboard
Created interactive Tableau dashboard tracking 50+
KPIs across inventory, logistics, and vendor
performance, reducing operational costs by ₹25 lakh
annually.
Education
Master of Technology (Computer Science)
Indian Institute of Technology, Bombay
Certifications
2016 2018
AWS Certified Data Analytics Specialty (2024)
Bachelor of Engineering (Information
Technology)
Google Professional Data Engineer (2023)
Gujarat Technological University
2012 2016
Microsoft Azure Data Scientist Associate (2023)
Tableau Desktop Certified Professional (2022)
Google Analytics Individual Qualification (2022)
Languages
Hindi (Native)
English (Fluent)
Gujarati (Native)
Tamil (Conversational)

2025-06-13 11:41:10 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Machine Learning\",\n    \"Statistical Modeling\",\n    \"Data Visualization\",\n    \"Data Quality Initiatives\",\n    \"A/B Testing\",\n    \"Recommendation Engines\",\n    \"Predictive Modeling\",\n    \"Fraud Detection\",\n    \"Database Query Optimization\",\n    \"Customer Segmentation\",\n    \"Real-time Fraud Detection\",\n    \"Supply Chain Optimization\",\n    \"Financial Forecasting\",\n    \"Budgeting\"\n  ],\n  \"soft_skills\": [\n    \"Innovative\",\n    \"Analytical\",\n    \"Leadership\",\n    \"Communication\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Technology (Computer Science)\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"AWS Certified Data Analytics Specialty (2024)\",\n    \"Google Professional Data Engineer (2023)\",\n    \"Microsoft Azure Data Scientist Associate (2023)\",\n    \"Tableau Desktop Certified Professional (2022)\",\n    \"Google Analytics Individual Qualification (2022)\"\n  ],\n  \"industries\": [\n    \"Tech Startups\",\n    \"MNCs\",\n    \"E-commerce\",\n    \"Global Banking\",\n    \"Retail\",\n    \"Healthcare\",\n    \"Fintech\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R\",\n    \"SQL\",\n    \"Java\",\n    \"Scala\"\n  ],\n  \"frameworks\": [\n    \"Pandas\",\n    \"NumPy\",\n    \"Scikit-learn\",\n    \"TensorFlow\",\n    \"Spark\",\n    \"Hadoop\"\n  ],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"matplotlib\",\n    \"seaborn\",\n    \"D3.js\",\n    \"Excel\"\n  ],\n  \"databases\": [\n    \"MySQL\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"Cassandra\",\n    \"Snowflake\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\",\n    \"GCP\"\n  ],\n  \"key_achievements\": [\n    \"Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.\",\n    \"Increased conversion rates by 28% through the implementation of an A/B testing framework.\",\n    \"Achieved 95% accuracy improvement across the e-commerce platform by leading data quality initiatives.\"\n  ],\n  \"summary\": \"Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":934,"outputTokens":677,"totalTokens":1611}}
2025-06-13 11:41:10 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Machine Learning",
    "Statistical Modeling",
    "Data Visualization",
    "Data Quality Initiatives",
    "A/B Testing",
    "Recommendation Engines",
    "Predictive Modeling",
    "Fraud Detection",
    "Database Query Optimization",
    "Customer Segmentation",
    "Real-time Fraud Detection",
    "Supply Chain Optimization",
    "Financial Forecasting",
    "Budgeting"
  ],
  "soft_skills": [
    "Innovative",
    "Analytical",
    "Leadership",
    "Communication"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Technology (Computer Science)",
  "years_of_experience": 6,
  "certifications": [
    "AWS Certified Data Analytics Specialty (2024)",
    "Google Professional Data Engineer (2023)",
    "Microsoft Azure Data Scientist Associate (2023)",
    "Tableau Desktop Certified Professional (2022)",
    "Google Analytics Individual Qualification (2022)"
  ],
  "industries": [
    "Tech Startups",
    "MNCs",
    "E-commerce",
    "Global Banking",
    "Retail",
    "Healthcare",
    "Fintech"
  ],
  "programming_languages": [
    "Python",
    "R",
    "SQL",
    "Java",
    "Scala"
  ],
  "frameworks": [
    "Pandas",
    "NumPy",
    "Scikit-learn",
    "TensorFlow",
    "Spark",
    "Hadoop"
  ],
  "tools": [
    "Tableau",
    "Power BI",
    "matplotlib",
    "seaborn",
    "D3.js",
    "Excel"
  ],
  "databases": [
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Cassandra",
    "Snowflake"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure",
    "GCP"
  ],
  "key_achievements": [
    "Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.",
    "Increased conversion rates by 28% through the implementation of an A/B testing framework.",
    "Achieved 95% accuracy improvement across the e-commerce platform by leading data quality initiatives."
  ],
  "summary": "Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency."
}
```
2025-06-13 11:41:10 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Anjali Patel - Data Analyst.pdf
2025-06-13 11:41:10 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Processed candidate: Anjali Patel - Data Analyst.pdf with ID: aed326d1-424d-4c1e-84b6-cb7e4fff869a
2025-06-13 11:41:10 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Anjali Patel - Data Analyst.pdf (ID: aed326d1-424d-4c1e-84b6-cb7e4fff869a) in 22727ms
2025-06-13 11:41:10 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:41:10 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Anjali Patel - Data Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, skil (truncated)...]
2025-06-13 11:41:10 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:41:11 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:41:11 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:41:11 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Processing resume upload: Arjun Singh - Software Developer.pdf
2025-06-13 11:41:13 [http-nio-8081-exec-2] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/3235e021-e0ee-4b6b-a618-17883ff5d107-Arjun Singh - Software Developer.pdf
2025-06-13 11:41:17 [http-nio-8081-exec-2] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/3235e021-e0ee-4b6b-a618-17883ff5d107-Arjun Singh - Software Developer.pdf
2025-06-13 11:41:17 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Professional Summary
Experienced Full Stack Software Developer with 7+ years of
expertise in building scalable web applications and
Arjun Singh
microservices for Indian tech companies and global clients.
Proficient in modern JavaScript frameworks, cloud
Full Stack Developer
technologies, and agile methodologies. Strong track record of
leading development teams and delivering high-quality
arjun.singh@email.com
software solutions that improved system performance by 60%
+91 94567 89012
and reduced deployment time by 45%.
linkedin.com/in/arjunsingh
github.com/arjunsingh
Professional Experience
T
Hyderabad, Telangana, India
Senior Software Developer
TECHNICAL SKILLS
Zomato Limited
Mar 2022 Present
Frontend
React Node.js TypeScript MongoDB Redis AWS Docker
PostgreSQL
Led development of real-time order tracking system serving
Redis
200K+ daily orders
- Built microservices architecture reducing API response time by
55%
LANGUAGES
- Implemented automated testing pipeline achieving 90% code
Hindi
Native
coverage
English
Fluent
- Mentored 4 junior developers and conducted code reviews
Punjabi
Native
Optimized database queries reducing server costs by ₹8 lakh
monthly
Telugu
Conversational
Software Developer
TOOLS & PLATFORMS
PayTM (One97 Communications)
Jan 2020 Feb 2022
Git Docker . Kubernetes Jenkins AWS
Azure Jira Slack vs Code Intelli]
Vue.js
Express.js
MySQL
Python
Django
Jenkins
IDEA Postman Webpack
- Developed payment gateway integration handling 100 crore+
daily transactions
- Created fraud detection algorithms reducing fraudulent
transactions by 40%
- Built responsive wallet interface used by 50M+ active users
- Implemented CI/CD pipelines reducing deployment time from 4
hours to 30 minutes
Junior Software Developer
Mindtree Limited
Jul 2018 Dec 2019
Angular Spring Boot PostgreSQU HTML5 CSS3
- Developed e-commerce modules for US retail client using Angular
and Spring Boot
- Created responsive UI components improving user experience by
35%
T Participated in agile development with 2-week sprint cycles
1 Fixed 200+ bugs and implemented 50+ feature enhancements
Key Projects
Food Delivery
Cryptocurrency
Platform
Trading Bot
Built end-to-end food
Developed automated
delivery platform with real-
trading bot using Python
time tracking, payment
and machine learning
integration, and restaurant
algorithms achieving 15%
management system using
monthly returns in
MERN stack.
backtesting.
React
Node.js
Python TensorFlow
MongoDB
Redis
Education
Bachelor of Technology (Computer Science
Engineering)
Indian Institute of Technology, Hyderabad
2014 2018
Certifications & Achievements
AWS Certified Solutions Architect Associate (2024)
Google Cloud Professional Developer (2023)
MongoDB Certified Developer (2022)
Scrum Master Certified (2021)
Winner Smart India Hackathon 2017 (Government of India)
Open Source Contributor 1000+ GitHub contributions

2025-06-13 11:41:25 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Node.js\",\n    \"TypeScript\",\n    \"MongoDB\",\n    \"Redis\",\n    \"AWS\",\n    \"Docker\",\n    \"PostgreSQL\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"MySQL\",\n    \"Python\",\n    \"Django\",\n    \"Jenkins\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"TensorFlow\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentorship\",\n    \"Team Collaboration\",\n    \"Agile Methodologies\",\n    \"Code Review\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science Engineering)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect Associate (2024)\",\n    \"Google Cloud Professional Developer (2023)\",\n    \"MongoDB Certified Developer (2022)\",\n    \"Scrum Master Certified (2021)\"\n  ],\n  \"industries\": [\n    \"Technology\",\n    \"E-commerce\",\n    \"Finance\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"HTML5\",\n    \"CSS3\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Node.js\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"Django\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"AWS\",\n    \"Azure\",\n    \"Jira\",\n    \"Slack\",\n    \"VS Code\",\n    \"IntelliJ IDEA\",\n    \"Postman\",\n    \"Webpack\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"Redis\",\n    \"PostgreSQL\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\"\n  ],\n  \"key_achievements\": [\n    \"Improved system performance by 60% and reduced deployment time by 45%\",\n    \"Reduced API response time by 55% through microservices architecture\",\n    \"Reduced fraudulent transactions by 40% with fraud detection algorithms\"\n  ],\n  \"summary\": \"Experienced Full Stack Software Developer with over 7 years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Proven track record in leading teams and delivering high-quality software solutions.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":937,"outputTokens":675,"totalTokens":1612}}
2025-06-13 11:41:25 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Node.js",
    "TypeScript",
    "MongoDB",
    "Redis",
    "AWS",
    "Docker",
    "PostgreSQL",
    "Vue.js",
    "Express.js",
    "MySQL",
    "Python",
    "Django",
    "Jenkins",
    "Angular",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "TensorFlow"
  ],
  "soft_skills": [
    "Leadership",
    "Mentorship",
    "Team Collaboration",
    "Agile Methodologies",
    "Code Review"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science Engineering)",
  "years_of_experience": 7,
  "certifications": [
    "AWS Certified Solutions Architect Associate (2024)",
    "Google Cloud Professional Developer (2023)",
    "MongoDB Certified Developer (2022)",
    "Scrum Master Certified (2021)"
  ],
  "industries": [
    "Technology",
    "E-commerce",
    "Finance"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "HTML5",
    "CSS3"
  ],
  "frameworks": [
    "React",
    "Node.js",
    "Vue.js",
    "Express.js",
    "Angular",
    "Spring Boot",
    "Django"
  ],
  "tools": [
    "Git",
    "Docker",
    "Kubernetes",
    "Jenkins",
    "AWS",
    "Azure",
    "Jira",
    "Slack",
    "VS Code",
    "IntelliJ IDEA",
    "Postman",
    "Webpack"
  ],
  "databases": [
    "MongoDB",
    "Redis",
    "PostgreSQL",
    "MySQL"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure"
  ],
  "key_achievements": [
    "Improved system performance by 60% and reduced deployment time by 45%",
    "Reduced API response time by 55% through microservices architecture",
    "Reduced fraudulent transactions by 40% with fraud detection algorithms"
  ],
  "summary": "Experienced Full Stack Software Developer with over 7 years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Proven track record in leading teams and delivering high-quality software solutions."
}
```
2025-06-13 11:41:25 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Arjun Singh - Software Developer.pdf
2025-06-13 11:41:25 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Processed candidate: Arjun Singh - Software Developer.pdf with ID: c4654395-f74b-4cc9-9c08-d8bcdcae9839
2025-06-13 11:41:25 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Arjun Singh - Software Developer.pdf (ID: c4654395-f74b-4cc9-9c08-d8bcdcae9839) in 13691ms
2025-06-13 11:41:25 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:41:25 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Arjun Singh - Software Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, (truncated)...]
2025-06-13 11:41:25 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:41:26 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:41:26 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:41:26 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Processing resume upload: Deepika Reddy - Java Developer.pdf
2025-06-13 11:41:31 [http-nio-8081-exec-3] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/00a490a9-d6ee-4a81-93ec-a13b5da775ac-Deepika Reddy - Java Developer.pdf
2025-06-13 11:41:39 [http-nio-8081-exec-3] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/00a490a9-d6ee-4a81-93ec-a13b5da775ac-Deepika Reddy - Java Developer.pdf
2025-06-13 11:41:39 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Deepika Reddy
Java Developer & Backend Engineer
dccpika.reddy@email .com
H
+91 98712 34567
- linkedin com/1 in/deepikareddy
github.com/deepikareddy
T
Hyderabad, Telangana, India
PROFESSIONAL SUMMARY
TECHNICAL
SKILLS
Dedicated Java Developer with 5+ years of experience in
designing and developing enterprise level applications
CORE JAVA
using Java Spring Framework and microservices
lava I'
Java 11
architecture Expertise in building scalable backend
systems, RESTful APIs, and database integration with
lava OOP Concepts
strong knowledge of software design patterns and best
practices Proven track record of optimizing application
Multithreading
performance and delivering high-quality code in agile
environments
FRAMEWORKS
PROFESSIONAL EXPERIENCE
Spring Boot
Spring MVC
Spring Security
Senior Java Developer
Hibernato
JPA
Accenture Solutions
Jan 2022 Present
Java 17
Spring Boot
Spring Security
Microservices
DATABASES
PostgreSQL
Redis
Docker
Kafka
JUnit
PostgreSQI
MySQI
Developed microservices architecture using Java 17 and Spring
Oracle DB
Redis
Boot serving 500K+ daily transactions
Implemented secure authentication and authorization using
JDBC
Spring Security and JWT tokens
Designed and optimized PostgreSQI database schemas reducing
query execution time by 50%
WEB
Built event driven systems using Apache Kafka for real-time
TECHNOLOGIES
data processing
RESTAI
Implemented Redis caching strategies improving application
response 40%
Microservice
Servlets
Containerized applications using Docker and deployed on
Kubernetes clusters
JSP
SON
Achieved 90% code coverage through compreher sive unit
testing with JUnit and Mockito
TOOLS DEVOPS
Docker Kafka
Java Developer
Mayen Gi
Tomcat
Capgemini India
Mar 2020 Dec 2021
Java 11
Spring MVC
libernato
MySQI
RESTAPI
TESTING
Maven
Git
Unit
Mockito
Buil enterprise web applications using Java 11. Spring MVC.
and Hibernate ORM
Integration Testing
Developed RESTful APIs for frontend consumption and third-
party integrations
Unit Testing
Implemented database operations using Hibernate with MySQL
backend
Used Mayen for project management and dependency resolution
EDUCATION
Collaborated with cross-functional teams using Git for version
control
Participated code reviews and maintained high coding
Bachelor Technology
standards
(Computer Science)
Jawaharlal Nehru
Technological University
2015-2019
Associate Software Engineer
Wipro Technologies
Jul 2019 - Fcb 2020
CERTIFICATIONS
Juya8
Servlets
JSP
JDBC
Oracle
Tomcat
Oracle Certified Professional Java
Developed web applications using Java Servlets, and ISP
SE
technologies
Implemented database connectivity using JDBC with Oracle
Spring Professional Certification
database
Deployed applications on Apache Tomcat server
AWS Certified Developer
Fixed bugs and implemented feature enhancements based on
Associate
client requirements
Learned enterprise development practices and coding standards
Docker Certified Associate
Apache Kafka Developer
FEATURED PROJECTS
Microservice Architecture
LANGUAGES
Banking
E-Commerce Order
Microservices
Management
Platform
Telugu: Native
Java II
Spring MVC
Hindi: Fluent
Java 17
Spring Boot
libernate
MySQL
English: Fluent
PostgreSQ1
Redis
Tamil: Basic
RESTAPI
Kafka
Docker
Built order management
system using Java and
KEY
Architected prehensive
banki platform using
Spring MVC framework
ACHIEVEMENTS
microservices with Java 17
Implemented Hibernate for
and Spring Boot Implemented
ORM mapping with MySQL
database created REST APIs
PostgreSQL data
. performance improvement
persistence Redis caching
for order processing and
database queries
and Kalka for event streaming
integrated payment gateway
90% coverage
testing
Containerized services using
services
Led team of developers
500K daily transactions handled
Docker scalable
Zero production bugs in last months
deployment
Employee
Inventory Tracking
Management stem
API
Java 8
Servlets
Spring Boot
JSP
JDBC
Spring Security
JUnit
Oracle DB
Mockito
Mayen
Developed employee
Created REST for
management application using
inventory management using
Java with Servlets JSP
Spring Spring
for interface Used JDBC
Security authentication
for database operations with
Implemented comprehensive
Oracle backend implemented
testing with JUnit and
CRU D operations and
Mockito managed project
employee reporting features
dependencies with Mayen
build tool

2025-06-13 11:41:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Java 11\",\n    \"Java OOP Concepts\",\n    \"Multithreading\",\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\",\n    \"RESTful APIs\",\n    \"Servlets\",\n    \"JSP\",\n    \"JDBC\",\n    \"JSON\",\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Integration Testing\",\n    \"Unit Testing\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\"\n  ],\n  \"soft_skills\": [\n    \"Team Collaboration\",\n    \"Code Reviews\",\n    \"High Coding Standards\",\n    \"Problem Solving\",\n    \"Project Management\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"Oracle Certified Professional Java SE\",\n    \"Spring Professional Certification\",\n    \"AWS Certified Developer Associate\",\n    \"Docker Certified Associate\",\n    \"Apache Kafka Developer\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\"\n  ],\n  \"tools\": [\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\",\n    \"Tomcat\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"Oracle DB\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Kubernetes\"\n  ],\n  \"key_achievements\": [\n    \"Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions\",\n    \"Designed and optimized PostgreSQL database schemas reducing query execution time by 50%\",\n    \"Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito\"\n  ],\n  \"summary\": \"Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1286,"outputTokens":653,"totalTokens":1939}}
2025-06-13 11:41:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Java 11",
    "Java OOP Concepts",
    "Multithreading",
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA",
    "RESTful APIs",
    "Servlets",
    "JSP",
    "JDBC",
    "JSON",
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Integration Testing",
    "Unit Testing",
    "Docker",
    "Kafka",
    "Kubernetes"
  ],
  "soft_skills": [
    "Team Collaboration",
    "Code Reviews",
    "High Coding Standards",
    "Problem Solving",
    "Project Management"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 5,
  "certifications": [
    "Oracle Certified Professional Java SE",
    "Spring Professional Certification",
    "AWS Certified Developer Associate",
    "Docker Certified Associate",
    "Apache Kafka Developer"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "Java"
  ],
  "frameworks": [
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA"
  ],
  "tools": [
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Docker",
    "Kafka",
    "Kubernetes",
    "Tomcat"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "Oracle DB",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS",
    "Kubernetes"
  ],
  "key_achievements": [
    "Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions",
    "Designed and optimized PostgreSQL database schemas reducing query execution time by 50%",
    "Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito"
  ],
  "summary": "Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments."
}
```
2025-06-13 11:41:45 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Deepika Reddy - Java Developer.pdf
2025-06-13 11:41:45 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Processed candidate: Deepika Reddy - Java Developer.pdf with ID: 4dce97b7-339d-420a-96b8-b8d031339ea1
2025-06-13 11:41:45 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Deepika Reddy - Java Developer.pdf (ID: 4dce97b7-339d-420a-96b8-b8d031339ea1) in 18798ms
2025-06-13 11:41:45 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:41:45 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Deepika Reddy - Java Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, s (truncated)...]
2025-06-13 11:41:45 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:41:46 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:41:46 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:41:46 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Processing resume upload: Karan Singh - DevOps Engineer.pdf
2025-06-13 11:41:49 [http-nio-8081-exec-4] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/102bf574-2894-4131-8356-85e7113b4616-Karan Singh - DevOps Engineer.pdf
2025-06-13 11:42:01 [http-nio-8081-exec-4] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/102bf574-2894-4131-8356-85e7113b4616-Karan Singh - DevOps Engineer.pdf
2025-06-13 11:42:01 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
karan.singh@email.com
+91 97531 86420
Karan Singh
DevOps Engineer & Cloud Architect
linkedin.com/in/karansingh
STATUS: ACTIVE UPTIME: 5+ YEARS I DEPLOYMENTS: 1000+
in github.com/karansingh
o
Gurgaon, Haryana, India
$ cat professional_summary.txt
TECHNICAL ARSENAL
CLOUD PLATFORMS
Experienced DevOps Engineer with 5+ years of expertise in automating
AWS EC2
AWS EKS
AWS RDS
AWS
deployment pipelines, managing cloud infrastructure. and orchestrating
AWS CloudWatch
AWS CodePipeline
AWS CLI
containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD
automation with strong background in Infrastructure as Code and monitoring
solutions Proven track record of reducing deployment time by 80% and
CONTAINERIZATION
improving system reliability to 99.9% uptime through robust DevOps practices.
Docker
Kubernetes
Docker Swarm
Helm
Container Registry
$ grep -r "experience" /career/history
CI/CD TOOLS
[PROCESS]
Jenkins
GitLab
GitHub Actions
Git
Maven
Senior DevOps Engineer
SonarQub
Paytm (One97 Communications)
Jan 2022 Present
AWS
Kubernetes
Docker
Jenkins
Terraform
Ansible
Prometheus
Grafana
ELK Stack
INFRASTRUCTURE AS CODE
Architected AWS cloud infrastructure using Terraform managing 100+ EC2 instances
Terraform
Ansible
CloudFormation
YAML
JSON
and RDS clusters
Implemented Kubernetes orchestration for microservices serving 50M+ daily
transactions
MONITORING LOGGING
Built Jenkins CI/CD pipelines reducing deployment time from 4 hours to 30 minutes
Prometheus
Grafana
ELK Stack
Alertmanager
Elasticsearch
Kibana
Configured monitoring stack using Prometheus and Grafana achieving 99.9% uptime SLA
Automated infrastructure provisioning using Ansible playbooks saving 20 hours/week
Implemented ELK Stack for centralized logging and real-time log analysis
SYSTEM ADMINISTRATION
Managed Docker container registry and optimized image sizes by 60%
Linux
Shell Scripting
Nainx
Apache
Tomcat
Redis
[PROCESS]
# PERFORMANCE METRICS
DevOps Engineer
Nagarro Software
Mar 2021 Dec 2021
99.9%
80%
AWS EC2
Docker Swarm
GitLab CI
CloudFormation
Nginx
Redis
SYSTEMUPTIME
DEPLOY TIME REDUCTION
Deployed applications on AWS EC2 using Docker Swarm for container orchestration
1000+
100+
Created GitLab CT pipelines for automated testing and deployment processes
DEPLOYMENTS
EC2 INSTANCES
Implemented infrastructure using AWS CloudFormation templates
Configured Nginx load balancers for high availability and traffic distribution
# SYSTEM CONFIGURATION
Set up Redis clusters for caching and session management
Optimized application performance resulting in 40% faster response times
Bachelor of Technology (Information
Technology)
Guru Gobind Singh Indraprastha University
2016 2020
[PROCESS]
Junior DevOps Engineer
# SECURITY CERTIFICATES
Mindtree Limited
Jun 2020 Feb 2021
Linux
Shell Scripting
Git
Mayer
Tomcat
AWS Certified DevOps Engineer Professional
Managed Linux servers and wrote Shell scripts for automation tasks
Certified Kubernetes Administrator (CKA)
Implemented Git workflows and branching strategies for development teams
Docker Certified Associate
Configured Mayen build processes for Java applications
Terraform Associate Certification
Deployed applications on Apache Tomcat servers
Learned infrastructure management and deployment best practices
Jenkins Certified Engineer
AWS Solutions Architect Associate
Prometheus Certified Associate
$ ls -la /projects/featured
LANGUAGE SUPPORT
[PROJECT]
[PROJECT]
Microservices Platform
CI/CD Automation Pipeline
Hindi: Native
Kubernetes
Docker
AWS EKS
Terraform
Jenkins
GitLab
Docker
English: Fluent
Helm
AWS CodePipeline
SonarQube
Punjabi: Native
Urdu: Conversational
Built scalable microservices platform on
Implemented end-to-end CI/CD pipeline
AWS EKS using Kubernetes and Docker.
using Jenkins and GitLab CI with Docker
Automated infrastructure deployment with
containerization. Integrated AWS
ADDITIONAL MODULES
Terraform and managed application
CodePipeline for cloud-native deployments
deployments using Helm charts for
and SonarQube for code quality analysis.
Microservices Architecture
consistent and reliable releases.
Site Reliability Engineering
cloud Security Best Practices
Disaster Recovery Planning
Cost Optimization Strategies
Agile DevOps Methodologies
[PROJECT]
[PROJECT]
Infrastructure Monitoring
Infrastructure as Code
SYSTEM STATUS
Prometheus
Grafana
ELK Stack
Terraform
Ansible
CloudFormation
AWS CloudWatch
Alertmanager
Shell Scripting
AWS CLI
OPERATIONAL: All systems running
MONITORING: Active 24/7
BACKUP: Automated daily
Set up comprehensive monitoring solution
Automated infrastructure provisioning
SECURITY Enhanced protection
PERFORMANCE: Optimized
using Prometheus and Grafana with ELK
using Terraform and Ansible with AWS
Stack for log aggregation. Configured AWS
CloudFormation. Created Shell scripts and
CloudWatch and Alertmanager for proactive
AWS CLI automation for infrastructure
incident management
management and deployment processes.

2025-06-13 11:42:09 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"AWS EC2\",\n    \"AWS EKS\",\n    \"AWS RDS\",\n    \"AWS CloudWatch\",\n    \"AWS CodePipeline\",\n    \"AWS CLI\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Docker Swarm\",\n    \"Helm\",\n    \"Container Registry\",\n    \"Jenkins\",\n    \"GitLab\",\n    \"GitHub Actions\",\n    \"Git\",\n    \"Maven\",\n    \"SonarQub\",\n    \"Terraform\",\n    \"Ansible\",\n    \"Prometheus\",\n    \"Grafana\",\n    \"ELK Stack\",\n    \"Alertmanager\",\n    \"Elasticsearch\",\n    \"Kibana\",\n    \"Linux\",\n    \"Shell Scripting\",\n    \"Nginx\",\n    \"Apache\",\n    \"Tomcat\",\n    \"Redis\",\n    \"CloudFormation\",\n    \"YAML\",\n    \"JSON\"\n  ],\n  \"soft_skills\": [\n    \"Problem-solving\",\n    \"Automation\",\n    \"Optimization\",\n    \"Team collaboration\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Information Technology)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified DevOps Engineer Professional\",\n    \"Certified Kubernetes Administrator (CKA)\",\n    \"Docker Certified Associate\",\n    \"Terraform Associate Certification\",\n    \"Jenkins Certified Engineer\",\n    \"AWS Solutions Architect Associate\",\n    \"Prometheus Certified Associate\"\n  ],\n  \"industries\": [\n    \"IT\",\n    \"Finance\",\n    \"Consulting\"\n  ],\n  \"programming_languages\": [\n    \"Shell Scripting\"\n  ],\n  \"frameworks\": [\n    \"Kubernetes\",\n    \"Docker Swarm\",\n    \"Helm\"\n  ],\n  \"tools\": [\n    \"Jenkins\",\n    \"GitLab\",\n    \"GitHub Actions\",\n    \"Git\",\n    \"Maven\",\n    \"SonarQub\",\n    \"Terraform\",\n    \"Ansible\",\n    \"Prometheus\",\n    \"Grafana\",\n    \"ELK Stack\",\n    \"Alertmanager\",\n    \"Elasticsearch\",\n    \"Kibana\",\n    \"Nginx\",\n    \"Apache\",\n    \"Tomcat\",\n    \"Redis\",\n    \"CloudFormation\",\n    \"AWS CLI\"\n  ],\n  \"databases\": [\n    \"AWS RDS\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Reduced deployment time by 80%\",\n    \"Improved system reliability to 99.9% uptime\",\n    \"Managed AWS cloud infrastructure with 100+ EC2 instances and RDS clusters\"\n  ],\n  \"summary\": \"Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment time and improving system reliability.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1431,"outputTokens":770,"totalTokens":2201}}
2025-06-13 11:42:09 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "AWS EC2",
    "AWS EKS",
    "AWS RDS",
    "AWS CloudWatch",
    "AWS CodePipeline",
    "AWS CLI",
    "Docker",
    "Kubernetes",
    "Docker Swarm",
    "Helm",
    "Container Registry",
    "Jenkins",
    "GitLab",
    "GitHub Actions",
    "Git",
    "Maven",
    "SonarQub",
    "Terraform",
    "Ansible",
    "Prometheus",
    "Grafana",
    "ELK Stack",
    "Alertmanager",
    "Elasticsearch",
    "Kibana",
    "Linux",
    "Shell Scripting",
    "Nginx",
    "Apache",
    "Tomcat",
    "Redis",
    "CloudFormation",
    "YAML",
    "JSON"
  ],
  "soft_skills": [
    "Problem-solving",
    "Automation",
    "Optimization",
    "Team collaboration"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Information Technology)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified DevOps Engineer Professional",
    "Certified Kubernetes Administrator (CKA)",
    "Docker Certified Associate",
    "Terraform Associate Certification",
    "Jenkins Certified Engineer",
    "AWS Solutions Architect Associate",
    "Prometheus Certified Associate"
  ],
  "industries": [
    "IT",
    "Finance",
    "Consulting"
  ],
  "programming_languages": [
    "Shell Scripting"
  ],
  "frameworks": [
    "Kubernetes",
    "Docker Swarm",
    "Helm"
  ],
  "tools": [
    "Jenkins",
    "GitLab",
    "GitHub Actions",
    "Git",
    "Maven",
    "SonarQub",
    "Terraform",
    "Ansible",
    "Prometheus",
    "Grafana",
    "ELK Stack",
    "Alertmanager",
    "Elasticsearch",
    "Kibana",
    "Nginx",
    "Apache",
    "Tomcat",
    "Redis",
    "CloudFormation",
    "AWS CLI"
  ],
  "databases": [
    "AWS RDS",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Reduced deployment time by 80%",
    "Improved system reliability to 99.9% uptime",
    "Managed AWS cloud infrastructure with 100+ EC2 instances and RDS clusters"
  ],
  "summary": "Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment time and improving system reliability."
}
```
2025-06-13 11:42:09 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Karan Singh - DevOps Engineer.pdf
2025-06-13 11:42:09 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Processed candidate: Karan Singh - DevOps Engineer.pdf with ID: 8d68d3e6-8c43-4908-90a8-d98fc05f068d
2025-06-13 11:42:09 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Karan Singh - DevOps Engineer.pdf (ID: 8d68d3e6-8c43-4908-90a8-d98fc05f068d) in 22875ms
2025-06-13 11:42:09 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:42:09 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Karan Singh - DevOps Engineer.pdf, success=true, extractedData={experienceLevel=SENIOR, sk (truncated)...]
2025-06-13 11:42:09 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:42:10 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:42:10 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:42:10 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Processing resume upload: Kavya Nair - Full Stack Developer.pdf
2025-06-13 11:42:15 [http-nio-8081-exec-5] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/ee1d38c7-472a-4a0f-9f5e-f32abb2be3d4-Kavya Nair - Full Stack Developer.pdf
2025-06-13 11:42:23 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/ee1d38c7-472a-4a0f-9f5e-f32abb2be3d4-Kavya Nair - Full Stack Developer.pdf
2025-06-13 11:42:23 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
+91 98765 12345
Full Stack Developer
linkedin com/in/kavyanair
"Building scalable web solutions with modern technologies'
github.com/kavyanair
9
Kochi. Kerala India
PROFESSIONAL SUMMARY
TECHNICAL
ARSENAL
Passionate Full Stack Developer with 5+ years of experience
FRONTEND
building robust web applications using modern JavaScript
React
Vue.js
Angular
frameworks and cloud technologies. Expertise in React, Node.js,
TypeScript
JavaScript
Python, and AWS with a strong focus on creating scalable,
HTML5
CSS3
maintainable solutions. Proven track record of leading development
teams and delivering high-quality software that serves 100K+ users
daily.
BACKEND
Node.js
Express.js
Python
Django
Java
Spring Boot
PROFESSIONAL EXPERIENCE
DATABASES
PostgreSQL
MySQL
Senior Full Stack Developer
MongoDB
Redis
Oracle DE
Freshworks Inc.
Mar 2022 Present
React
TypeScript
Node.js
Express.js
PostgreSQL
Redis
AWS
Docker
CLOUD DEVOPS
Kubernetes
AWS
Docker
Kubernetes
Architected and developed microservices using Node js and Express.js
Jenkins
GitHub Actions
serving 100K+ daily active users
Built responsive React applications with TypeScript ensuring type safety and
maintainable code
APIS TOOLS
Optimized PostgreSQL database queries and implemented Redis caching
REST APIs
GraphQL
reducing API response time by 60%
Socket.ic
JWT
WebRTC
Deployed applications on AWS using Docker containers and Kubernetes
Chart.js
JUnit
Swagger
orchestration
Led team of developers and mentored junior developers in best practices
Implemented CI/CD pipelines using Jenkins and GitHub Actions reducing
EDUCATION
deployment time by 50%
Master of Computer
Applications (MCA)
Cochin University of Science &
Technology
Full Stack Developer
2017 2019
Zoho Corporation
Jan 2020 Feb 2022
Vue.js
Python
Django
MySQL
MongoDB
REST APIs
GraphQL
Bachelor of Science
(Computer Science)
Developed enterprise CRM features using Vue js frontend and Python Django
University of Kerala
backend
2014 2017
Created RESTful APIs and GraphQL endpoints handling 50K+ requests per
hour
Designed and implemented database schemas in MySQL and MongoDB for
CERTIFICATIONS
optimal performance
Integrated third-party services and APIs for email marketing and analytics
AWS Certified Solutions Architect
functionality
Participated in code reviews and maintained high code quality standards
MongoDB Certified Developer
React Professional Certificate
Node.js Application Developer
Software Developer
Docker Certified Associate
UST Global
Jun 2019 Dec 2019
Kubernetes Administrator
Angular
Java
Spring Boot
Oracle DB
JUnit
Built banking applications using Angular frontend and Java Spring Boot
backend
LANGUAGES
Implemented secure user authentication and authorization using Spring
Security
Malayalam: Native
Developed unit tests using JUnit achieving 85% code coverage
English: Fluent
Hindi: Conversational
Worked with Oracle databases and optimized complex SQL queries
Tamil: Basic
FEATURED PROJECTS
Social Media Analytics
E-Learning Management
Platform
System
React Node.js MongoDB
Vue.js Python Django
Redis Chart.js AWS
PostgreSQL WebRTC
Developed comprehensive social
Built an online learning platform with
media analytics dashboard using
Vue. js frontend and Django backend
React and Chart. js for data
Integrated video conferencing using
visualization. Built scalable backend
WebRTC, implemented course
with Node.js and MongoDB,
management features, and used
implemented Redis for caching, and
PostgreSQL for data storage with
deployed on AWS with auto-scaling
automated backups.
capabilities.
Real-time Chat Application
Inventory Management API
TypeScript Socket.io Express.js
Java
Spring Boot MySQL
JWT
Docker
JUnit
Swagger
Created real-time messaging
Developed RESTful API for inventory
application using Socket io for
management using Java Spring Boot
WebSocket communication and
and MySQL Created comprehensive
TypeScript for type safety.
API documentation with Swagger,
Implemented JWT authentication,
implemented unit testing with JUnit,
built with Express js backend and
and added data validation and error
containerized using Docker for easy
handling.
deployment.

2025-06-13 11:42:32 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"Python\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Java\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"REST APIs\",\n    \"GraphQL\",\n    \"Socket.io\",\n    \"JWT\",\n    \"WebRTC\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"Swagger\",\n    \"Oracle DB\",\n    \"Spring Security\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team collaboration\",\n    \"Code quality maintenance\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Computer Applications (MCA)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect\",\n    \"MongoDB Certified Developer\",\n    \"React Professional Certificate\",\n    \"Node.js Application Developer\",\n    \"Docker Certified Associate\",\n    \"Kubernetes Administrator\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"CRM\",\n    \"Banking\",\n    \"Analytics\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Spring Boot\"\n  ],\n  \"tools\": [\n    \"Postman\",\n    \"Swagger\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"Jenkins\",\n    \"GitHub Actions\",\n    \"Docker\",\n    \"Kubernetes\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"MongoDB\",\n    \"Redis\",\n    \"Oracle DB\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Architected and developed microservices serving 100K+ daily active users\",\n    \"Optimized PostgreSQL database queries reducing API response time by 60%\",\n    \"Implemented CI/CD pipelines reducing deployment time by 50%\"\n  ],\n  \"summary\": \"Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1215,"outputTokens":679,"totalTokens":1894}}
2025-06-13 11:42:32 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Vue.js",
    "Angular",
    "TypeScript",
    "JavaScript",
    "Python",
    "Node.js",
    "Express.js",
    "Django",
    "Java",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "REST APIs",
    "GraphQL",
    "Socket.io",
    "JWT",
    "WebRTC",
    "Chart.js",
    "JUnit",
    "Swagger",
    "Oracle DB",
    "Spring Security"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team collaboration",
    "Code quality maintenance"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Computer Applications (MCA)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified Solutions Architect",
    "MongoDB Certified Developer",
    "React Professional Certificate",
    "Node.js Application Developer",
    "Docker Certified Associate",
    "Kubernetes Administrator"
  ],
  "industries": [
    "Software Development",
    "CRM",
    "Banking",
    "Analytics"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "Java"
  ],
  "frameworks": [
    "React",
    "Vue.js",
    "Angular",
    "Node.js",
    "Express.js",
    "Django",
    "Spring Boot"
  ],
  "tools": [
    "Postman",
    "Swagger",
    "Chart.js",
    "JUnit",
    "Jenkins",
    "GitHub Actions",
    "Docker",
    "Kubernetes"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "MongoDB",
    "Redis",
    "Oracle DB"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Architected and developed microservices serving 100K+ daily active users",
    "Optimized PostgreSQL database queries reducing API response time by 60%",
    "Implemented CI/CD pipelines reducing deployment time by 50%"
  ],
  "summary": "Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily."
}
```
2025-06-13 11:42:32 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Kavya Nair - Full Stack Developer.pdf
2025-06-13 11:42:32 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Processed candidate: Kavya Nair - Full Stack Developer.pdf with ID: 8781427a-0180-42b1-8521-8858094fe1ea
2025-06-13 11:42:32 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Kavya Nair - Full Stack Developer.pdf (ID: 8781427a-0180-42b1-8521-8858094fe1ea) in 21975ms
2025-06-13 11:42:32 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:42:32 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Kavya Nair - Full Stack Developer.pdf, success=true, extractedData={experienceLevel=SENIOR (truncated)...]
2025-06-13 11:42:32 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:42:33 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:42:33 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:42:33 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Processing resume upload: Mei Chen - Marketing Analyst.pdf
2025-06-13 11:42:43 [http-nio-8081-exec-7] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/eab160a5-23c2-4fc0-a012-528561de1508-Mei Chen - Marketing Analyst.pdf
2025-06-13 11:42:53 [http-nio-8081-exec-7] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/eab160a5-23c2-4fc0-a012-528561de1508-Mei Chen - Marketing Analyst.pdf
2025-06-13 11:42:53 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Mei Chen
Marketing Analyst & Growth Strategist
mei.chen@email.com
+65 9876 5432
linkedin .com/in/meichen
Singapore
PROFESSIONAL SUMMARY
Core Skills
Data Analytics
95%
Data-driven Marketing Analyst with 6+ years of experience in
SQL & Python
90%
digital marketing analytics and customer insights across Asia-
Tableau & Power BI
88%
Pacific markets. Expert in transforming complex data into
actionable marketing strategies that drove 45% increase in ROI
Google Analytics
92%
and 35% growth in customer acquisition. Specialized in cross-
cultural marketing campaigns and multilingual market analysis.
A/B Testing
85%
Languages
PROFESSIONAL EXPERIENCE
Mandarin
English
Native
Fluent
Senior Marketing Analyst
Hindi
Shopee Singapore
Jan 2022 Present
Malay
Conversational
Basic
Analyzed user behavior data from 8 Southeast Asian markets with
100M+ active users
Developed attribution models improving campaign ROI
Education
measurement accuracy by 50%
Led A/B testing initiatives across mobile and web platforms with
28% conversion improvement
Master of Science in
Marketing Analytics
Created automated dashboards reducing manual reporting time by
National University of
75%
Singapore
2016 2018
Managed marketing analytics for flash sales generating S$50M+
revenue
Bachelor of Business
Administration
Nanyang Technological
University
Marketing Data Analyst
2012 2016
Grab Holdings
Mar 2020 Dec 2021
Performed cohort analysis for ride-hailing and food delivery
services across 6 countries
Certifications
Built predictive models for customer lifetime value with 89%
accuracy
Google Analytics 4 Certified
Optimized marketing spend allocation reducing CAC by 30%
across all verticals
Facebook Blueprint Certified
Conducted market research for new service launches in emerging
markets
Tableau Desktop Specialist
AWS Cloud Practitioner
Junior Marketing Analyst
Google Ads Certified
ByteDance (TikTok)
Jun 2018 Feb 2020
Analyzed viral content patterns and user engagement metrics for
HubSpot Marketing Analytics
APAC region
Created weekly performance reports for marketing campaigns
across 12 markets
Supported influencer marketing ROI analysis and campaign
optimization
Assisted in competitive analysis and market positioning strategies

2025-06-13 11:42:58 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Data Analytics\",\n    \"SQL\",\n    \"Python\",\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\",\n    \"A/B Testing\",\n    \"Predictive Modeling\",\n    \"Marketing Spend Allocation\",\n    \"Market Research\"\n  ],\n  \"soft_skills\": [\n    \"Cross-cultural Marketing\",\n    \"Multilingual Market Analysis\",\n    \"Campaign Optimization\",\n    \"Market Positioning Strategies\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Science in Marketing Analytics\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"Google Analytics 4 Certified\",\n    \"Facebook Blueprint Certified\",\n    \"Tableau Desktop Specialist\",\n    \"AWS Cloud Practitioner\",\n    \"Google Ads Certified\",\n    \"HubSpot Marketing Analytics\"\n  ],\n  \"industries\": [\n    \"Digital Marketing\",\n    \"E-commerce\",\n    \"Ride-hailing\",\n    \"Food Delivery\",\n    \"Social Media\"\n  ],\n  \"programming_languages\": [\n    \"SQL\",\n    \"Python\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\"\n  ],\n  \"databases\": [\n    \"SQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Drove 45% increase in ROI and 35% growth in customer acquisition\",\n    \"Improved campaign ROI measurement accuracy by 50%\",\n    \"Achieved 28% conversion improvement through A/B testing\"\n  ],\n  \"summary\": \"Data-driven Marketing Analyst with 6+ years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":751,"outputTokens":482,"totalTokens":1233}}
2025-06-13 11:42:58 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Data Analytics",
    "SQL",
    "Python",
    "Tableau",
    "Power BI",
    "Google Analytics",
    "A/B Testing",
    "Predictive Modeling",
    "Marketing Spend Allocation",
    "Market Research"
  ],
  "soft_skills": [
    "Cross-cultural Marketing",
    "Multilingual Market Analysis",
    "Campaign Optimization",
    "Market Positioning Strategies"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Science in Marketing Analytics",
  "years_of_experience": 6,
  "certifications": [
    "Google Analytics 4 Certified",
    "Facebook Blueprint Certified",
    "Tableau Desktop Specialist",
    "AWS Cloud Practitioner",
    "Google Ads Certified",
    "HubSpot Marketing Analytics"
  ],
  "industries": [
    "Digital Marketing",
    "E-commerce",
    "Ride-hailing",
    "Food Delivery",
    "Social Media"
  ],
  "programming_languages": [
    "SQL",
    "Python"
  ],
  "frameworks": [],
  "tools": [
    "Tableau",
    "Power BI",
    "Google Analytics"
  ],
  "databases": [
    "SQL"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Drove 45% increase in ROI and 35% growth in customer acquisition",
    "Improved campaign ROI measurement accuracy by 50%",
    "Achieved 28% conversion improvement through A/B testing"
  ],
  "summary": "Data-driven Marketing Analyst with 6+ years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis."
}
```
2025-06-13 11:42:58 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Mei Chen - Marketing Analyst.pdf
2025-06-13 11:42:58 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Processed candidate: Mei Chen - Marketing Analyst.pdf with ID: f0f0bef4-cccf-4c02-881b-65608f8b9645
2025-06-13 11:42:58 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Mei Chen - Marketing Analyst.pdf (ID: f0f0bef4-cccf-4c02-881b-65608f8b9645) in 24883ms
2025-06-13 11:42:58 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:42:58 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Mei Chen - Marketing Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, ski (truncated)...]
2025-06-13 11:42:58 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:42:59 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:42:59 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:42:59 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Processing resume upload: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 11:43:05 [http-nio-8081-exec-10] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/cef581f4-6fd5-4a47-8b6e-13b07363618c-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 11:43:11 [http-nio-8081-exec-10] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/cef581f4-6fd5-4a47-8b6e-13b07363618c-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 11:43:11 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
PROFESSIONAL SUMMARY
Results-oriented Sales & Marketing professional with 7+
years of experience in the Indian market, specializing in
digital marketing strategies and B2B sales. Proven track
Priya Sharma
record of increasing revenue by 40% and expanding
market presence across Tier 1 and Tier 2 cities. Expert in
Sales & Marketing Professional
managing multi-channel campaigns and building long-term
client relationships in competitive markets.
Contact
priya.sharma@email.com
PROFESSIONAL EXPERIENCE
+91 98765 43210
Senior Marketing Manager
linkedin.com/in/priyasharma
Tata Digital Solutions
Jan 2021 Present
Mumbai, Maharashtra, India
Led digital marketing initiatives for pan-India market expansion,
Core Skills
reaching 15+ states
Managed ₹50 lakh annual marketing budget with 35% ROI
Lead Generation
improvement
Developed localized campaigns for regional markets increasing
Digital Marketing
engagement by 60%
Built strategic partnerships with 25+ B2B clients across various
CRM Management
industries
Campaign Strategy
Implemented CRM system reducing sales cycle time by 30%
Analytics
Marketing Executive
Languages
Reliance Industries Ltd
Mar 2019 Dec 2020
Executed social media strategies achieving 2M+ followers across
Hindi (Native)
platforms
English (Fluent)
Coordinated trade shows and exhibitions in Mumbai, Delhi, and
Bangalore
Marathi (Native)
Managed vendor relationships and negotiated contracts saving
₹15 lakh annually
Certifications
Created content marketing strategy increasing website traffic by
150%
Google Ads Certified Professional
HubSpot Inbound Marketing
Salesforce Administrator
Sales Associate
Digital Marketing Institute
Wipro Technologies
Jun 2017 Feb 2019
Achieved 125% of sales targets consistently across Western
India region
Built client database of 200+ prospects through cold calling and
networking
Participated in 10+ industry conferences and generated 50+
qualified leads
EDUCATION
Master of Business Administration (Marketing)
Indian Institute of Management, Ahmedabad
2015 2017
Bachelor of Commerce
University of Mumbai
2012 2015

2025-06-13 11:43:17 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\"Lead Generation\", \"Digital Marketing\", \"CRM Management\", \"Campaign Strategy\", \"Analytics\"],\n  \"soft_skills\": [\"Client Relationship Management\", \"Strategic Partnerships\", \"Negotiation\", \"Content Creation\"],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Marketing)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\"Google Ads Certified Professional\", \"HubSpot Inbound Marketing\", \"Salesforce Administrator\"],\n  \"industries\": [\"Digital Solutions\", \"Reliance Industries\", \"Information Technology\"],\n  \"programming_languages\": [],\n  \"frameworks\": [],\n  \"tools\": [\"CRM system\"],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.\",\n    \"Managed ₹50 lakh annual marketing budget with 35% ROI improvement.\",\n    \"Executed social media strategies achieving 2M+ followers across platforms.\"\n  ],\n  \"summary\": \"Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market. Specializes in digital marketing strategies and B2B sales. Proven track record of increasing revenue and expanding market presence.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":722,"outputTokens":303,"totalTokens":1025}}
2025-06-13 11:43:17 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": ["Lead Generation", "Digital Marketing", "CRM Management", "Campaign Strategy", "Analytics"],
  "soft_skills": ["Client Relationship Management", "Strategic Partnerships", "Negotiation", "Content Creation"],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Marketing)",
  "years_of_experience": 7,
  "certifications": ["Google Ads Certified Professional", "HubSpot Inbound Marketing", "Salesforce Administrator"],
  "industries": ["Digital Solutions", "Reliance Industries", "Information Technology"],
  "programming_languages": [],
  "frameworks": [],
  "tools": ["CRM system"],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.",
    "Managed ₹50 lakh annual marketing budget with 35% ROI improvement.",
    "Executed social media strategies achieving 2M+ followers across platforms."
  ],
  "summary": "Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market. Specializes in digital marketing strategies and B2B sales. Proven track record of increasing revenue and expanding market presence."
}
```
2025-06-13 11:43:17 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 11:43:17 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Processed candidate: Priya Sharma - Sales & Marketing Professional.pdf with ID: ef894488-47ae-40cb-a476-646e9514ad7d
2025-06-13 11:43:17 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Priya Sharma - Sales & Marketing Professional.pdf (ID: ef894488-47ae-40cb-a476-646e9514ad7d) in 17961ms
2025-06-13 11:43:17 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:43:17 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Priya Sharma - Sales & Marketing Professional.pdf, success=true, extractedData={experience (truncated)...]
2025-06-13 11:43:17 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:43:18 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:43:18 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:43:18 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Processing resume upload: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 11:43:23 [http-nio-8081-exec-6] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/e8b55a7c-abf1-4c3c-87d8-aee691bd2a38-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 11:43:30 [http-nio-8081-exec-6] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/e8b55a7c-abf1-4c3c-87d8-aee691bd2a38-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 11:43:30 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Rajesh Kumar
Demand Planning Specialist
rajesh kumar@email.com
+91 98765 54321
linkedin.com/in/rajeshkumar
T
Pune, Maharashtra, India
Professional Summary
Strategic Demand Planning professional with 8+ years of experience in supply chain
optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting,
inventory management, and S&OP processes with proven track record of improving forecast
accuracy by 45% and reducing inventory costs by ₹2.5 crores annually. Skilled in implementing
demand planning solutions for multi-location operations across India.
Professional Experience
O
Senior Demand Planning Manager
Apr 202 Present
Hindustan Unilever Limited
Lead demand planning for 800+ SKUs across North and West India regions
Improved forecast accuracy from 72% to 91% using advanced analytics and ML models
Reduced excess inventory by ₹1.8 crores through enhanced demand sensing
Led S&OP implementation across 8 manufacturing locations
Managed cross-functional teams of 15+ members across supply chain functions
Implemented SAP IBP resulting in 40% reduction in planning cycle time
Demand Planner
Jun 2019 Mar 2021
ITC Limited
Managed demand planning for cigarettes and FMCG portfolio worth ₹500 crores
Developed statistical models for seasonal demand patterns using R and Python
Collaborated with marketing teams for promotional planning and new product launches
Reduced stockout incidents by 35% through improved demand sensing
Created automated dashboards using Power BI for executive reporting
Supply Chain Analyst
Jul 2017 May 2019
Mahindra & Mahindra
Supported inventory optimization for automotive spare parts across 200+ dealers
Performed root cause analysis on forecast variances and implemented corrections
Created Excel-based planning tools reducing manual effort by 60%
Assisted in vendor collaboration initiatives improving supplier fill rates
Core Competencies
Planning & Forecasting
Technology & Tools
Statistical Forecasting
Demand Sensing
SAP IBP/APO
Oracle Demantra
Power BI
S&OP
Inventory Optimization
Advanced Excel
Python
R Programming
Collaborative Planning
Industry Knowledge
FMCG
Automotive
Manufacturing
Retail
Multi- location Ops
Education & Certifications
Master of Business Administration (Operations)
Indian Institute of Management, Kozhikode
2015 2017
Bachelor of Engineering (Mechanical)
Pune University
2011 2015
Certifications
APICS SCOR Certified CPIM Certified SAP IBP Certification Six Sigma Green Belt

2025-06-13 11:43:36 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Statistical Forecasting\",\n    \"Demand Sensing\",\n    \"Inventory Optimization\",\n    \"Advanced Excel\",\n    \"Python\",\n    \"R Programming\",\n    \"SAP IBP\",\n    \"Oracle Demantra\",\n    \"Power BI\"\n  ],\n  \"soft_skills\": [\n    \"Collaborative Planning\",\n    \"Team Management\",\n    \"Cross-functional Coordination\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Operations)\",\n  \"years_of_experience\": 8,\n  \"certifications\": [\n    \"APICS SCOR Certified\",\n    \"CPIM Certified\",\n    \"SAP IBP Certification\",\n    \"Six Sigma Green Belt\"\n  ],\n  \"industries\": [\n    \"FMCG\",\n    \"Automotive\",\n    \"Manufacturing\",\n    \"Retail\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R Programming\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"SAP IBP\",\n    \"Oracle Demantra\",\n    \"Power BI\",\n    \"Advanced Excel\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Improved forecast accuracy from 72% to 91% using advanced analytics and ML models\",\n    \"Reduced excess inventory by ₹1.8 crores through enhanced demand sensing\",\n    \"Reduced stockout incidents by 35% through improved demand sensing\"\n  ],\n  \"summary\": \"Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with a proven track record of improving forecast accuracy and reducing inventory costs. Skilled in implementing demand planning solutions for multi-location operations across India.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":775,"outputTokens":456,"totalTokens":1231}}
2025-06-13 11:43:36 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Statistical Forecasting",
    "Demand Sensing",
    "Inventory Optimization",
    "Advanced Excel",
    "Python",
    "R Programming",
    "SAP IBP",
    "Oracle Demantra",
    "Power BI"
  ],
  "soft_skills": [
    "Collaborative Planning",
    "Team Management",
    "Cross-functional Coordination"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Operations)",
  "years_of_experience": 8,
  "certifications": [
    "APICS SCOR Certified",
    "CPIM Certified",
    "SAP IBP Certification",
    "Six Sigma Green Belt"
  ],
  "industries": [
    "FMCG",
    "Automotive",
    "Manufacturing",
    "Retail"
  ],
  "programming_languages": [
    "Python",
    "R Programming"
  ],
  "frameworks": [],
  "tools": [
    "SAP IBP",
    "Oracle Demantra",
    "Power BI",
    "Advanced Excel"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Improved forecast accuracy from 72% to 91% using advanced analytics and ML models",
    "Reduced excess inventory by ₹1.8 crores through enhanced demand sensing",
    "Reduced stockout incidents by 35% through improved demand sensing"
  ],
  "summary": "Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with a proven track record of improving forecast accuracy and reducing inventory costs. Skilled in implementing demand planning solutions for multi-location operations across India."
}
```
2025-06-13 11:43:36 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 11:43:36 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Processed candidate: Rajesh Kumar - Demand Planning Specialist.pdf with ID: 6527109b-79f8-4cc3-968f-3defc97ce5aa
2025-06-13 11:43:36 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rajesh Kumar - Demand Planning Specialist.pdf (ID: 6527109b-79f8-4cc3-968f-3defc97ce5aa) in 17977ms
2025-06-13 11:43:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:43:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rajesh Kumar - Demand Planning Specialist.pdf, success=true, extractedData={experienceLeve (truncated)...]
2025-06-13 11:43:36 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:43:37 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 11:43:37 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 11:43:37 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Processing resume upload: Rohit Gupta - Angular Developer.pdf
2025-06-13 11:43:42 [http-nio-8081-exec-9] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/92e07eba-4388-446b-a379-363f47cb9503-Rohit Gupta - Angular Developer.pdf
2025-06-13 11:43:47 [http-nio-8081-exec-9] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/92e07eba-4388-446b-a379-363f47cb9503-Rohit Gupta - Angular Developer.pdf
2025-06-13 11:43:47 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
hit Gupta
per & Frontend Specialist
+91 99876 54321
A linkedin.com/in/rohitgupta
github.com/rohitgupta
Delhi. India
I
PROFESSIONAL SUMMARY
TECHNICAL
EXPERTISE
Experienced Angular Developer with 4+ years of
ANGULAR FRAMEWORK
expertise in building dynamic, responsive web
applications using Angular framework and
Angular
Angular 1
TypeScript. Proficient in creating scalable frontend
Angular
Angular CLI
solutions with RxJS, NgRx state management, and
Angula Router
modern UI libraries. Strong background in integrating
RESTful APIs, implementing unit testing with Jasmine
and Karma, and optimizing application performance.
CORE TECHNOLOGIES
Passionate about clean code, user experience, and
TypeScript
JavaScript
staying updated with latest Angular trends and best
practices.
HTML5 CSS3
STATE MANAGEMENT
T
PROFESSIONAL EXPERIENCE
NgRx RxJ
Observable
Reactive Programming
Senior Angular Developer
HCL Technologies
Feb 2022 Present
UI LIBRARIES
Angular
TypeScript
RxJS
NgRx
ingula Material
Bootstra
Angular Material
Jasmine Karma REST APIs
Chart.j
PrimeNG
. Developed enterprise banking applications using Angular
15+ and TypeScript with 99 9% uptime
.
Implemented state management using NgR> for complex
TESTING APIS
application state handling
Jasmine
Karma
. Built reusable components using Angular Material and
custom UI libraries
REST
Integrated RESTful APIs and handled asynchronous
WebSocke
Socket.ic
operations using Rx1S observables
Achieved 95% code coverage through comprehensive unit
testing with Jasmine and Karma
TOOLS OTHERS
Optimized application performance resulting 40% faster
page load times
VS Code
Mentored junior developers Angular best practices
Webpack
and code review processes
EDUCATION
Angular Developer
Tech Mahindra
Jun 2021 2022
Bachelor of Technology
Angular 12
TypeScript
Bootstrap
Chart.js
(Computer Science)
HTTP Client
Forms
Delhi Technological University
2016-2020
. Built responsive dashboard applications using Angular 12
and Bootstrap framework
.
Created interactive data visualizations using Chart.js and
Angular integration
CERTIFICATIONS
Implemented reactive forms and template-driven forms
for data collection
Angular Certified Developer
Consumed REST APIs using Angular HTTP Client and
handled error scenarios
TypeScript Professional
Collaborated with UX/UI teams to implement pixel perfect
designs
NgRx State Management
Participated agile development cycles with daily
standups and sprint planning
Rx1S Reactive Programming
Frontend Web Development
Frontend Developer
Angular Testing with Jasmine
Cognizant Technology
Aug 2020 May
Solutions
2021
LANGUAGES
Angular
JavaScript
HTML5
CSS3
SCSS
Gi
Hindi: Native
English: Fluent
.
Developed customer facing web applications using
Angular 10 and modern JavaScript
Punjabi: Conversational
Created responsive layouts using HTML5, CSS3, and SCSS
preprocessor
INTERESTS
Implemented routing and navigation using Angular Router
Worked with version control using Git and collaborated in
Frontend Architectur Angular
team environments
Updates Open Source Contributing
Fixed bugs and implemented feature enhancements
. Tech Blogging UI/UX Design
based on client requirements
FEATURED PROJECTS
Banking Dashboard
E-Commerce Admin
System
Panel
Angular
NgRx
Angular 12
Angular Material
TypeScript
Bootstrap
Chart.js
RxJS
REST APIs
Forms
Developed comprehensive
Built admin panel e
banking dashboard using
commerce management
Angular with NgRx for
using Angular 12 and
state management
TypeScript Implemented
Integrated Angular Material
Bootstrap responsive
components consistent
design integrated REST
UI and Chart.j for financial
APIs data operations,
data visualization Used
and created complex forms
RxJS handling complex
for product and inventory
asynchronous operations
management
and real-time updates.
Task Management
Real-time Chat
Application
Interface
Angular
Jasmine
Angula Socket.ig
Karma
HTTP Client
SCSS WebSocket
Local Storage
Reactive Forms
Created task management
Developed real-time chat
app using Angular 10 with
application using Angular 14
local storage data
and Socket.ic WebSocket
persistence. Implemented
communication Styled with
comprehensive unit testing
SCSS custom
with Jasmine and Karma.
animations impleme nted
used HTTP Client for API
reactive forms message
integration and built drag
input. and handled real time
and-drop functionality for
message updates efficiently
task organization

2025-06-13 11:43:53 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Angular\",\n    \"Angular 1\",\n    \"TypeScript\",\n    \"RxJS\",\n    \"NgRx\",\n    \"Angular Router\",\n    \"Angular CLI\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"Chart.js\",\n    \"PrimeNG\",\n    \"Jasmine\",\n    \"Karma\",\n    \"REST APIs\",\n    \"WebSocket\",\n    \"Socket.io\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\",\n    \"Git\",\n    \"VS Code\",\n    \"Webpack\",\n    \"HTTP Client\",\n    \"Forms\",\n    \"Local Storage\",\n    \"Reactive Forms\"\n  ],\n  \"soft_skills\": [\n    \"Mentoring\",\n    \"Collaboration\",\n    \"Agile Development\",\n    \"Team Environments\",\n    \"Client Requirements Handling\"\n  ],\n  \"experience_level\": \"MID\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 4,\n  \"certifications\": [\n    \"Angular Certified Developer\",\n    \"TypeScript Professional\",\n    \"NgRx State Management\",\n    \"RxJS Reactive Programming\",\n    \"Frontend Web Development\",\n    \"Angular Testing with Jasmine\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"TypeScript\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\"\n  ],\n  \"frameworks\": [\n    \"Angular\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"PrimeNG\"\n  ],\n  \"tools\": [\n    \"VS Code\",\n    \"Webpack\",\n    \"Git\",\n    \"Jasmine\",\n    \"Karma\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Developed enterprise banking applications with 99.9% uptime\",\n    \"Achieved 95% code coverage through comprehensive unit testing\",\n    \"Optimized application performance resulting in 40% faster page load times\"\n  ],\n  \"summary\": \"Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular, TypeScript, RxJS, and NgRx state management. Passionate about clean code and user experience.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1267,"outputTokens":598,"totalTokens":1865}}
2025-06-13 11:43:53 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Angular",
    "Angular 1",
    "TypeScript",
    "RxJS",
    "NgRx",
    "Angular Router",
    "Angular CLI",
    "Angular Material",
    "Bootstrap",
    "Chart.js",
    "PrimeNG",
    "Jasmine",
    "Karma",
    "REST APIs",
    "WebSocket",
    "Socket.io",
    "HTML5",
    "CSS3",
    "SCSS",
    "Git",
    "VS Code",
    "Webpack",
    "HTTP Client",
    "Forms",
    "Local Storage",
    "Reactive Forms"
  ],
  "soft_skills": [
    "Mentoring",
    "Collaboration",
    "Agile Development",
    "Team Environments",
    "Client Requirements Handling"
  ],
  "experience_level": "MID",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 4,
  "certifications": [
    "Angular Certified Developer",
    "TypeScript Professional",
    "NgRx State Management",
    "RxJS Reactive Programming",
    "Frontend Web Development",
    "Angular Testing with Jasmine"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "TypeScript",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS"
  ],
  "frameworks": [
    "Angular",
    "Angular Material",
    "Bootstrap",
    "PrimeNG"
  ],
  "tools": [
    "VS Code",
    "Webpack",
    "Git",
    "Jasmine",
    "Karma"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Developed enterprise banking applications with 99.9% uptime",
    "Achieved 95% code coverage through comprehensive unit testing",
    "Optimized application performance resulting in 40% faster page load times"
  ],
  "summary": "Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular, TypeScript, RxJS, and NgRx state management. Passionate about clean code and user experience."
}
```
2025-06-13 11:43:53 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rohit Gupta - Angular Developer.pdf
2025-06-13 11:43:53 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Processed candidate: Rohit Gupta - Angular Developer.pdf with ID: 1da39f9e-9ad2-47d3-9c33-bb4567a05f18
2025-06-13 11:43:53 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rohit Gupta - Angular Developer.pdf (ID: 1da39f9e-9ad2-47d3-9c33-bb4567a05f18) in 16483ms
2025-06-13 11:43:53 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:43:53 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rohit Gupta - Angular Developer.pdf, success=true, extractedData={experienceLevel=MID, ski (truncated)...]
2025-06-13 11:43:53 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:43:54 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 11:43:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 11:43:54 [http-nio-8081-exec-8] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 11:43:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:43:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@8a46597, com.hackathon.hr.model.Candidate@6388d854, com.hackathon. (truncated)...]
2025-06-13 11:43:54 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 11:45:33 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 370ce8b8-c1a2-4afa-b82c-44a77c4d06b2 (Java Developer)
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Java Developer
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 62.77777777777778 for candidate Deepika Reddy - Java Developer.pdf and job Java Developer
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Karan Singh - DevOps Engineer.pdf and job Java Developer
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.888888888888886 for candidate Kavya Nair - Full Stack Developer.pdf and job Java Developer
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Java Developer
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 64.44444444444444 for candidate Rohit Gupta - Angular Developer.pdf and job Java Developer
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Java Developer
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 49.44444444444444 for candidate Arjun Singh - Software Developer.pdf and job Java Developer
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 32.44444444444444 for candidate Aarav Sharma - Junior Developer.pdf and job Java Developer
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Anjali Patel - Data Analyst.pdf and job Java Developer
2025-06-13 11:45:33 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Java Developer
2025-06-13 11:45:33 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 370ce8b8-c1a2-4afa-b82c-44a77c4d06b2 in 11ms
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=370ce8b8-c1a2-4afa-b82c-44a77c4d06b2, success=true, totalCandidates=10, jobTitle=Java Develop (truncated)...]
2025-06-13 11:45:33 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 11:45:54 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 53bab539-3e2d-4007-a7f2-ec10f7ea22e5 (Data Scientist)
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 53.0 for candidate Mei Chen - Marketing Analyst.pdf and job Data Scientist
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Deepika Reddy - Java Developer.pdf and job Data Scientist
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Karan Singh - DevOps Engineer.pdf and job Data Scientist
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Data Scientist
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Data Scientist
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Rohit Gupta - Angular Developer.pdf and job Data Scientist
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 46.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Data Scientist
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 65.0 for candidate Arjun Singh - Software Developer.pdf and job Data Scientist
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 33.0 for candidate Aarav Sharma - Junior Developer.pdf and job Data Scientist
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.0 for candidate Anjali Patel - Data Analyst.pdf and job Data Scientist
2025-06-13 11:45:54 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Data Scientist
2025-06-13 11:45:54 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 53bab539-3e2d-4007-a7f2-ec10f7ea22e5 in 1ms
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=53bab539-3e2d-4007-a7f2-ec10f7ea22e5, success=true, totalCandidates=10, jobTitle=Data Scienti (truncated)...]
2025-06-13 11:45:54 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 11:55:00 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
2025-06-13 11:55:00 [Thread-5] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 11:55:00 [Thread-5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 11:55:00 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 72507 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 11:55:00 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 11:55:00 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 11:55:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 11:55:01 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 11:55:01 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 11:55:01 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 11:55:01 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 586 ms
2025-06-13 11:55:01 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'HRController' defined in file [/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes/com/hackathon/hr/controller/HRController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'candidateService': Invocation of init method failed; nested exception is java.lang.Error: Unresolved compilation problems: 
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("React", "JavaScript", "Node.js", "MongoDB", "Express.js", "HTML5", "CSS3", "Bootstrap", "Git", "JWT", "REST APIs"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Python", "R", "SQL", "Tableau", "Power BI", "Pandas", "NumPy", "Scikit-learn", "TensorFlow", "AWS", "Machine Learning"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("React", "Node.js", "TypeScript", "MongoDB", "PostgreSQL", "Docker", "Kubernetes", "AWS", "Microservices", "Python"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Java", "Spring Boot", "Spring MVC", "Hibernate", "PostgreSQL", "MySQL", "Docker", "Kafka", "Microservices", "REST API"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("AWS", "Docker", "Kubernetes", "Jenkins", "Terraform", "Ansible", "Prometheus", "Grafana", "CI/CD", "Linux"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("React", "Vue.js", "Node.js", "Python", "Django", "PostgreSQL", "MySQL", "MongoDB", "TypeScript", "AWS"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Data Analytics", "SQL", "Python", "Tableau", "Power BI", "Google Analytics", "A/B Testing", "Marketing Analytics"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Digital Marketing", "CRM Management", "Lead Generation", "Google Ads", "HubSpot", "Campaign Strategy", "B2B Sales"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("SAP IBP", "SAP APO", "Demand Planning", "Supply Chain", "Statistical Forecasting", "Excel", "Python", "R", "S&OP"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Angular", "TypeScript", "RxJS", "NgRx", "Jasmine", "Karma", "REST APIs", "Angular Material", "Bootstrap"), String) is undefined

2025-06-13 11:55:01 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 11:55:01 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-06-13 11:55:01 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'HRController' defined in file [/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes/com/hackathon/hr/controller/HRController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'candidateService': Invocation of init method failed; nested exception is java.lang.Error: Unresolved compilation problems: 
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("React", "JavaScript", "Node.js", "MongoDB", "Express.js", "HTML5", "CSS3", "Bootstrap", "Git", "JWT", "REST APIs"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Python", "R", "SQL", "Tableau", "Power BI", "Pandas", "NumPy", "Scikit-learn", "TensorFlow", "AWS", "Machine Learning"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("React", "Node.js", "TypeScript", "MongoDB", "PostgreSQL", "Docker", "Kubernetes", "AWS", "Microservices", "Python"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Java", "Spring Boot", "Spring MVC", "Hibernate", "PostgreSQL", "MySQL", "Docker", "Kafka", "Microservices", "REST API"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("AWS", "Docker", "Kubernetes", "Jenkins", "Terraform", "Ansible", "Prometheus", "Grafana", "CI/CD", "Linux"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("React", "Vue.js", "Node.js", "Python", "Django", "PostgreSQL", "MySQL", "MongoDB", "TypeScript", "AWS"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Data Analytics", "SQL", "Python", "Tableau", "Power BI", "Google Analytics", "A/B Testing", "Marketing Analytics"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Digital Marketing", "CRM Management", "Lead Generation", "Google Ads", "HubSpot", "Campaign Strategy", "B2B Sales"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("SAP IBP", "SAP APO", "Demand Planning", "Supply Chain", "Statistical Forecasting", "Excel", "Python", "R", "S&OP"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Angular", "TypeScript", "RxJS", "NgRx", "Jasmine", "Karma", "REST APIs", "Angular Material", "Bootstrap"), String) is undefined

	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929) ~[spring-context-5.3.31.jar:5.3.31]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591) ~[spring-context-5.3.31.jar:5.3.31]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.18.jar:2.7.18]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732) ~[spring-boot-2.7.18.jar:2.7.18]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409) ~[spring-boot-2.7.18.jar:2.7.18]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.18.jar:2.7.18]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300) ~[spring-boot-2.7.18.jar:2.7.18]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289) ~[spring-boot-2.7.18.jar:2.7.18]
	at com.hackathon.hr.AwsHackathonHrHiringAgentApplication.main(AwsHackathonHrHiringAgentApplication.java:12) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-2.7.18.jar:2.7.18]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'candidateService': Invocation of init method failed; nested exception is java.lang.Error: Unresolved compilation problems: 
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("React", "JavaScript", "Node.js", "MongoDB", "Express.js", "HTML5", "CSS3", "Bootstrap", "Git", "JWT", "REST APIs"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Python", "R", "SQL", "Tableau", "Power BI", "Pandas", "NumPy", "Scikit-learn", "TensorFlow", "AWS", "Machine Learning"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("React", "Node.js", "TypeScript", "MongoDB", "PostgreSQL", "Docker", "Kubernetes", "AWS", "Microservices", "Python"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Java", "Spring Boot", "Spring MVC", "Hibernate", "PostgreSQL", "MySQL", "Docker", "Kafka", "Microservices", "REST API"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("AWS", "Docker", "Kubernetes", "Jenkins", "Terraform", "Ansible", "Prometheus", "Grafana", "CI/CD", "Linux"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("React", "Vue.js", "Node.js", "Python", "Django", "PostgreSQL", "MySQL", "MongoDB", "TypeScript", "AWS"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Data Analytics", "SQL", "Python", "Tableau", "Power BI", "Google Analytics", "A/B Testing", "Marketing Analytics"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Digital Marketing", "CRM Management", "Lead Generation", "Google Ads", "HubSpot", "Campaign Strategy", "B2B Sales"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("SAP IBP", "SAP APO", "Demand Planning", "Supply Chain", "Statistical Forecasting", "Excel", "Python", "R", "S&OP"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Angular", "TypeScript", "RxJS", "NgRx", "Jasmine", "Karma", "REST APIs", "Angular Material", "Bootstrap"), String) is undefined

	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:160) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.3.31.jar:5.3.31]
	... 24 common frames omitted
Caused by: java.lang.Error: Unresolved compilation problems: 
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("React", "JavaScript", "Node.js", "MongoDB", "Express.js", "HTML5", "CSS3", "Bootstrap", "Git", "JWT", "REST APIs"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Python", "R", "SQL", "Tableau", "Power BI", "Pandas", "NumPy", "Scikit-learn", "TensorFlow", "AWS", "Machine Learning"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("React", "Node.js", "TypeScript", "MongoDB", "PostgreSQL", "Docker", "Kubernetes", "AWS", "Microservices", "Python"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Java", "Spring Boot", "Spring MVC", "Hibernate", "PostgreSQL", "MySQL", "Docker", "Kafka", "Microservices", "REST API"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("AWS", "Docker", "Kubernetes", "Jenkins", "Terraform", "Ansible", "Prometheus", "Grafana", "CI/CD", "Linux"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("React", "Vue.js", "Node.js", "Python", "Django", "PostgreSQL", "MySQL", "MongoDB", "TypeScript", "AWS"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Data Analytics", "SQL", "Python", "Tableau", "Power BI", "Google Analytics", "A/B Testing", "Marketing Analytics"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Digital Marketing", "CRM Management", "Lead Generation", "Google Ads", "HubSpot", "Campaign Strategy", "B2B Sales"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("SAP IBP", "SAP APO", "Demand Planning", "Supply Chain", "Statistical Forecasting", "Excel", "Python", "R", "S&OP"), String) is undefined
	The constructor JobRequirement(String, String, String, String, String, Arrays.asList("Angular", "TypeScript", "RxJS", "NgRx", "Jasmine", "Karma", "REST APIs", "Angular Material", "Bootstrap"), String) is undefined

	at com.hackathon.hr.service.CandidateService.initializeSampleJobs(CandidateService.java:531) ~[classes/:na]
	at com.hackathon.hr.service.CandidateService.init(CandidateService.java:63) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:333) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:157) ~[spring-beans-5.3.31.jar:5.3.31]
	... 37 common frames omitted
2025-06-13 11:57:43 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 72507 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 11:57:43 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 11:57:43 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 11:57:44 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 11:57:44 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 11:57:44 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 11:57:44 [restartedMain] INFO  o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 11:57:44 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 368 ms
2025-06-13 11:57:44 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'HRController' defined in file [/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes/com/hackathon/hr/controller/HRController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'candidateService': Invocation of init method failed; nested exception is java.lang.Error: Unresolved compilation problems: 
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement

2025-06-13 11:57:44 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 11:57:44 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-06-13 11:57:44 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'HRController' defined in file [/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes/com/hackathon/hr/controller/HRController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'candidateService': Invocation of init method failed; nested exception is java.lang.Error: Unresolved compilation problems: 
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement

	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929) ~[spring-context-5.3.31.jar:5.3.31]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591) ~[spring-context-5.3.31.jar:5.3.31]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.18.jar:2.7.18]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732) ~[spring-boot-2.7.18.jar:2.7.18]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409) ~[spring-boot-2.7.18.jar:2.7.18]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.18.jar:2.7.18]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300) ~[spring-boot-2.7.18.jar:2.7.18]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289) ~[spring-boot-2.7.18.jar:2.7.18]
	at com.hackathon.hr.AwsHackathonHrHiringAgentApplication.main(AwsHackathonHrHiringAgentApplication.java:12) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-2.7.18.jar:2.7.18]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'candidateService': Invocation of init method failed; nested exception is java.lang.Error: Unresolved compilation problems: 
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement

	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:160) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.3.31.jar:5.3.31]
	... 24 common frames omitted
Caused by: java.lang.Error: Unresolved compilation problems: 
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement
	The method setCompany(String) is undefined for the type JobRequirement
	The method setLocation(String) is undefined for the type JobRequirement

	at com.hackathon.hr.service.CandidateService.initializeSampleJobs(CandidateService.java:534) ~[classes/:na]
	at com.hackathon.hr.service.CandidateService.init(CandidateService.java:63) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:333) ~[spring-beans-5.3.31.jar:5.3.31]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:157) ~[spring-beans-5.3.31.jar:5.3.31]
	... 37 common frames omitted
2025-06-13 12:02:28 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 72507 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 12:02:28 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 12:02:28 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 12:02:29 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 12:02:29 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 12:02:29 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 12:02:29 [restartedMain] INFO  o.a.c.c.C.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 12:02:29 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 435 ms
2025-06-13 12:02:29 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 12:02:29 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 12:02:29 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 12:02:29 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 12:02:29 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 19 mappings in 'requestMappingHandlerMapping'
2025-06-13 12:02:29 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 12:02:29 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 12:02:29 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 12:02:29 [RMI TCP Connection(33)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 12:02:29 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 12:02:29 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 1.012 seconds (JVM running for 1370.526)
2025-06-13 12:02:29 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-06-13 12:02:29 [RMI TCP Connection(33)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 12:02:56 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 72720 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 12:02:56 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 12:02:56 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 12:02:57 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 12:02:57 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 12:02:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 12:02:58 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 12:02:58 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 12:02:58 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 12:02:58 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1863 ms
2025-06-13 12:03:00 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 12:03:00 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 12:03:00 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 12:03:00 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 12:03:01 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 19 mappings in 'requestMappingHandlerMapping'
2025-06-13 12:03:01 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 12:03:01 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 12:03:01 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 12:03:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 12:03:01 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.904 seconds (JVM running for 6.302)
2025-06-13 12:03:05 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 12:03:05 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 12:03:05 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 12:03:05 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 12:03:05 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 12:03:05 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1120c3ac
2025-06-13 12:03:05 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@22e3bdbb
2025-06-13 12:03:05 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 12:03:05 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-06-13 12:03:05 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 12:03:05 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 12:03:06 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 12:03:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 12:03:06 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 12:03:06 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@44e9e07b
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@37398105
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7d15f668
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 12:03:06 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 12:03:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:03:06 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 12:03:06 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 12:03:06 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 12:03:06 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 12:03:06 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 12:03:06 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 12:03:06 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:03:06 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:03:06 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 12:03:06 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@5b0a31d0, com.hackathon.hr.model.JobRequirement@49645ef5, com (truncated)...]
2025-06-13 12:03:06 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:03:06 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:03:22 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:03:22 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:03:22 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Processing resume upload: Aarav Sharma - Junior Developer.pdf
2025-06-13 12:03:25 [http-nio-8081-exec-4] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/dc4af10e-4fa5-4979-87ab-014308eaefd1-Aarav Sharma - Junior Developer.pdf
2025-06-13 12:03:32 [http-nio-8081-exec-4] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/dc4af10e-4fa5-4979-87ab-014308eaefd1-Aarav Sharma - Junior Developer.pdf
2025-06-13 12:03:32 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Aarav Sharma
Junior Software Developer
aarav.sharma@email.com
+91 98765 43210
linkedin.com/in/aaravsharma
github .com/aaravsharma
Jaipur, Rajasthan, India
Professional Summary
Technical Skills
Enthusiastic Junior Software Developer with 2+ years
FRONTEND
of experience in web development using modern
HTML5
CSS3
JavaScript
React
technologies. Passionate about creating clean,
efficient code and building user-friendly applications.
Bootstrap
Strong foundation in JavaScript, React, and Node is
BACKEND
with hands-on experience in full-stack development
Node.j
Express
PHP
REST APIs
projects. Eager to contribute to innovative software
solutions and grow within a dynamic development
DATABASES
team.
MongoDB
MySQL
TOOLS TECHNOLOGIES
Git GitHub
VS Code
Postman
Professional Experience
JWT
APIS INTEGRATIONS
Junior Software Developer
TechStart Solutions Pvt Ltd
Jun 2022 Present
Stripe API
Local Storage
JavaScript React Node.js MongoDB Express.js Git
Education
Developed responsive web applications using React and
JavaScript ES6+
Bachelor of Computer
Built REST APIs using Node js and Express js serving
10,000+ daily requests
Applications (BCA)
University of Rajasthan
Implemented user authentication and authorization using
2019 - 2022
JWT tokens
Collaborated with senior developers using Git for version
control and code reviews
Certifications
Optimized database queries in MongoDB reducing
.
response time by 25%
JavaScript Fundamentals freeCodeCamp
.
React Developer Course Udemy
Participated in agile development cycles with daily
.
Node js Certification Coursera
standups and sprint planning
.
Git Version Control Codecademy
Languages
Hindi: Native
Web Development Intern
English: Fluent
Digital Innovators
Jan 2022 May 2022
Rajasthani: Native
HTML5 CSS3 JavaScript Bootstrap MySQL
Created static websites using HTML5, CSS3, and
Bootstrap framework
Implemented interactive features using vanilla JavaScript
Assisted in maintaining MySQL databases and writing
basic SQL queries
Fixed UI bugs and improved cross-browser compatibility
Learned modern development practices and coding
standards
Key Projects
E-Commerce Shopping Platform
React
Node.j
Express
MongoDB
JWT
Stripe API
Built full-stack e-commerce application with React frontend
and Node js backend Implemented user authentication using
JWT. integrated Stripe payment gateway, and created admin
dashboard for inventory management. Used MongoDB for
data storage and Express js for API development.
Task Management System
JavaScript
React
Local Storage
CSS3
Bootstrap
Developed a responsive task management application using
React and JavaScript. Features include task creation, editing,
deletion. and status tracking. Implemented local storage for
data persistence and used Bootstrap for responsive design
across devices.
Restaurant Website
HTML5
CSS3
JavaScript
MySQL
PHP
Created dynamic restaurant website with online reservation
system. Used HTML5 and CSS3 for layout and styling,
JavaScript for interactive features, and PHP with MySQL for
backend functionality including reservation management and
menu display.

2025-06-13 12:03:38 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"HTML5\",\n    \"CSS3\",\n    \"JavaScript\",\n    \"React\",\n    \"Bootstrap\",\n    \"Node.js\",\n    \"Express.js\",\n    \"PHP\",\n    \"REST APIs\",\n    \"JWT\",\n    \"Stripe API\",\n    \"Local Storage\",\n    \"JavaScript ES6+\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Communication\",\n    \"Problem-solving\",\n    \"Adaptability\"\n  ],\n  \"experience_level\": \"ENTRY\",\n  \"education\": \"Bachelor of Computer Applications (BCA)\",\n  \"years_of_experience\": 2,\n  \"certifications\": [\n    \"JavaScript Fundamentals - freeCodeCamp\",\n    \"React Developer Course - Udemy\",\n    \"Node.js Certification - Coursera\",\n    \"Git Version Control - Codecademy\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"Web Development\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"Node.js\",\n    \"PHP\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Bootstrap\",\n    \"Express.js\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Built REST APIs using Node.js and Express.js serving 10,000+ daily requests.\",\n    \"Optimized database queries in MongoDB reducing response time by 25%.\",\n    \"Implemented user authentication and authorization using JWT tokens.\"\n  ],\n  \"summary\": \"Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":920,"outputTokens":510,"totalTokens":1430}}
2025-06-13 12:03:38 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "HTML5",
    "CSS3",
    "JavaScript",
    "React",
    "Bootstrap",
    "Node.js",
    "Express.js",
    "PHP",
    "REST APIs",
    "JWT",
    "Stripe API",
    "Local Storage",
    "JavaScript ES6+"
  ],
  "soft_skills": [
    "Collaboration",
    "Communication",
    "Problem-solving",
    "Adaptability"
  ],
  "experience_level": "ENTRY",
  "education": "Bachelor of Computer Applications (BCA)",
  "years_of_experience": 2,
  "certifications": [
    "JavaScript Fundamentals - freeCodeCamp",
    "React Developer Course - Udemy",
    "Node.js Certification - Coursera",
    "Git Version Control - Codecademy"
  ],
  "industries": [
    "Software Development",
    "Web Development"
  ],
  "programming_languages": [
    "JavaScript",
    "Node.js",
    "PHP"
  ],
  "frameworks": [
    "React",
    "Bootstrap",
    "Express.js"
  ],
  "tools": [
    "Git",
    "GitHub",
    "VS Code",
    "Postman"
  ],
  "databases": [
    "MongoDB",
    "MySQL"
  ],
  "cloud_platforms": [],
  "key_achievements": [
    "Built REST APIs using Node.js and Express.js serving 10,000+ daily requests.",
    "Optimized database queries in MongoDB reducing response time by 25%.",
    "Implemented user authentication and authorization using JWT tokens."
  ],
  "summary": "Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects."
}
```
2025-06-13 12:03:38 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Aarav Sharma - Junior Developer.pdf
2025-06-13 12:03:38 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Processed candidate: Aarav Sharma - Junior Developer.pdf with ID: 946181ec-38f5-4664-a1f1-83926a922b7b
2025-06-13 12:03:38 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Aarav Sharma - Junior Developer.pdf (ID: 946181ec-38f5-4664-a1f1-83926a922b7b) in 16654ms
2025-06-13 12:03:38 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:03:38 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Aarav Sharma - Junior Developer.pdf, success=true, extractedData={experienceLevel=ENTRY, s (truncated)...]
2025-06-13 12:03:38 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:03:39 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:03:39 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:03:39 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Processing resume upload: Anjali Patel - Data Analyst.pdf
2025-06-13 12:03:42 [http-nio-8081-exec-5] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/abb623da-26df-49cb-ad01-3b3c4f717018-Anjali Patel - Data Analyst.pdf
2025-06-13 12:03:49 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/abb623da-26df-49cb-ad01-3b3c4f717018-Anjali Patel - Data Analyst.pdf
2025-06-13 12:03:49 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Pater
S Intelligence Specialist
anjali.patel@email.com
+91 97845 62310
linkedin.com/in/anjalipate
Bangalore, Karnataka, India
Professional Summary
Technical Skills
Innovative Data Analyst with 6+ years of experience in
transforming complex datasets into strategic business
Programming
insights for Indian tech startups and MNCs. Expert in
Python
R
SQL
Java
Scala
machine learning, statistical modeling, and data
visualization with proven track record of improving
business efficiency by 50% and reducing costs by
Databases
₹30 lakh annually through data-driven
recommendations.
MySQL
PostgreSQL
MongoDB
Cassandra
Snowflake
Professional Experience
Analytics & ML
Senior Data Analyst
Pandas
NumPy
Scikit-learn
TensorFlow
Flipkart Group
Feb 2022 Present
Statistical Modeling
Developed ML models for customer behavior analysis
processing 10M+ transactions daily
Created automated dashboards reducing reporting time by
Visualization
70% for 15+ stakeholders
Led data quality initiatives improving accuracy by 95%
Tableau
Power B
matplotlib
seaborn
across e-commerce platform
D3.js
Implemented A/B testing framework increasing conversion
rates by 28%
Built recommendation engines improving customer
engagement by 35%
Cloud Platforms
AWS
Azure
GCP
Spark
Hadoop
Data Analyst
Infosys Limited
Jun 2020 Jan 2022
Analyzed financial data for global banking clients using
Python and SQL
Developed predictive models for fraud detection with 92%
Key Projects
accuracy
Created Power BI dashboards for C-level executives and
stakeholders
E-commerce Customer Segmentation
Optimized database queries improving performance by
Built ML clustering model using K-means and RFM
45%
analysis to segment 5M+ customers, enabling
personalized marketing campaigns with 40% higher
conversion rates.
Junior Data Analyst
Tata Consultancy Services
Jul 2018 May 2020
Real-time Fraud Detection System
Supported market research analysis for retail and
Developed ensemble learning model combining
healthcare clients
Random Forest and XGBoost achieving 94% accuracy
Developed Excel-based models for financial forecasting
in detecting fraudulent transactions for fintech
and budgeting
application.
Assisted in data migration projects and quality assurance
testing
Supply Chain Optimization Dashboard
Created interactive Tableau dashboard tracking 50+
KPIs across inventory, logistics, and vendor
performance, reducing operational costs by ₹25 lakh
annually.
Education
Master of Technology (Computer Science)
Indian Institute of Technology, Bombay
Certifications
2016 2018
AWS Certified Data Analytics Specialty (2024)
Bachelor of Engineering (Information
Technology)
Google Professional Data Engineer (2023)
Gujarat Technological University
2012 2016
Microsoft Azure Data Scientist Associate (2023)
Tableau Desktop Certified Professional (2022)
Google Analytics Individual Qualification (2022)
Languages
Hindi (Native)
English (Fluent)
Gujarati (Native)
Tamil (Conversational)

2025-06-13 12:03:56 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Machine Learning\",\n    \"Statistical Modeling\",\n    \"Data Visualization\",\n    \"Data Quality Initiatives\",\n    \"A/B Testing\",\n    \"Recommendation Engines\",\n    \"Predictive Modeling\",\n    \"Fraud Detection\",\n    \"Database Query Optimization\",\n    \"Customer Segmentation\",\n    \"Real-time Fraud Detection\",\n    \"Supply Chain Optimization\",\n    \"Financial Forecasting\",\n    \"Budgeting\"\n  ],\n  \"soft_skills\": [\n    \"Innovative\",\n    \"Analytical\",\n    \"Leadership\",\n    \"Communication\",\n    \"Problem-solving\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Technology (Computer Science)\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"AWS Certified Data Analytics Specialty\",\n    \"Google Professional Data Engineer\",\n    \"Microsoft Azure Data Scientist Associate\",\n    \"Tableau Desktop Certified Professional\",\n    \"Google Analytics Individual Qualification\"\n  ],\n  \"industries\": [\n    \"Tech Startups\",\n    \"MNCs\",\n    \"E-commerce\",\n    \"Global Banking\",\n    \"Retail\",\n    \"Healthcare\",\n    \"Fintech\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R\",\n    \"SQL\",\n    \"Java\",\n    \"Scala\"\n  ],\n  \"frameworks\": [\n    \"Pandas\",\n    \"NumPy\",\n    \"Scikit-learn\",\n    \"TensorFlow\",\n    \"Spark\",\n    \"Hadoop\",\n    \"D3.js\"\n  ],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"matplotlib\",\n    \"seaborn\",\n    \"Excel\"\n  ],\n  \"databases\": [\n    \"MySQL\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"Cassandra\",\n    \"Snowflake\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\",\n    \"GCP\"\n  ],\n  \"key_achievements\": [\n    \"Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.\",\n    \"Increased conversion rates by 28% through the implementation of an A/B testing framework.\",\n    \"Achieved 95% accuracy improvement across the e-commerce platform by leading data quality initiatives.\"\n  ],\n  \"summary\": \"Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs through data-driven recommendations.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":934,"outputTokens":666,"totalTokens":1600}}
2025-06-13 12:03:56 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Machine Learning",
    "Statistical Modeling",
    "Data Visualization",
    "Data Quality Initiatives",
    "A/B Testing",
    "Recommendation Engines",
    "Predictive Modeling",
    "Fraud Detection",
    "Database Query Optimization",
    "Customer Segmentation",
    "Real-time Fraud Detection",
    "Supply Chain Optimization",
    "Financial Forecasting",
    "Budgeting"
  ],
  "soft_skills": [
    "Innovative",
    "Analytical",
    "Leadership",
    "Communication",
    "Problem-solving"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Technology (Computer Science)",
  "years_of_experience": 6,
  "certifications": [
    "AWS Certified Data Analytics Specialty",
    "Google Professional Data Engineer",
    "Microsoft Azure Data Scientist Associate",
    "Tableau Desktop Certified Professional",
    "Google Analytics Individual Qualification"
  ],
  "industries": [
    "Tech Startups",
    "MNCs",
    "E-commerce",
    "Global Banking",
    "Retail",
    "Healthcare",
    "Fintech"
  ],
  "programming_languages": [
    "Python",
    "R",
    "SQL",
    "Java",
    "Scala"
  ],
  "frameworks": [
    "Pandas",
    "NumPy",
    "Scikit-learn",
    "TensorFlow",
    "Spark",
    "Hadoop",
    "D3.js"
  ],
  "tools": [
    "Tableau",
    "Power BI",
    "matplotlib",
    "seaborn",
    "Excel"
  ],
  "databases": [
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Cassandra",
    "Snowflake"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure",
    "GCP"
  ],
  "key_achievements": [
    "Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.",
    "Increased conversion rates by 28% through the implementation of an A/B testing framework.",
    "Achieved 95% accuracy improvement across the e-commerce platform by leading data quality initiatives."
  ],
  "summary": "Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs through data-driven recommendations."
}
```
2025-06-13 12:03:56 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Anjali Patel - Data Analyst.pdf
2025-06-13 12:03:56 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Processed candidate: Anjali Patel - Data Analyst.pdf with ID: 0197ff21-5edf-4630-b34e-8a3b902fe0d0
2025-06-13 12:03:56 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Anjali Patel - Data Analyst.pdf (ID: 0197ff21-5edf-4630-b34e-8a3b902fe0d0) in 16548ms
2025-06-13 12:03:56 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:03:56 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Anjali Patel - Data Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, skil (truncated)...]
2025-06-13 12:03:56 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:03:57 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:03:57 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:03:57 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Processing resume upload: Arjun Singh - Software Developer.pdf
2025-06-13 12:04:01 [http-nio-8081-exec-6] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/c20f3414-9eb7-484a-ad10-4d316b02812e-Arjun Singh - Software Developer.pdf
2025-06-13 12:04:10 [http-nio-8081-exec-6] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/c20f3414-9eb7-484a-ad10-4d316b02812e-Arjun Singh - Software Developer.pdf
2025-06-13 12:04:10 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Professional Summary
Experienced Full Stack Software Developer with 7+ years of
expertise in building scalable web applications and
Arjun Singh
microservices for Indian tech companies and global clients.
Proficient in modern JavaScript frameworks, cloud
Full Stack Developer
technologies, and agile methodologies. Strong track record of
leading development teams and delivering high-quality
arjun.singh@email.com
software solutions that improved system performance by 60%
+91 94567 89012
and reduced deployment time by 45%.
linkedin.com/in/arjunsingh
github.com/arjunsingh
Professional Experience
T
Hyderabad, Telangana, India
Senior Software Developer
TECHNICAL SKILLS
Zomato Limited
Mar 2022 Present
Frontend
React Node.js TypeScript MongoDB Redis AWS Docker
PostgreSQL
Led development of real-time order tracking system serving
Redis
200K+ daily orders
- Built microservices architecture reducing API response time by
55%
LANGUAGES
- Implemented automated testing pipeline achieving 90% code
Hindi
Native
coverage
English
Fluent
- Mentored 4 junior developers and conducted code reviews
Punjabi
Native
Optimized database queries reducing server costs by ₹8 lakh
monthly
Telugu
Conversational
Software Developer
TOOLS & PLATFORMS
PayTM (One97 Communications)
Jan 2020 Feb 2022
Git Docker . Kubernetes Jenkins AWS
Azure Jira Slack vs Code Intelli]
Vue.js
Express.js
MySQL
Python
Django
Jenkins
IDEA Postman Webpack
- Developed payment gateway integration handling 100 crore+
daily transactions
- Created fraud detection algorithms reducing fraudulent
transactions by 40%
- Built responsive wallet interface used by 50M+ active users
- Implemented CI/CD pipelines reducing deployment time from 4
hours to 30 minutes
Junior Software Developer
Mindtree Limited
Jul 2018 Dec 2019
Angular Spring Boot PostgreSQU HTML5 CSS3
- Developed e-commerce modules for US retail client using Angular
and Spring Boot
- Created responsive UI components improving user experience by
35%
T Participated in agile development with 2-week sprint cycles
1 Fixed 200+ bugs and implemented 50+ feature enhancements
Key Projects
Food Delivery
Cryptocurrency
Platform
Trading Bot
Built end-to-end food
Developed automated
delivery platform with real-
trading bot using Python
time tracking, payment
and machine learning
integration, and restaurant
algorithms achieving 15%
management system using
monthly returns in
MERN stack.
backtesting.
React
Node.js
Python TensorFlow
MongoDB
Redis
Education
Bachelor of Technology (Computer Science
Engineering)
Indian Institute of Technology, Hyderabad
2014 2018
Certifications & Achievements
AWS Certified Solutions Architect Associate (2024)
Google Cloud Professional Developer (2023)
MongoDB Certified Developer (2022)
Scrum Master Certified (2021)
Winner Smart India Hackathon 2017 (Government of India)
Open Source Contributor 1000+ GitHub contributions

2025-06-13 12:04:17 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Node.js\",\n    \"TypeScript\",\n    \"MongoDB\",\n    \"Redis\",\n    \"AWS\",\n    \"Docker\",\n    \"PostgreSQL\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"MySQL\",\n    \"Python\",\n    \"Django\",\n    \"Jenkins\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"TensorFlow\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentorship\",\n    \"Team Collaboration\",\n    \"Agile Methodologies\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science Engineering)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect Associate\",\n    \"Google Cloud Professional Developer\",\n    \"MongoDB Certified Developer\",\n    \"Scrum Master Certified\"\n  ],\n  \"industries\": [\n    \"Technology\",\n    \"E-commerce\",\n    \"Finance\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"HTML5\",\n    \"CSS3\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Node.js\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"Django\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"AWS\",\n    \"Azure\",\n    \"Jira\",\n    \"Slack\",\n    \"VS Code\",\n    \"IntelliJ\",\n    \"IDEA\",\n    \"Postman\",\n    \"Webpack\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"Redis\",\n    \"PostgreSQL\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\"\n  ],\n  \"key_achievements\": [\n    \"Improved system performance by 60% and reduced deployment time by 45%\",\n    \"Reduced API response time by 55% through microservices architecture\",\n    \"Achieved 90% code coverage with automated testing pipeline\"\n  ],\n  \"summary\": \"Experienced Full Stack Software Developer with 7+ years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Strong track record of leading development teams and delivering high-quality software solutions.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":937,"outputTokens":654,"totalTokens":1591}}
2025-06-13 12:04:17 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Node.js",
    "TypeScript",
    "MongoDB",
    "Redis",
    "AWS",
    "Docker",
    "PostgreSQL",
    "Vue.js",
    "Express.js",
    "MySQL",
    "Python",
    "Django",
    "Jenkins",
    "Angular",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "TensorFlow"
  ],
  "soft_skills": [
    "Leadership",
    "Mentorship",
    "Team Collaboration",
    "Agile Methodologies"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science Engineering)",
  "years_of_experience": 7,
  "certifications": [
    "AWS Certified Solutions Architect Associate",
    "Google Cloud Professional Developer",
    "MongoDB Certified Developer",
    "Scrum Master Certified"
  ],
  "industries": [
    "Technology",
    "E-commerce",
    "Finance"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "HTML5",
    "CSS3"
  ],
  "frameworks": [
    "React",
    "Node.js",
    "Vue.js",
    "Express.js",
    "Angular",
    "Spring Boot",
    "Django"
  ],
  "tools": [
    "Git",
    "Docker",
    "Kubernetes",
    "Jenkins",
    "AWS",
    "Azure",
    "Jira",
    "Slack",
    "VS Code",
    "IntelliJ",
    "IDEA",
    "Postman",
    "Webpack"
  ],
  "databases": [
    "MongoDB",
    "Redis",
    "PostgreSQL",
    "MySQL"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure"
  ],
  "key_achievements": [
    "Improved system performance by 60% and reduced deployment time by 45%",
    "Reduced API response time by 55% through microservices architecture",
    "Achieved 90% code coverage with automated testing pipeline"
  ],
  "summary": "Experienced Full Stack Software Developer with 7+ years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Strong track record of leading development teams and delivering high-quality software solutions."
}
```
2025-06-13 12:04:17 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Arjun Singh - Software Developer.pdf
2025-06-13 12:04:17 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Processed candidate: Arjun Singh - Software Developer.pdf with ID: 03c4ac6a-04c8-4c6a-9ad7-047e21bea4a7
2025-06-13 12:04:17 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Arjun Singh - Software Developer.pdf (ID: 03c4ac6a-04c8-4c6a-9ad7-047e21bea4a7) in 19721ms
2025-06-13 12:04:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:04:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Arjun Singh - Software Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, (truncated)...]
2025-06-13 12:04:17 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:04:18 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:04:18 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:04:18 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Processing resume upload: Deepika Reddy - Java Developer.pdf
2025-06-13 12:04:20 [http-nio-8081-exec-8] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/16824232-4c25-4561-a7dd-4e9de960a4cc-Deepika Reddy - Java Developer.pdf
2025-06-13 12:04:27 [http-nio-8081-exec-8] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/16824232-4c25-4561-a7dd-4e9de960a4cc-Deepika Reddy - Java Developer.pdf
2025-06-13 12:04:27 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Deepika Reddy
Java Developer & Backend Engineer
dccpika.reddy@email .com
H
+91 98712 34567
- linkedin com/1 in/deepikareddy
github.com/deepikareddy
T
Hyderabad, Telangana, India
PROFESSIONAL SUMMARY
TECHNICAL
SKILLS
Dedicated Java Developer with 5+ years of experience in
designing and developing enterprise level applications
CORE JAVA
using Java Spring Framework and microservices
lava I'
Java 11
architecture Expertise in building scalable backend
systems, RESTful APIs, and database integration with
lava OOP Concepts
strong knowledge of software design patterns and best
practices Proven track record of optimizing application
Multithreading
performance and delivering high-quality code in agile
environments
FRAMEWORKS
PROFESSIONAL EXPERIENCE
Spring Boot
Spring MVC
Spring Security
Senior Java Developer
Hibernato
JPA
Accenture Solutions
Jan 2022 Present
Java 17
Spring Boot
Spring Security
Microservices
DATABASES
PostgreSQL
Redis
Docker
Kafka
JUnit
PostgreSQI
MySQI
Developed microservices architecture using Java 17 and Spring
Oracle DB
Redis
Boot serving 500K+ daily transactions
Implemented secure authentication and authorization using
JDBC
Spring Security and JWT tokens
Designed and optimized PostgreSQI database schemas reducing
query execution time by 50%
WEB
Built event driven systems using Apache Kafka for real-time
TECHNOLOGIES
data processing
RESTAI
Implemented Redis caching strategies improving application
response 40%
Microservice
Servlets
Containerized applications using Docker and deployed on
Kubernetes clusters
JSP
SON
Achieved 90% code coverage through compreher sive unit
testing with JUnit and Mockito
TOOLS DEVOPS
Docker Kafka
Java Developer
Mayen Gi
Tomcat
Capgemini India
Mar 2020 Dec 2021
Java 11
Spring MVC
libernato
MySQI
RESTAPI
TESTING
Maven
Git
Unit
Mockito
Buil enterprise web applications using Java 11. Spring MVC.
and Hibernate ORM
Integration Testing
Developed RESTful APIs for frontend consumption and third-
party integrations
Unit Testing
Implemented database operations using Hibernate with MySQL
backend
Used Mayen for project management and dependency resolution
EDUCATION
Collaborated with cross-functional teams using Git for version
control
Participated code reviews and maintained high coding
Bachelor Technology
standards
(Computer Science)
Jawaharlal Nehru
Technological University
2015-2019
Associate Software Engineer
Wipro Technologies
Jul 2019 - Fcb 2020
CERTIFICATIONS
Juya8
Servlets
JSP
JDBC
Oracle
Tomcat
Oracle Certified Professional Java
Developed web applications using Java Servlets, and ISP
SE
technologies
Implemented database connectivity using JDBC with Oracle
Spring Professional Certification
database
Deployed applications on Apache Tomcat server
AWS Certified Developer
Fixed bugs and implemented feature enhancements based on
Associate
client requirements
Learned enterprise development practices and coding standards
Docker Certified Associate
Apache Kafka Developer
FEATURED PROJECTS
Microservice Architecture
LANGUAGES
Banking
E-Commerce Order
Microservices
Management
Platform
Telugu: Native
Java II
Spring MVC
Hindi: Fluent
Java 17
Spring Boot
libernate
MySQL
English: Fluent
PostgreSQ1
Redis
Tamil: Basic
RESTAPI
Kafka
Docker
Built order management
system using Java and
KEY
Architected prehensive
banki platform using
Spring MVC framework
ACHIEVEMENTS
microservices with Java 17
Implemented Hibernate for
and Spring Boot Implemented
ORM mapping with MySQL
database created REST APIs
PostgreSQL data
. performance improvement
persistence Redis caching
for order processing and
database queries
and Kalka for event streaming
integrated payment gateway
90% coverage
testing
Containerized services using
services
Led team of developers
500K daily transactions handled
Docker scalable
Zero production bugs in last months
deployment
Employee
Inventory Tracking
Management stem
API
Java 8
Servlets
Spring Boot
JSP
JDBC
Spring Security
JUnit
Oracle DB
Mockito
Mayen
Developed employee
Created REST for
management application using
inventory management using
Java with Servlets JSP
Spring Spring
for interface Used JDBC
Security authentication
for database operations with
Implemented comprehensive
Oracle backend implemented
testing with JUnit and
CRU D operations and
Mockito managed project
employee reporting features
dependencies with Mayen
build tool

2025-06-13 12:04:34 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Java 11\",\n    \"Java OOP Concepts\",\n    \"Multithreading\",\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\",\n    \"RESTful APIs\",\n    \"Microservices\",\n    \"Servlets\",\n    \"JSP\",\n    \"JDBC\",\n    \"JSON\",\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Integration Testing\",\n    \"Unit Testing\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\"\n  ],\n  \"soft_skills\": [\n    \"Team Collaboration\",\n    \"Code Reviews\",\n    \"High Coding Standards\",\n    \"Problem Solving\",\n    \"Client Requirements Handling\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"Oracle Certified Professional Java SE\",\n    \"Spring Professional Certification\",\n    \"AWS Certified Developer Associate\",\n    \"Docker Certified Associate\",\n    \"Apache Kafka Developer\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\"\n  ],\n  \"tools\": [\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\",\n    \"Tomcat\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"Oracle DB\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Kubernetes\"\n  ],\n  \"key_achievements\": [\n    \"Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions\",\n    \"Designed and optimized PostgreSQL database schemas reducing query execution time by 50%\",\n    \"Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito\"\n  ],\n  \"summary\": \"Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1286,"outputTokens":660,"totalTokens":1946}}
2025-06-13 12:04:34 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Java 11",
    "Java OOP Concepts",
    "Multithreading",
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA",
    "RESTful APIs",
    "Microservices",
    "Servlets",
    "JSP",
    "JDBC",
    "JSON",
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Integration Testing",
    "Unit Testing",
    "Docker",
    "Kafka",
    "Kubernetes"
  ],
  "soft_skills": [
    "Team Collaboration",
    "Code Reviews",
    "High Coding Standards",
    "Problem Solving",
    "Client Requirements Handling"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 5,
  "certifications": [
    "Oracle Certified Professional Java SE",
    "Spring Professional Certification",
    "AWS Certified Developer Associate",
    "Docker Certified Associate",
    "Apache Kafka Developer"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "Java"
  ],
  "frameworks": [
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA"
  ],
  "tools": [
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Docker",
    "Kafka",
    "Kubernetes",
    "Tomcat"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "Oracle DB",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS",
    "Kubernetes"
  ],
  "key_achievements": [
    "Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions",
    "Designed and optimized PostgreSQL database schemas reducing query execution time by 50%",
    "Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito"
  ],
  "summary": "Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments."
}
```
2025-06-13 12:04:34 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Deepika Reddy - Java Developer.pdf
2025-06-13 12:04:34 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Processed candidate: Deepika Reddy - Java Developer.pdf with ID: 721042f9-a8e7-41ed-96d9-c1dbc4954d29
2025-06-13 12:04:34 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Deepika Reddy - Java Developer.pdf (ID: 721042f9-a8e7-41ed-96d9-c1dbc4954d29) in 15965ms
2025-06-13 12:04:34 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:04:34 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Deepika Reddy - Java Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, s (truncated)...]
2025-06-13 12:04:34 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:04:35 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:04:35 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:04:35 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Processing resume upload: Karan Singh - DevOps Engineer.pdf
2025-06-13 12:04:45 [http-nio-8081-exec-9] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/6780c76b-03d7-445a-a96c-ddd85073b94e-Karan Singh - DevOps Engineer.pdf
2025-06-13 12:05:07 [http-nio-8081-exec-9] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/6780c76b-03d7-445a-a96c-ddd85073b94e-Karan Singh - DevOps Engineer.pdf
2025-06-13 12:05:07 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
karan.singh@email.com
+91 97531 86420
Karan Singh
DevOps Engineer & Cloud Architect
linkedin.com/in/karansingh
STATUS: ACTIVE UPTIME: 5+ YEARS I DEPLOYMENTS: 1000+
in github.com/karansingh
o
Gurgaon, Haryana, India
$ cat professional_summary.txt
TECHNICAL ARSENAL
CLOUD PLATFORMS
Experienced DevOps Engineer with 5+ years of expertise in automating
AWS EC2
AWS EKS
AWS RDS
AWS
deployment pipelines, managing cloud infrastructure. and orchestrating
AWS CloudWatch
AWS CodePipeline
AWS CLI
containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD
automation with strong background in Infrastructure as Code and monitoring
solutions Proven track record of reducing deployment time by 80% and
CONTAINERIZATION
improving system reliability to 99.9% uptime through robust DevOps practices.
Docker
Kubernetes
Docker Swarm
Helm
Container Registry
$ grep -r "experience" /career/history
CI/CD TOOLS
[PROCESS]
Jenkins
GitLab
GitHub Actions
Git
Maven
Senior DevOps Engineer
SonarQub
Paytm (One97 Communications)
Jan 2022 Present
AWS
Kubernetes
Docker
Jenkins
Terraform
Ansible
Prometheus
Grafana
ELK Stack
INFRASTRUCTURE AS CODE
Architected AWS cloud infrastructure using Terraform managing 100+ EC2 instances
Terraform
Ansible
CloudFormation
YAML
JSON
and RDS clusters
Implemented Kubernetes orchestration for microservices serving 50M+ daily
transactions
MONITORING LOGGING
Built Jenkins CI/CD pipelines reducing deployment time from 4 hours to 30 minutes
Prometheus
Grafana
ELK Stack
Alertmanager
Elasticsearch
Kibana
Configured monitoring stack using Prometheus and Grafana achieving 99.9% uptime SLA
Automated infrastructure provisioning using Ansible playbooks saving 20 hours/week
Implemented ELK Stack for centralized logging and real-time log analysis
SYSTEM ADMINISTRATION
Managed Docker container registry and optimized image sizes by 60%
Linux
Shell Scripting
Nainx
Apache
Tomcat
Redis
[PROCESS]
# PERFORMANCE METRICS
DevOps Engineer
Nagarro Software
Mar 2021 Dec 2021
99.9%
80%
AWS EC2
Docker Swarm
GitLab CI
CloudFormation
Nginx
Redis
SYSTEMUPTIME
DEPLOY TIME REDUCTION
Deployed applications on AWS EC2 using Docker Swarm for container orchestration
1000+
100+
Created GitLab CT pipelines for automated testing and deployment processes
DEPLOYMENTS
EC2 INSTANCES
Implemented infrastructure using AWS CloudFormation templates
Configured Nginx load balancers for high availability and traffic distribution
# SYSTEM CONFIGURATION
Set up Redis clusters for caching and session management
Optimized application performance resulting in 40% faster response times
Bachelor of Technology (Information
Technology)
Guru Gobind Singh Indraprastha University
2016 2020
[PROCESS]
Junior DevOps Engineer
# SECURITY CERTIFICATES
Mindtree Limited
Jun 2020 Feb 2021
Linux
Shell Scripting
Git
Mayer
Tomcat
AWS Certified DevOps Engineer Professional
Managed Linux servers and wrote Shell scripts for automation tasks
Certified Kubernetes Administrator (CKA)
Implemented Git workflows and branching strategies for development teams
Docker Certified Associate
Configured Mayen build processes for Java applications
Terraform Associate Certification
Deployed applications on Apache Tomcat servers
Learned infrastructure management and deployment best practices
Jenkins Certified Engineer
AWS Solutions Architect Associate
Prometheus Certified Associate
$ ls -la /projects/featured
LANGUAGE SUPPORT
[PROJECT]
[PROJECT]
Microservices Platform
CI/CD Automation Pipeline
Hindi: Native
Kubernetes
Docker
AWS EKS
Terraform
Jenkins
GitLab
Docker
English: Fluent
Helm
AWS CodePipeline
SonarQube
Punjabi: Native
Urdu: Conversational
Built scalable microservices platform on
Implemented end-to-end CI/CD pipeline
AWS EKS using Kubernetes and Docker.
using Jenkins and GitLab CI with Docker
Automated infrastructure deployment with
containerization. Integrated AWS
ADDITIONAL MODULES
Terraform and managed application
CodePipeline for cloud-native deployments
deployments using Helm charts for
and SonarQube for code quality analysis.
Microservices Architecture
consistent and reliable releases.
Site Reliability Engineering
cloud Security Best Practices
Disaster Recovery Planning
Cost Optimization Strategies
Agile DevOps Methodologies
[PROJECT]
[PROJECT]
Infrastructure Monitoring
Infrastructure as Code
SYSTEM STATUS
Prometheus
Grafana
ELK Stack
Terraform
Ansible
CloudFormation
AWS CloudWatch
Alertmanager
Shell Scripting
AWS CLI
OPERATIONAL: All systems running
MONITORING: Active 24/7
BACKUP: Automated daily
Set up comprehensive monitoring solution
Automated infrastructure provisioning
SECURITY Enhanced protection
PERFORMANCE: Optimized
using Prometheus and Grafana with ELK
using Terraform and Ansible with AWS
Stack for log aggregation. Configured AWS
CloudFormation. Created Shell scripts and
CloudWatch and Alertmanager for proactive
AWS CLI automation for infrastructure
incident management
management and deployment processes.

2025-06-13 12:05:19 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"AWS EC2\", \"AWS EKS\", \"AWS RDS\", \"AWS CloudWatch\", \"AWS CodePipeline\", \"AWS CLI\",\n    \"Docker\", \"Kubernetes\", \"Docker Swarm\", \"Helm\", \"Container Registry\",\n    \"Jenkins\", \"GitLab\", \"GitHub Actions\", \"Git\", \"Maven\", \"SonarQub\",\n    \"Terraform\", \"Ansible\", \"CloudFormation\", \"YAML\", \"JSON\",\n    \"Prometheus\", \"Grafana\", \"ELK Stack\", \"Alertmanager\", \"Elasticsearch\", \"Kibana\",\n    \"Linux\", \"Shell Scripting\", \"Nginx\", \"Apache\", \"Tomcat\", \"Redis\"\n  ],\n  \"soft_skills\": [\n    \"Problem-solving\", \"Automation\", \"Optimization\", \"Team Collaboration\", \"Project Management\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Information Technology)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified DevOps Engineer Professional\",\n    \"Certified Kubernetes Administrator (CKA)\",\n    \"Docker Certified Associate\",\n    \"Terraform Associate Certification\",\n    \"Jenkins Certified Engineer\",\n    \"AWS Solutions Architect Associate\",\n    \"Prometheus Certified Associate\"\n  ],\n  \"industries\": [\n    \"IT Services\", \"Financial Technology\", \"Consulting\"\n  ],\n  \"programming_languages\": [\n    \"Shell Scripting\"\n  ],\n  \"frameworks\": [\n    \"Kubernetes\", \"Docker Swarm\", \"Helm\"\n  ],\n  \"tools\": [\n    \"Jenkins\", \"GitLab\", \"GitHub Actions\", \"Git\", \"Maven\", \"SonarQub\",\n    \"Terraform\", \"Ansible\", \"CloudFormation\", \"Prometheus\", \"Grafana\",\n    \"ELK Stack\", \"Alertmanager\", \"Elasticsearch\", \"Kibana\", \"AWS CLI\"\n  ],\n  \"databases\": [\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Reduced deployment time by 80%\",\n    \"Improved system reliability to 99.9% uptime\",\n    \"Optimized Docker image sizes by 60%\"\n  ],\n  \"summary\": \"Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Proficient in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of reducing deployment time and improving system reliability.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1431,"outputTokens":642,"totalTokens":2073}}
2025-06-13 12:05:19 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "AWS EC2", "AWS EKS", "AWS RDS", "AWS CloudWatch", "AWS CodePipeline", "AWS CLI",
    "Docker", "Kubernetes", "Docker Swarm", "Helm", "Container Registry",
    "Jenkins", "GitLab", "GitHub Actions", "Git", "Maven", "SonarQub",
    "Terraform", "Ansible", "CloudFormation", "YAML", "JSON",
    "Prometheus", "Grafana", "ELK Stack", "Alertmanager", "Elasticsearch", "Kibana",
    "Linux", "Shell Scripting", "Nginx", "Apache", "Tomcat", "Redis"
  ],
  "soft_skills": [
    "Problem-solving", "Automation", "Optimization", "Team Collaboration", "Project Management"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Information Technology)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified DevOps Engineer Professional",
    "Certified Kubernetes Administrator (CKA)",
    "Docker Certified Associate",
    "Terraform Associate Certification",
    "Jenkins Certified Engineer",
    "AWS Solutions Architect Associate",
    "Prometheus Certified Associate"
  ],
  "industries": [
    "IT Services", "Financial Technology", "Consulting"
  ],
  "programming_languages": [
    "Shell Scripting"
  ],
  "frameworks": [
    "Kubernetes", "Docker Swarm", "Helm"
  ],
  "tools": [
    "Jenkins", "GitLab", "GitHub Actions", "Git", "Maven", "SonarQub",
    "Terraform", "Ansible", "CloudFormation", "Prometheus", "Grafana",
    "ELK Stack", "Alertmanager", "Elasticsearch", "Kibana", "AWS CLI"
  ],
  "databases": [
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Reduced deployment time by 80%",
    "Improved system reliability to 99.9% uptime",
    "Optimized Docker image sizes by 60%"
  ],
  "summary": "Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Proficient in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of reducing deployment time and improving system reliability."
}
```
2025-06-13 12:05:19 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Karan Singh - DevOps Engineer.pdf
2025-06-13 12:05:19 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Processed candidate: Karan Singh - DevOps Engineer.pdf with ID: 723c91fe-2a5a-4454-869a-326d8c64d1c2
2025-06-13 12:05:19 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Karan Singh - DevOps Engineer.pdf (ID: 723c91fe-2a5a-4454-869a-326d8c64d1c2) in 44132ms
2025-06-13 12:05:19 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:05:19 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Karan Singh - DevOps Engineer.pdf, success=true, extractedData={experienceLevel=SENIOR, sk (truncated)...]
2025-06-13 12:05:19 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:05:21 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:05:21 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:05:21 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Processing resume upload: Kavya Nair - Full Stack Developer.pdf
2025-06-13 12:05:27 [http-nio-8081-exec-10] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/0973fd53-b668-40d6-9bea-7c860a2eb65f-Kavya Nair - Full Stack Developer.pdf
2025-06-13 12:05:35 [http-nio-8081-exec-10] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/0973fd53-b668-40d6-9bea-7c860a2eb65f-Kavya Nair - Full Stack Developer.pdf
2025-06-13 12:05:35 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
+91 98765 12345
Full Stack Developer
linkedin com/in/kavyanair
"Building scalable web solutions with modern technologies'
github.com/kavyanair
9
Kochi. Kerala India
PROFESSIONAL SUMMARY
TECHNICAL
ARSENAL
Passionate Full Stack Developer with 5+ years of experience
FRONTEND
building robust web applications using modern JavaScript
React
Vue.js
Angular
frameworks and cloud technologies. Expertise in React, Node.js,
TypeScript
JavaScript
Python, and AWS with a strong focus on creating scalable,
HTML5
CSS3
maintainable solutions. Proven track record of leading development
teams and delivering high-quality software that serves 100K+ users
daily.
BACKEND
Node.js
Express.js
Python
Django
Java
Spring Boot
PROFESSIONAL EXPERIENCE
DATABASES
PostgreSQL
MySQL
Senior Full Stack Developer
MongoDB
Redis
Oracle DE
Freshworks Inc.
Mar 2022 Present
React
TypeScript
Node.js
Express.js
PostgreSQL
Redis
AWS
Docker
CLOUD DEVOPS
Kubernetes
AWS
Docker
Kubernetes
Architected and developed microservices using Node js and Express.js
Jenkins
GitHub Actions
serving 100K+ daily active users
Built responsive React applications with TypeScript ensuring type safety and
maintainable code
APIS TOOLS
Optimized PostgreSQL database queries and implemented Redis caching
REST APIs
GraphQL
reducing API response time by 60%
Socket.ic
JWT
WebRTC
Deployed applications on AWS using Docker containers and Kubernetes
Chart.js
JUnit
Swagger
orchestration
Led team of developers and mentored junior developers in best practices
Implemented CI/CD pipelines using Jenkins and GitHub Actions reducing
EDUCATION
deployment time by 50%
Master of Computer
Applications (MCA)
Cochin University of Science &
Technology
Full Stack Developer
2017 2019
Zoho Corporation
Jan 2020 Feb 2022
Vue.js
Python
Django
MySQL
MongoDB
REST APIs
GraphQL
Bachelor of Science
(Computer Science)
Developed enterprise CRM features using Vue js frontend and Python Django
University of Kerala
backend
2014 2017
Created RESTful APIs and GraphQL endpoints handling 50K+ requests per
hour
Designed and implemented database schemas in MySQL and MongoDB for
CERTIFICATIONS
optimal performance
Integrated third-party services and APIs for email marketing and analytics
AWS Certified Solutions Architect
functionality
Participated in code reviews and maintained high code quality standards
MongoDB Certified Developer
React Professional Certificate
Node.js Application Developer
Software Developer
Docker Certified Associate
UST Global
Jun 2019 Dec 2019
Kubernetes Administrator
Angular
Java
Spring Boot
Oracle DB
JUnit
Built banking applications using Angular frontend and Java Spring Boot
backend
LANGUAGES
Implemented secure user authentication and authorization using Spring
Security
Malayalam: Native
Developed unit tests using JUnit achieving 85% code coverage
English: Fluent
Hindi: Conversational
Worked with Oracle databases and optimized complex SQL queries
Tamil: Basic
FEATURED PROJECTS
Social Media Analytics
E-Learning Management
Platform
System
React Node.js MongoDB
Vue.js Python Django
Redis Chart.js AWS
PostgreSQL WebRTC
Developed comprehensive social
Built an online learning platform with
media analytics dashboard using
Vue. js frontend and Django backend
React and Chart. js for data
Integrated video conferencing using
visualization. Built scalable backend
WebRTC, implemented course
with Node.js and MongoDB,
management features, and used
implemented Redis for caching, and
PostgreSQL for data storage with
deployed on AWS with auto-scaling
automated backups.
capabilities.
Real-time Chat Application
Inventory Management API
TypeScript Socket.io Express.js
Java
Spring Boot MySQL
JWT
Docker
JUnit
Swagger
Created real-time messaging
Developed RESTful API for inventory
application using Socket io for
management using Java Spring Boot
WebSocket communication and
and MySQL Created comprehensive
TypeScript for type safety.
API documentation with Swagger,
Implemented JWT authentication,
implemented unit testing with JUnit,
built with Express js backend and
and added data validation and error
containerized using Docker for easy
handling.
deployment.

2025-06-13 12:05:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"Python\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Java\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"REST APIs\",\n    \"GraphQL\",\n    \"Socket.io\",\n    \"JWT\",\n    \"WebRTC\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"Swagger\",\n    \"Spring Security\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Code Review\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Computer Applications (MCA)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect\",\n    \"MongoDB Certified Developer\",\n    \"React Professional Certificate\",\n    \"Node.js Application Developer\",\n    \"Docker Certified Associate\",\n    \"Kubernetes Administrator\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"CRM\",\n    \"Banking\",\n    \"Analytics\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"Java\",\n    \"HTML5\",\n    \"CSS3\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Spring Boot\"\n  ],\n  \"tools\": [\n    \"Postman\",\n    \"Swagger\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"Jenkins\",\n    \"GitHub Actions\",\n    \"Docker\",\n    \"Kubernetes\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"MongoDB\",\n    \"Redis\",\n    \"Oracle DB\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Architected and developed microservices serving 100K+ daily active users\",\n    \"Optimized PostgreSQL database queries reducing API response time by 60%\",\n    \"Implemented CI/CD pipelines reducing deployment time by 50%\"\n  ],\n  \"summary\": \"Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1215,"outputTokens":684,"totalTokens":1899}}
2025-06-13 12:05:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Vue.js",
    "Angular",
    "TypeScript",
    "JavaScript",
    "Python",
    "Node.js",
    "Express.js",
    "Django",
    "Java",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "REST APIs",
    "GraphQL",
    "Socket.io",
    "JWT",
    "WebRTC",
    "Chart.js",
    "JUnit",
    "Swagger",
    "Spring Security"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Code Review"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Computer Applications (MCA)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified Solutions Architect",
    "MongoDB Certified Developer",
    "React Professional Certificate",
    "Node.js Application Developer",
    "Docker Certified Associate",
    "Kubernetes Administrator"
  ],
  "industries": [
    "Software Development",
    "CRM",
    "Banking",
    "Analytics"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "Java",
    "HTML5",
    "CSS3"
  ],
  "frameworks": [
    "React",
    "Vue.js",
    "Angular",
    "Node.js",
    "Express.js",
    "Django",
    "Spring Boot"
  ],
  "tools": [
    "Postman",
    "Swagger",
    "Chart.js",
    "JUnit",
    "Jenkins",
    "GitHub Actions",
    "Docker",
    "Kubernetes"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "MongoDB",
    "Redis",
    "Oracle DB"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Architected and developed microservices serving 100K+ daily active users",
    "Optimized PostgreSQL database queries reducing API response time by 60%",
    "Implemented CI/CD pipelines reducing deployment time by 50%"
  ],
  "summary": "Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily."
}
```
2025-06-13 12:05:43 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Kavya Nair - Full Stack Developer.pdf
2025-06-13 12:05:43 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Processed candidate: Kavya Nair - Full Stack Developer.pdf with ID: 72e93bec-d84a-44b0-ba04-04e0807f214f
2025-06-13 12:05:43 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Kavya Nair - Full Stack Developer.pdf (ID: 72e93bec-d84a-44b0-ba04-04e0807f214f) in 22042ms
2025-06-13 12:05:43 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:05:43 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Kavya Nair - Full Stack Developer.pdf, success=true, extractedData={experienceLevel=SENIOR (truncated)...]
2025-06-13 12:05:43 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:05:47 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:05:47 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:05:47 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Processing resume upload: Mei Chen - Marketing Analyst.pdf
2025-06-13 12:05:58 [http-nio-8081-exec-1] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/ade1c463-45ef-4c77-bbbe-42e097baf9b1-Mei Chen - Marketing Analyst.pdf
2025-06-13 12:06:07 [http-nio-8081-exec-1] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/ade1c463-45ef-4c77-bbbe-42e097baf9b1-Mei Chen - Marketing Analyst.pdf
2025-06-13 12:06:07 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Mei Chen
Marketing Analyst & Growth Strategist
mei.chen@email.com
+65 9876 5432
linkedin .com/in/meichen
Singapore
PROFESSIONAL SUMMARY
Core Skills
Data Analytics
95%
Data-driven Marketing Analyst with 6+ years of experience in
SQL & Python
90%
digital marketing analytics and customer insights across Asia-
Tableau & Power BI
88%
Pacific markets. Expert in transforming complex data into
actionable marketing strategies that drove 45% increase in ROI
Google Analytics
92%
and 35% growth in customer acquisition. Specialized in cross-
cultural marketing campaigns and multilingual market analysis.
A/B Testing
85%
Languages
PROFESSIONAL EXPERIENCE
Mandarin
English
Native
Fluent
Senior Marketing Analyst
Hindi
Shopee Singapore
Jan 2022 Present
Malay
Conversational
Basic
Analyzed user behavior data from 8 Southeast Asian markets with
100M+ active users
Developed attribution models improving campaign ROI
Education
measurement accuracy by 50%
Led A/B testing initiatives across mobile and web platforms with
28% conversion improvement
Master of Science in
Marketing Analytics
Created automated dashboards reducing manual reporting time by
National University of
75%
Singapore
2016 2018
Managed marketing analytics for flash sales generating S$50M+
revenue
Bachelor of Business
Administration
Nanyang Technological
University
Marketing Data Analyst
2012 2016
Grab Holdings
Mar 2020 Dec 2021
Performed cohort analysis for ride-hailing and food delivery
services across 6 countries
Certifications
Built predictive models for customer lifetime value with 89%
accuracy
Google Analytics 4 Certified
Optimized marketing spend allocation reducing CAC by 30%
across all verticals
Facebook Blueprint Certified
Conducted market research for new service launches in emerging
markets
Tableau Desktop Specialist
AWS Cloud Practitioner
Junior Marketing Analyst
Google Ads Certified
ByteDance (TikTok)
Jun 2018 Feb 2020
Analyzed viral content patterns and user engagement metrics for
HubSpot Marketing Analytics
APAC region
Created weekly performance reports for marketing campaigns
across 12 markets
Supported influencer marketing ROI analysis and campaign
optimization
Assisted in competitive analysis and market positioning strategies

2025-06-13 12:06:12 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Data Analytics\",\n    \"SQL\",\n    \"Python\",\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\",\n    \"A/B Testing\",\n    \"Predictive Modeling\",\n    \"Marketing Spend Allocation\",\n    \"Market Research\",\n    \"Attribution Models\",\n    \"Automated Dashboards\",\n    \"Customer Lifetime Value\"\n  ],\n  \"soft_skills\": [\n    \"Cross-cultural Marketing\",\n    \"Multilingual Market Analysis\",\n    \"Campaign Optimization\",\n    \"Market Positioning Strategies\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Science in Marketing Analytics\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"Google Analytics 4 Certified\",\n    \"Facebook Blueprint Certified\",\n    \"Tableau Desktop Specialist\",\n    \"AWS Cloud Practitioner\",\n    \"Google Ads Certified\",\n    \"HubSpot Marketing Analytics\"\n  ],\n  \"industries\": [\n    \"Digital Marketing\",\n    \"E-commerce\",\n    \"Ride-hailing\",\n    \"Food Delivery\",\n    \"Social Media\"\n  ],\n  \"programming_languages\": [\n    \"SQL\",\n    \"Python\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\"\n  ],\n  \"databases\": [\n    \"SQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Drove 45% increase in ROI and 35% growth in customer acquisition\",\n    \"Improved campaign ROI measurement accuracy by 50%\",\n    \"Achieved 28% conversion improvement through A/B testing initiatives\"\n  ],\n  \"summary\": \"Data-driven Marketing Analyst with 6+ years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":751,"outputTokens":505,"totalTokens":1256}}
2025-06-13 12:06:12 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Data Analytics",
    "SQL",
    "Python",
    "Tableau",
    "Power BI",
    "Google Analytics",
    "A/B Testing",
    "Predictive Modeling",
    "Marketing Spend Allocation",
    "Market Research",
    "Attribution Models",
    "Automated Dashboards",
    "Customer Lifetime Value"
  ],
  "soft_skills": [
    "Cross-cultural Marketing",
    "Multilingual Market Analysis",
    "Campaign Optimization",
    "Market Positioning Strategies"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Science in Marketing Analytics",
  "years_of_experience": 6,
  "certifications": [
    "Google Analytics 4 Certified",
    "Facebook Blueprint Certified",
    "Tableau Desktop Specialist",
    "AWS Cloud Practitioner",
    "Google Ads Certified",
    "HubSpot Marketing Analytics"
  ],
  "industries": [
    "Digital Marketing",
    "E-commerce",
    "Ride-hailing",
    "Food Delivery",
    "Social Media"
  ],
  "programming_languages": [
    "SQL",
    "Python"
  ],
  "frameworks": [],
  "tools": [
    "Tableau",
    "Power BI",
    "Google Analytics"
  ],
  "databases": [
    "SQL"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Drove 45% increase in ROI and 35% growth in customer acquisition",
    "Improved campaign ROI measurement accuracy by 50%",
    "Achieved 28% conversion improvement through A/B testing initiatives"
  ],
  "summary": "Data-driven Marketing Analyst with 6+ years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis."
}
```
2025-06-13 12:06:12 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Mei Chen - Marketing Analyst.pdf
2025-06-13 12:06:12 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Processed candidate: Mei Chen - Marketing Analyst.pdf with ID: 03b67de4-12cd-45f9-bd83-c59463441842
2025-06-13 12:06:12 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Mei Chen - Marketing Analyst.pdf (ID: 03b67de4-12cd-45f9-bd83-c59463441842) in 25421ms
2025-06-13 12:06:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:06:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Mei Chen - Marketing Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, ski (truncated)...]
2025-06-13 12:06:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:06:14 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:06:14 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:06:14 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Processing resume upload: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 12:06:17 [http-nio-8081-exec-2] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/4d48aaa7-44b8-4cf2-9fcd-c150f8720858-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 12:06:21 [http-nio-8081-exec-2] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/4d48aaa7-44b8-4cf2-9fcd-c150f8720858-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 12:06:21 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
PROFESSIONAL SUMMARY
Results-oriented Sales & Marketing professional with 7+
years of experience in the Indian market, specializing in
digital marketing strategies and B2B sales. Proven track
Priya Sharma
record of increasing revenue by 40% and expanding
market presence across Tier 1 and Tier 2 cities. Expert in
Sales & Marketing Professional
managing multi-channel campaigns and building long-term
client relationships in competitive markets.
Contact
priya.sharma@email.com
PROFESSIONAL EXPERIENCE
+91 98765 43210
Senior Marketing Manager
linkedin.com/in/priyasharma
Tata Digital Solutions
Jan 2021 Present
Mumbai, Maharashtra, India
Led digital marketing initiatives for pan-India market expansion,
Core Skills
reaching 15+ states
Managed ₹50 lakh annual marketing budget with 35% ROI
Lead Generation
improvement
Developed localized campaigns for regional markets increasing
Digital Marketing
engagement by 60%
Built strategic partnerships with 25+ B2B clients across various
CRM Management
industries
Campaign Strategy
Implemented CRM system reducing sales cycle time by 30%
Analytics
Marketing Executive
Languages
Reliance Industries Ltd
Mar 2019 Dec 2020
Executed social media strategies achieving 2M+ followers across
Hindi (Native)
platforms
English (Fluent)
Coordinated trade shows and exhibitions in Mumbai, Delhi, and
Bangalore
Marathi (Native)
Managed vendor relationships and negotiated contracts saving
₹15 lakh annually
Certifications
Created content marketing strategy increasing website traffic by
150%
Google Ads Certified Professional
HubSpot Inbound Marketing
Salesforce Administrator
Sales Associate
Digital Marketing Institute
Wipro Technologies
Jun 2017 Feb 2019
Achieved 125% of sales targets consistently across Western
India region
Built client database of 200+ prospects through cold calling and
networking
Participated in 10+ industry conferences and generated 50+
qualified leads
EDUCATION
Master of Business Administration (Marketing)
Indian Institute of Management, Ahmedabad
2015 2017
Bachelor of Commerce
University of Mumbai
2012 2015

2025-06-13 12:06:26 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\"Lead Generation\", \"Digital Marketing\", \"CRM Management\", \"Campaign Strategy\", \"Analytics\"],\n  \"soft_skills\": [\"Client Relationship Management\", \"Strategic Partnerships\", \"Negotiation\"],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Marketing)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\"Google Ads Certified Professional\", \"HubSpot Inbound Marketing\", \"Salesforce Administrator\"],\n  \"industries\": [\"Digital Solutions\", \"Reliance Industries\", \"Information Technology\"],\n  \"programming_languages\": [],\n  \"frameworks\": [],\n  \"tools\": [\"CRM system\"],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.\",\n    \"Managed ₹50 lakh annual marketing budget with 35% ROI improvement.\",\n    \"Executed social media strategies achieving 2M+ followers across platforms.\"\n  ],\n  \"summary\": \"Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market. Specializes in digital marketing strategies and B2B sales. Proven track record of increasing revenue and expanding market presence.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":722,"outputTokens":299,"totalTokens":1021}}
2025-06-13 12:06:26 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": ["Lead Generation", "Digital Marketing", "CRM Management", "Campaign Strategy", "Analytics"],
  "soft_skills": ["Client Relationship Management", "Strategic Partnerships", "Negotiation"],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Marketing)",
  "years_of_experience": 7,
  "certifications": ["Google Ads Certified Professional", "HubSpot Inbound Marketing", "Salesforce Administrator"],
  "industries": ["Digital Solutions", "Reliance Industries", "Information Technology"],
  "programming_languages": [],
  "frameworks": [],
  "tools": ["CRM system"],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.",
    "Managed ₹50 lakh annual marketing budget with 35% ROI improvement.",
    "Executed social media strategies achieving 2M+ followers across platforms."
  ],
  "summary": "Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market. Specializes in digital marketing strategies and B2B sales. Proven track record of increasing revenue and expanding market presence."
}
```
2025-06-13 12:06:26 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 12:06:26 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Processed candidate: Priya Sharma - Sales & Marketing Professional.pdf with ID: 48e85790-f8b8-40a3-bd69-2e968688c3a0
2025-06-13 12:06:26 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Priya Sharma - Sales & Marketing Professional.pdf (ID: 48e85790-f8b8-40a3-bd69-2e968688c3a0) in 12049ms
2025-06-13 12:06:26 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:06:26 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Priya Sharma - Sales & Marketing Professional.pdf, success=true, extractedData={experience (truncated)...]
2025-06-13 12:06:26 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:06:27 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:06:27 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:06:27 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Processing resume upload: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 12:06:32 [http-nio-8081-exec-3] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/7cf765c3-463f-4d5c-9f42-47999a603ac4-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 12:06:37 [http-nio-8081-exec-3] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/7cf765c3-463f-4d5c-9f42-47999a603ac4-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 12:06:37 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Rajesh Kumar
Demand Planning Specialist
rajesh kumar@email.com
+91 98765 54321
linkedin.com/in/rajeshkumar
T
Pune, Maharashtra, India
Professional Summary
Strategic Demand Planning professional with 8+ years of experience in supply chain
optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting,
inventory management, and S&OP processes with proven track record of improving forecast
accuracy by 45% and reducing inventory costs by ₹2.5 crores annually. Skilled in implementing
demand planning solutions for multi-location operations across India.
Professional Experience
O
Senior Demand Planning Manager
Apr 202 Present
Hindustan Unilever Limited
Lead demand planning for 800+ SKUs across North and West India regions
Improved forecast accuracy from 72% to 91% using advanced analytics and ML models
Reduced excess inventory by ₹1.8 crores through enhanced demand sensing
Led S&OP implementation across 8 manufacturing locations
Managed cross-functional teams of 15+ members across supply chain functions
Implemented SAP IBP resulting in 40% reduction in planning cycle time
Demand Planner
Jun 2019 Mar 2021
ITC Limited
Managed demand planning for cigarettes and FMCG portfolio worth ₹500 crores
Developed statistical models for seasonal demand patterns using R and Python
Collaborated with marketing teams for promotional planning and new product launches
Reduced stockout incidents by 35% through improved demand sensing
Created automated dashboards using Power BI for executive reporting
Supply Chain Analyst
Jul 2017 May 2019
Mahindra & Mahindra
Supported inventory optimization for automotive spare parts across 200+ dealers
Performed root cause analysis on forecast variances and implemented corrections
Created Excel-based planning tools reducing manual effort by 60%
Assisted in vendor collaboration initiatives improving supplier fill rates
Core Competencies
Planning & Forecasting
Technology & Tools
Statistical Forecasting
Demand Sensing
SAP IBP/APO
Oracle Demantra
Power BI
S&OP
Inventory Optimization
Advanced Excel
Python
R Programming
Collaborative Planning
Industry Knowledge
FMCG
Automotive
Manufacturing
Retail
Multi- location Ops
Education & Certifications
Master of Business Administration (Operations)
Indian Institute of Management, Kozhikode
2015 2017
Bachelor of Engineering (Mechanical)
Pune University
2011 2015
Certifications
APICS SCOR Certified CPIM Certified SAP IBP Certification Six Sigma Green Belt

2025-06-13 12:06:42 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Statistical Forecasting\",\n    \"Demand Sensing\",\n    \"Inventory Optimization\",\n    \"Advanced Excel\",\n    \"Python\",\n    \"R Programming\",\n    \"SAP IBP\",\n    \"Oracle Demantra\",\n    \"Power BI\",\n    \"S&OP\"\n  ],\n  \"soft_skills\": [\n    \"Collaborative Planning\",\n    \"Team Management\",\n    \"Vendor Collaboration\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Operations)\",\n  \"years_of_experience\": 8,\n  \"certifications\": [\n    \"APICS SCOR Certified\",\n    \"CPIM Certified\",\n    \"SAP IBP Certification\",\n    \"Six Sigma Green Belt\"\n  ],\n  \"industries\": [\n    \"FMCG\",\n    \"Automotive\",\n    \"Manufacturing\",\n    \"Retail\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R Programming\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"SAP IBP\",\n    \"Oracle Demantra\",\n    \"Power BI\",\n    \"Advanced Excel\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Improved forecast accuracy from 72% to 91% using advanced analytics and ML models\",\n    \"Reduced excess inventory by ₹1.8 crores through enhanced demand sensing\",\n    \"Reduced stockout incidents by 35% through improved demand sensing\"\n  ],\n  \"summary\": \"Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with proven track record of improving forecast accuracy by 45% and reducing inventory costs by ₹2.5 crores annually.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":775,"outputTokens":458,"totalTokens":1233}}
2025-06-13 12:06:42 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Statistical Forecasting",
    "Demand Sensing",
    "Inventory Optimization",
    "Advanced Excel",
    "Python",
    "R Programming",
    "SAP IBP",
    "Oracle Demantra",
    "Power BI",
    "S&OP"
  ],
  "soft_skills": [
    "Collaborative Planning",
    "Team Management",
    "Vendor Collaboration"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Operations)",
  "years_of_experience": 8,
  "certifications": [
    "APICS SCOR Certified",
    "CPIM Certified",
    "SAP IBP Certification",
    "Six Sigma Green Belt"
  ],
  "industries": [
    "FMCG",
    "Automotive",
    "Manufacturing",
    "Retail"
  ],
  "programming_languages": [
    "Python",
    "R Programming"
  ],
  "frameworks": [],
  "tools": [
    "SAP IBP",
    "Oracle Demantra",
    "Power BI",
    "Advanced Excel"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Improved forecast accuracy from 72% to 91% using advanced analytics and ML models",
    "Reduced excess inventory by ₹1.8 crores through enhanced demand sensing",
    "Reduced stockout incidents by 35% through improved demand sensing"
  ],
  "summary": "Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with proven track record of improving forecast accuracy by 45% and reducing inventory costs by ₹2.5 crores annually."
}
```
2025-06-13 12:06:42 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 12:06:42 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Processed candidate: Rajesh Kumar - Demand Planning Specialist.pdf with ID: adf7ebf0-9ec7-4b92-a54b-833efd37b357
2025-06-13 12:06:42 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rajesh Kumar - Demand Planning Specialist.pdf (ID: adf7ebf0-9ec7-4b92-a54b-833efd37b357) in 15274ms
2025-06-13 12:06:42 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:06:42 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rajesh Kumar - Demand Planning Specialist.pdf, success=true, extractedData={experienceLeve (truncated)...]
2025-06-13 12:06:42 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:06:44 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:06:44 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:06:44 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Processing resume upload: Rohit Gupta - Angular Developer.pdf
2025-06-13 12:06:48 [http-nio-8081-exec-4] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/e595a61c-f710-4d81-86e3-2bb11390ca13-Rohit Gupta - Angular Developer.pdf
2025-06-13 12:06:55 [http-nio-8081-exec-4] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/e595a61c-f710-4d81-86e3-2bb11390ca13-Rohit Gupta - Angular Developer.pdf
2025-06-13 12:06:55 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
hit Gupta
per & Frontend Specialist
+91 99876 54321
A linkedin.com/in/rohitgupta
github.com/rohitgupta
Delhi. India
I
PROFESSIONAL SUMMARY
TECHNICAL
EXPERTISE
Experienced Angular Developer with 4+ years of
ANGULAR FRAMEWORK
expertise in building dynamic, responsive web
applications using Angular framework and
Angular
Angular 1
TypeScript. Proficient in creating scalable frontend
Angular
Angular CLI
solutions with RxJS, NgRx state management, and
Angula Router
modern UI libraries. Strong background in integrating
RESTful APIs, implementing unit testing with Jasmine
and Karma, and optimizing application performance.
CORE TECHNOLOGIES
Passionate about clean code, user experience, and
TypeScript
JavaScript
staying updated with latest Angular trends and best
practices.
HTML5 CSS3
STATE MANAGEMENT
T
PROFESSIONAL EXPERIENCE
NgRx RxJ
Observable
Reactive Programming
Senior Angular Developer
HCL Technologies
Feb 2022 Present
UI LIBRARIES
Angular
TypeScript
RxJS
NgRx
ingula Material
Bootstra
Angular Material
Jasmine Karma REST APIs
Chart.j
PrimeNG
. Developed enterprise banking applications using Angular
15+ and TypeScript with 99 9% uptime
.
Implemented state management using NgR> for complex
TESTING APIS
application state handling
Jasmine
Karma
. Built reusable components using Angular Material and
custom UI libraries
REST
Integrated RESTful APIs and handled asynchronous
WebSocke
Socket.ic
operations using Rx1S observables
Achieved 95% code coverage through comprehensive unit
testing with Jasmine and Karma
TOOLS OTHERS
Optimized application performance resulting 40% faster
page load times
VS Code
Mentored junior developers Angular best practices
Webpack
and code review processes
EDUCATION
Angular Developer
Tech Mahindra
Jun 2021 2022
Bachelor of Technology
Angular 12
TypeScript
Bootstrap
Chart.js
(Computer Science)
HTTP Client
Forms
Delhi Technological University
2016-2020
. Built responsive dashboard applications using Angular 12
and Bootstrap framework
.
Created interactive data visualizations using Chart.js and
Angular integration
CERTIFICATIONS
Implemented reactive forms and template-driven forms
for data collection
Angular Certified Developer
Consumed REST APIs using Angular HTTP Client and
handled error scenarios
TypeScript Professional
Collaborated with UX/UI teams to implement pixel perfect
designs
NgRx State Management
Participated agile development cycles with daily
standups and sprint planning
Rx1S Reactive Programming
Frontend Web Development
Frontend Developer
Angular Testing with Jasmine
Cognizant Technology
Aug 2020 May
Solutions
2021
LANGUAGES
Angular
JavaScript
HTML5
CSS3
SCSS
Gi
Hindi: Native
English: Fluent
.
Developed customer facing web applications using
Angular 10 and modern JavaScript
Punjabi: Conversational
Created responsive layouts using HTML5, CSS3, and SCSS
preprocessor
INTERESTS
Implemented routing and navigation using Angular Router
Worked with version control using Git and collaborated in
Frontend Architectur Angular
team environments
Updates Open Source Contributing
Fixed bugs and implemented feature enhancements
. Tech Blogging UI/UX Design
based on client requirements
FEATURED PROJECTS
Banking Dashboard
E-Commerce Admin
System
Panel
Angular
NgRx
Angular 12
Angular Material
TypeScript
Bootstrap
Chart.js
RxJS
REST APIs
Forms
Developed comprehensive
Built admin panel e
banking dashboard using
commerce management
Angular with NgRx for
using Angular 12 and
state management
TypeScript Implemented
Integrated Angular Material
Bootstrap responsive
components consistent
design integrated REST
UI and Chart.j for financial
APIs data operations,
data visualization Used
and created complex forms
RxJS handling complex
for product and inventory
asynchronous operations
management
and real-time updates.
Task Management
Real-time Chat
Application
Interface
Angular
Jasmine
Angula Socket.ig
Karma
HTTP Client
SCSS WebSocket
Local Storage
Reactive Forms
Created task management
Developed real-time chat
app using Angular 10 with
application using Angular 14
local storage data
and Socket.ic WebSocket
persistence. Implemented
communication Styled with
comprehensive unit testing
SCSS custom
with Jasmine and Karma.
animations impleme nted
used HTTP Client for API
reactive forms message
integration and built drag
input. and handled real time
and-drop functionality for
message updates efficiently
task organization

2025-06-13 12:07:01 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Angular\",\n    \"Angular 1\",\n    \"Angular CLI\",\n    \"Angular Router\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\",\n    \"NgRx\",\n    \"RxJS\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"Chart.js\",\n    \"PrimeNG\",\n    \"Jasmine\",\n    \"Karma\",\n    \"REST APIs\",\n    \"WebSocket\",\n    \"Socket.io\",\n    \"HTTP Client\",\n    \"Forms\",\n    \"Reactive Forms\",\n    \"Local Storage\",\n    \"Git\",\n    \"VS Code\",\n    \"Webpack\"\n  ],\n  \"soft_skills\": [\n    \"Mentoring\",\n    \"Collaboration\",\n    \"Agile development\",\n    \"Team environments\"\n  ],\n  \"experience_level\": \"MID\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 4,\n  \"certifications\": [\n    \"Angular Certified Developer\",\n    \"TypeScript Professional\",\n    \"NgRx State Management\",\n    \"RxJS Reactive Programming\",\n    \"Frontend Web Development\",\n    \"Angular Testing with Jasmine\"\n  ],\n  \"industries\": [\n    \"IT\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"TypeScript\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\"\n  ],\n  \"frameworks\": [\n    \"Angular\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"PrimeNG\",\n    \"NgRx\",\n    \"RxJS\"\n  ],\n  \"tools\": [\n    \"VS Code\",\n    \"Webpack\",\n    \"Git\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime\",\n    \"Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma\",\n    \"Optimized application performance resulting in 40% faster page load times\"\n  ],\n  \"summary\": \"Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular framework, TypeScript, RxJS, and NgRx state management. Passionate about clean code and user experience.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1267,"outputTokens":606,"totalTokens":1873}}
2025-06-13 12:07:01 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Angular",
    "Angular 1",
    "Angular CLI",
    "Angular Router",
    "TypeScript",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS",
    "NgRx",
    "RxJS",
    "Angular Material",
    "Bootstrap",
    "Chart.js",
    "PrimeNG",
    "Jasmine",
    "Karma",
    "REST APIs",
    "WebSocket",
    "Socket.io",
    "HTTP Client",
    "Forms",
    "Reactive Forms",
    "Local Storage",
    "Git",
    "VS Code",
    "Webpack"
  ],
  "soft_skills": [
    "Mentoring",
    "Collaboration",
    "Agile development",
    "Team environments"
  ],
  "experience_level": "MID",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 4,
  "certifications": [
    "Angular Certified Developer",
    "TypeScript Professional",
    "NgRx State Management",
    "RxJS Reactive Programming",
    "Frontend Web Development",
    "Angular Testing with Jasmine"
  ],
  "industries": [
    "IT",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "TypeScript",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS"
  ],
  "frameworks": [
    "Angular",
    "Angular Material",
    "Bootstrap",
    "PrimeNG",
    "NgRx",
    "RxJS"
  ],
  "tools": [
    "VS Code",
    "Webpack",
    "Git"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime",
    "Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma",
    "Optimized application performance resulting in 40% faster page load times"
  ],
  "summary": "Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular framework, TypeScript, RxJS, and NgRx state management. Passionate about clean code and user experience."
}
```
2025-06-13 12:07:01 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rohit Gupta - Angular Developer.pdf
2025-06-13 12:07:01 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Processed candidate: Rohit Gupta - Angular Developer.pdf with ID: 43c93f43-92bd-4a47-9cb0-a2fac7d49783
2025-06-13 12:07:01 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rohit Gupta - Angular Developer.pdf (ID: 43c93f43-92bd-4a47-9cb0-a2fac7d49783) in 17049ms
2025-06-13 12:07:01 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:07:01 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rohit Gupta - Angular Developer.pdf, success=true, extractedData={experienceLevel=MID, ski (truncated)...]
2025-06-13 12:07:01 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:07:05 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 12:07:05 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 12:07:05 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 12:07:05 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:07:05 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@57ed29c4, com.hackathon.hr.model.Candidate@253fe33, com.hackathon. (truncated)...]
2025-06-13 12:07:05 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 12:08:17 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 4 (Java Backend Developer)
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Java Backend Developer
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Java Backend Developer
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Anjali Patel - Data Analyst.pdf and job Java Backend Developer
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 49.0 for candidate Karan Singh - DevOps Engineer.pdf and job Java Backend Developer
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 59.0 for candidate Arjun Singh - Software Developer.pdf and job Java Backend Developer
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 69.0 for candidate Deepika Reddy - Java Developer.pdf and job Java Backend Developer
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Rohit Gupta - Angular Developer.pdf and job Java Backend Developer
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Java Backend Developer
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Java Backend Developer
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Java Backend Developer
2025-06-13 12:08:17 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Java Backend Developer
2025-06-13 12:08:17 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 4 in 42ms
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=4, success=true, totalCandidates=10, jobTitle=Java Backend Developer, matchCount=10, matches= (truncated)...]
2025-06-13 12:08:17 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 12:08:30 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 2 (Data Analyst - Tech & Analytics)
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 57.54545454545455 for candidate Mei Chen - Marketing Analyst.pdf and job Data Analyst - Tech & Analytics
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.63636363636364 for candidate Anjali Patel - Data Analyst.pdf and job Data Analyst - Tech & Analytics
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Karan Singh - DevOps Engineer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 53.90909090909091 for candidate Arjun Singh - Software Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Deepika Reddy - Java Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Rohit Gupta - Angular Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Data Analyst - Tech & Analytics
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 46.63636363636364 for candidate Kavya Nair - Full Stack Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.27272727272727 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Data Analyst - Tech & Analytics
2025-06-13 12:08:30 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Data Analyst - Tech & Analytics
2025-06-13 12:08:30 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 2 in 2ms
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=2, success=true, totalCandidates=10, jobTitle=Data Analyst - Tech & Analytics, matchCount=10, (truncated)...]
2025-06-13 12:08:30 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 12:08:51 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 1 (Junior Frontend Developer)
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 90.72727272727272 for candidate Aarav Sharma - Junior Developer.pdf and job Junior Frontend Developer
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Junior Frontend Developer
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Anjali Patel - Data Analyst.pdf and job Junior Frontend Developer
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.63636363636364 for candidate Karan Singh - DevOps Engineer.pdf and job Junior Frontend Developer
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 64.81818181818181 for candidate Arjun Singh - Software Developer.pdf and job Junior Frontend Developer
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.63636363636364 for candidate Deepika Reddy - Java Developer.pdf and job Junior Frontend Developer
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 64.81818181818181 for candidate Rohit Gupta - Angular Developer.pdf and job Junior Frontend Developer
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Junior Frontend Developer
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 72.0909090909091 for candidate Kavya Nair - Full Stack Developer.pdf and job Junior Frontend Developer
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Junior Frontend Developer
2025-06-13 12:08:51 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Junior Frontend Developer
2025-06-13 12:08:51 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 1 in 3ms
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=1, success=true, totalCandidates=10, jobTitle=Junior Frontend Developer, matchCount=10, match (truncated)...]
2025-06-13 12:08:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 12:09:05 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 8 (Senior Marketing Manager - Digital)
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Senior Marketing Manager - Digital
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Mei Chen - Marketing Analyst.pdf and job Senior Marketing Manager - Digital
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Anjali Patel - Data Analyst.pdf and job Senior Marketing Manager - Digital
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Karan Singh - DevOps Engineer.pdf and job Senior Marketing Manager - Digital
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Arjun Singh - Software Developer.pdf and job Senior Marketing Manager - Digital
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Deepika Reddy - Java Developer.pdf and job Senior Marketing Manager - Digital
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Rohit Gupta - Angular Developer.pdf and job Senior Marketing Manager - Digital
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 78.85714285714286 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Senior Marketing Manager - Digital
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Senior Marketing Manager - Digital
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 56.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Senior Marketing Manager - Digital
2025-06-13 12:09:05 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Senior Marketing Manager - Digital
2025-06-13 12:09:05 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 8 in 4ms
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=8, success=true, totalCandidates=10, jobTitle=Senior Marketing Manager - Digital, matchCount= (truncated)...]
2025-06-13 12:09:05 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 12:09:16 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 10 (Senior Angular Developer)
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 36.888888888888886 for candidate Aarav Sharma - Junior Developer.pdf and job Senior Angular Developer
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Senior Angular Developer
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Anjali Patel - Data Analyst.pdf and job Senior Angular Developer
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Karan Singh - DevOps Engineer.pdf and job Senior Angular Developer
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.888888888888886 for candidate Arjun Singh - Software Developer.pdf and job Senior Angular Developer
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Deepika Reddy - Java Developer.pdf and job Senior Angular Developer
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 98.0 for candidate Rohit Gupta - Angular Developer.pdf and job Senior Angular Developer
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Senior Angular Developer
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 56.33333333333333 for candidate Kavya Nair - Full Stack Developer.pdf and job Senior Angular Developer
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Senior Angular Developer
2025-06-13 12:09:16 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Senior Angular Developer
2025-06-13 12:09:16 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 10 in 3ms
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=10, success=true, totalCandidates=10, jobTitle=Senior Angular Developer, matchCount=10, match (truncated)...]
2025-06-13 12:09:16 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 12:09:25 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 4 (Java Backend Developer)
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Java Backend Developer
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Java Backend Developer
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Anjali Patel - Data Analyst.pdf and job Java Backend Developer
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 49.0 for candidate Karan Singh - DevOps Engineer.pdf and job Java Backend Developer
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 59.0 for candidate Arjun Singh - Software Developer.pdf and job Java Backend Developer
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 69.0 for candidate Deepika Reddy - Java Developer.pdf and job Java Backend Developer
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Rohit Gupta - Angular Developer.pdf and job Java Backend Developer
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Java Backend Developer
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Java Backend Developer
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Java Backend Developer
2025-06-13 12:09:25 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Java Backend Developer
2025-06-13 12:09:25 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 4 in 1ms
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=4, success=true, totalCandidates=10, jobTitle=Java Backend Developer, matchCount=10, matches= (truncated)...]
2025-06-13 12:09:25 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 12:09:45 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 7 (Marketing Data Analyst)
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Marketing Data Analyst
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 78.0 for candidate Mei Chen - Marketing Analyst.pdf and job Marketing Data Analyst
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 50.0 for candidate Anjali Patel - Data Analyst.pdf and job Marketing Data Analyst
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Karan Singh - DevOps Engineer.pdf and job Marketing Data Analyst
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.0 for candidate Arjun Singh - Software Developer.pdf and job Marketing Data Analyst
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Deepika Reddy - Java Developer.pdf and job Marketing Data Analyst
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Rohit Gupta - Angular Developer.pdf and job Marketing Data Analyst
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Marketing Data Analyst
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Marketing Data Analyst
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Marketing Data Analyst
2025-06-13 12:09:45 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Marketing Data Analyst
2025-06-13 12:09:45 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 7 in 1ms
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=7, success=true, totalCandidates=10, jobTitle=Marketing Data Analyst, matchCount=10, matches= (truncated)...]
2025-06-13 12:09:45 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 12:10:02 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 4 (Java Backend Developer)
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Java Backend Developer
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Java Backend Developer
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Anjali Patel - Data Analyst.pdf and job Java Backend Developer
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 49.0 for candidate Karan Singh - DevOps Engineer.pdf and job Java Backend Developer
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 59.0 for candidate Arjun Singh - Software Developer.pdf and job Java Backend Developer
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 69.0 for candidate Deepika Reddy - Java Developer.pdf and job Java Backend Developer
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Rohit Gupta - Angular Developer.pdf and job Java Backend Developer
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Java Backend Developer
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Java Backend Developer
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Java Backend Developer
2025-06-13 12:10:02 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Java Backend Developer
2025-06-13 12:10:02 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 4 in 1ms
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=4, success=true, totalCandidates=10, jobTitle=Java Backend Developer, matchCount=10, matches= (truncated)...]
2025-06-13 12:10:02 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:10:15 [RMI TCP Connection(17)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 12:10:15 [RMI TCP Connection(17)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 12:10:15 [RMI TCP Connection(17)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 12:10:33 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 72783 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 12:10:33 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 12:10:33 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 12:10:33 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 12:10:33 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 12:10:35 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 12:10:35 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 12:10:35 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 12:10:35 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 12:10:35 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1701 ms
2025-06-13 12:10:37 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 12:10:37 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 12:10:37 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 12:10:37 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 12:10:37 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 19 mappings in 'requestMappingHandlerMapping'
2025-06-13 12:10:37 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 12:10:37 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 12:10:37 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 12:10:37 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 12:10:37 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.573 seconds (JVM running for 5.721)
2025-06-13 12:10:45 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 12:10:45 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@26994c32
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4e2d2b34
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 12:10:45 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@17ca0af8
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2a325826
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@78db76dc
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 12:10:45 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:10:46 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 12:10:46 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 12:10:46 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 12:10:46 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 12:10:46 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 12:10:46 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 12:10:46 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:10:46 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:10:46 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@509e6f90, com.hackathon.hr.model.JobRequirement@78dfe85d, com (truncated)...]
2025-06-13 12:10:46 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 12:10:46 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:10:46 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:11:01 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 12:11:01 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 12:11:01 [http-nio-8081-exec-4] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 12:11:01 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 12:11:01 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 12:11:01 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 12:11:01 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:11:01 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 12:11:01 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 12:11:01 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 12:11:03 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 12:11:03 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 12:11:03 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 12:11:03 [http-nio-8081-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 12:11:03 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:11:03 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 12:11:03 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/matching.js", parameters={}
2025-06-13 12:11:03 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 12:11:03 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/upload.js", parameters={}
2025-06-13 12:11:03 [http-nio-8081-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 12:11:03 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 12:11:03 [http-nio-8081-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 12:11:03 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 12:11:03 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/candidates.js", parameters={}
2025-06-13 12:11:03 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:11:03 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:11:03 [http-nio-8081-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 12:11:03 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:11:03 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:11:03 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:11:03 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 12:11:03 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 12:11:03 [http-nio-8081-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 12:11:03 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 12:11:03 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 12:11:03 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 12:11:03 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:11:03 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 12:11:03 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 12:11:03 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 12:11:04 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 12:11:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 12:11:04 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 12:11:04 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 12:11:04 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 12:11:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:11:04 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 12:11:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@509e6f90, com.hackathon.hr.model.JobRequirement@78dfe85d, com (truncated)...]
2025-06-13 12:11:04 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:11:04 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 12:11:04 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:11:04 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:11:04 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 12:11:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 12:11:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 12:11:04 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 12:11:04 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 12:11:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 12:11:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:11:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 12:11:04 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 12:11:04 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 12:11:24 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:11:24 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:11:24 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Processing resume upload: Aarav Sharma - Junior Developer.pdf
2025-06-13 12:11:28 [http-nio-8081-exec-5] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/1c364c2e-ed36-46d6-b6fa-06115081a4d2-Aarav Sharma - Junior Developer.pdf
2025-06-13 12:11:34 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/1c364c2e-ed36-46d6-b6fa-06115081a4d2-Aarav Sharma - Junior Developer.pdf
2025-06-13 12:11:34 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Aarav Sharma
Junior Software Developer
aarav.sharma@email.com
+91 98765 43210
linkedin.com/in/aaravsharma
github .com/aaravsharma
Jaipur, Rajasthan, India
Professional Summary
Technical Skills
Enthusiastic Junior Software Developer with 2+ years
FRONTEND
of experience in web development using modern
HTML5
CSS3
JavaScript
React
technologies. Passionate about creating clean,
efficient code and building user-friendly applications.
Bootstrap
Strong foundation in JavaScript, React, and Node is
BACKEND
with hands-on experience in full-stack development
Node.j
Express
PHP
REST APIs
projects. Eager to contribute to innovative software
solutions and grow within a dynamic development
DATABASES
team.
MongoDB
MySQL
TOOLS TECHNOLOGIES
Git GitHub
VS Code
Postman
Professional Experience
JWT
APIS INTEGRATIONS
Junior Software Developer
TechStart Solutions Pvt Ltd
Jun 2022 Present
Stripe API
Local Storage
JavaScript React Node.js MongoDB Express.js Git
Education
Developed responsive web applications using React and
JavaScript ES6+
Bachelor of Computer
Built REST APIs using Node js and Express js serving
10,000+ daily requests
Applications (BCA)
University of Rajasthan
Implemented user authentication and authorization using
2019 - 2022
JWT tokens
Collaborated with senior developers using Git for version
control and code reviews
Certifications
Optimized database queries in MongoDB reducing
.
response time by 25%
JavaScript Fundamentals freeCodeCamp
.
React Developer Course Udemy
Participated in agile development cycles with daily
.
Node js Certification Coursera
standups and sprint planning
.
Git Version Control Codecademy
Languages
Hindi: Native
Web Development Intern
English: Fluent
Digital Innovators
Jan 2022 May 2022
Rajasthani: Native
HTML5 CSS3 JavaScript Bootstrap MySQL
Created static websites using HTML5, CSS3, and
Bootstrap framework
Implemented interactive features using vanilla JavaScript
Assisted in maintaining MySQL databases and writing
basic SQL queries
Fixed UI bugs and improved cross-browser compatibility
Learned modern development practices and coding
standards
Key Projects
E-Commerce Shopping Platform
React
Node.j
Express
MongoDB
JWT
Stripe API
Built full-stack e-commerce application with React frontend
and Node js backend Implemented user authentication using
JWT. integrated Stripe payment gateway, and created admin
dashboard for inventory management. Used MongoDB for
data storage and Express js for API development.
Task Management System
JavaScript
React
Local Storage
CSS3
Bootstrap
Developed a responsive task management application using
React and JavaScript. Features include task creation, editing,
deletion. and status tracking. Implemented local storage for
data persistence and used Bootstrap for responsive design
across devices.
Restaurant Website
HTML5
CSS3
JavaScript
MySQL
PHP
Created dynamic restaurant website with online reservation
system. Used HTML5 and CSS3 for layout and styling,
JavaScript for interactive features, and PHP with MySQL for
backend functionality including reservation management and
menu display.

2025-06-13 12:11:40 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"HTML5\",\n    \"CSS3\",\n    \"JavaScript\",\n    \"React\",\n    \"Bootstrap\",\n    \"Node.js\",\n    \"Express\",\n    \"PHP\",\n    \"REST APIs\",\n    \"MongoDB\",\n    \"MySQL\",\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\",\n    \"JWT\",\n    \"Stripe API\",\n    \"Local Storage\",\n    \"JavaScript ES6+\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Communication\",\n    \"Problem-solving\",\n    \"Adaptability\"\n  ],\n  \"experience_level\": \"ENTRY\",\n  \"education\": \"Bachelor of Computer Applications (BCA)\",\n  \"years_of_experience\": 2,\n  \"certifications\": [\n    \"JavaScript Fundamentals - freeCodeCamp\",\n    \"React Developer Course - Udemy\",\n    \"Node.js Certification - Coursera\",\n    \"Git Version Control - Codecademy\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"Web Development\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"Node.js\",\n    \"PHP\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Bootstrap\",\n    \"Express\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Built REST APIs using Node.js and Express.js serving 10,000+ daily requests\",\n    \"Optimized database queries in MongoDB reducing response time by 25%\",\n    \"Implemented user authentication and authorization using JWT tokens\"\n  ],\n  \"summary\": \"Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":920,"outputTokens":537,"totalTokens":1457}}
2025-06-13 12:11:40 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "HTML5",
    "CSS3",
    "JavaScript",
    "React",
    "Bootstrap",
    "Node.js",
    "Express",
    "PHP",
    "REST APIs",
    "MongoDB",
    "MySQL",
    "Git",
    "GitHub",
    "VS Code",
    "Postman",
    "JWT",
    "Stripe API",
    "Local Storage",
    "JavaScript ES6+"
  ],
  "soft_skills": [
    "Collaboration",
    "Communication",
    "Problem-solving",
    "Adaptability"
  ],
  "experience_level": "ENTRY",
  "education": "Bachelor of Computer Applications (BCA)",
  "years_of_experience": 2,
  "certifications": [
    "JavaScript Fundamentals - freeCodeCamp",
    "React Developer Course - Udemy",
    "Node.js Certification - Coursera",
    "Git Version Control - Codecademy"
  ],
  "industries": [
    "Software Development",
    "Web Development"
  ],
  "programming_languages": [
    "JavaScript",
    "Node.js",
    "PHP"
  ],
  "frameworks": [
    "React",
    "Bootstrap",
    "Express"
  ],
  "tools": [
    "Git",
    "GitHub",
    "VS Code",
    "Postman"
  ],
  "databases": [
    "MongoDB",
    "MySQL"
  ],
  "cloud_platforms": [],
  "key_achievements": [
    "Built REST APIs using Node.js and Express.js serving 10,000+ daily requests",
    "Optimized database queries in MongoDB reducing response time by 25%",
    "Implemented user authentication and authorization using JWT tokens"
  ],
  "summary": "Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects."
}
```
2025-06-13 12:11:40 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Aarav Sharma - Junior Developer.pdf
2025-06-13 12:11:40 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Processed candidate: Aarav Sharma - Junior Developer.pdf with ID: 51a0ff68-a682-43e0-9b4d-3fe42383a2a6
2025-06-13 12:11:40 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Aarav Sharma - Junior Developer.pdf (ID: 51a0ff68-a682-43e0-9b4d-3fe42383a2a6) in 15620ms
2025-06-13 12:11:40 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:11:40 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Aarav Sharma - Junior Developer.pdf, success=true, extractedData={experienceLevel=ENTRY, s (truncated)...]
2025-06-13 12:11:40 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:11:41 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:11:41 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:11:41 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Processing resume upload: Anjali Patel - Data Analyst.pdf
2025-06-13 12:11:48 [http-nio-8081-exec-9] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/01cfe3e8-acdd-4960-8d11-05831438b2e6-Anjali Patel - Data Analyst.pdf
2025-06-13 12:11:56 [http-nio-8081-exec-9] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/01cfe3e8-acdd-4960-8d11-05831438b2e6-Anjali Patel - Data Analyst.pdf
2025-06-13 12:11:56 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Pater
S Intelligence Specialist
anjali.patel@email.com
+91 97845 62310
linkedin.com/in/anjalipate
Bangalore, Karnataka, India
Professional Summary
Technical Skills
Innovative Data Analyst with 6+ years of experience in
transforming complex datasets into strategic business
Programming
insights for Indian tech startups and MNCs. Expert in
Python
R
SQL
Java
Scala
machine learning, statistical modeling, and data
visualization with proven track record of improving
business efficiency by 50% and reducing costs by
Databases
₹30 lakh annually through data-driven
recommendations.
MySQL
PostgreSQL
MongoDB
Cassandra
Snowflake
Professional Experience
Analytics & ML
Senior Data Analyst
Pandas
NumPy
Scikit-learn
TensorFlow
Flipkart Group
Feb 2022 Present
Statistical Modeling
Developed ML models for customer behavior analysis
processing 10M+ transactions daily
Created automated dashboards reducing reporting time by
Visualization
70% for 15+ stakeholders
Led data quality initiatives improving accuracy by 95%
Tableau
Power B
matplotlib
seaborn
across e-commerce platform
D3.js
Implemented A/B testing framework increasing conversion
rates by 28%
Built recommendation engines improving customer
engagement by 35%
Cloud Platforms
AWS
Azure
GCP
Spark
Hadoop
Data Analyst
Infosys Limited
Jun 2020 Jan 2022
Analyzed financial data for global banking clients using
Python and SQL
Developed predictive models for fraud detection with 92%
Key Projects
accuracy
Created Power BI dashboards for C-level executives and
stakeholders
E-commerce Customer Segmentation
Optimized database queries improving performance by
Built ML clustering model using K-means and RFM
45%
analysis to segment 5M+ customers, enabling
personalized marketing campaigns with 40% higher
conversion rates.
Junior Data Analyst
Tata Consultancy Services
Jul 2018 May 2020
Real-time Fraud Detection System
Supported market research analysis for retail and
Developed ensemble learning model combining
healthcare clients
Random Forest and XGBoost achieving 94% accuracy
Developed Excel-based models for financial forecasting
in detecting fraudulent transactions for fintech
and budgeting
application.
Assisted in data migration projects and quality assurance
testing
Supply Chain Optimization Dashboard
Created interactive Tableau dashboard tracking 50+
KPIs across inventory, logistics, and vendor
performance, reducing operational costs by ₹25 lakh
annually.
Education
Master of Technology (Computer Science)
Indian Institute of Technology, Bombay
Certifications
2016 2018
AWS Certified Data Analytics Specialty (2024)
Bachelor of Engineering (Information
Technology)
Google Professional Data Engineer (2023)
Gujarat Technological University
2012 2016
Microsoft Azure Data Scientist Associate (2023)
Tableau Desktop Certified Professional (2022)
Google Analytics Individual Qualification (2022)
Languages
Hindi (Native)
English (Fluent)
Gujarati (Native)
Tamil (Conversational)

2025-06-13 12:12:03 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Machine Learning\",\n    \"Statistical Modeling\",\n    \"Data Visualization\",\n    \"Data Quality Initiatives\",\n    \"A/B Testing\",\n    \"Recommendation Engines\",\n    \"Predictive Modeling\",\n    \"Database Query Optimization\",\n    \"Financial Forecasting\",\n    \"Budgeting\",\n    \"Data Migration\",\n    \"Quality Assurance\"\n  ],\n  \"soft_skills\": [\n    \"Innovative\",\n    \"Analytical\",\n    \"Leadership\",\n    \"Communication\",\n    \"Problem-solving\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Technology (Computer Science)\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"AWS Certified Data Analytics Specialty (2024)\",\n    \"Google Professional Data Engineer (2023)\",\n    \"Microsoft Azure Data Scientist Associate (2023)\",\n    \"Tableau Desktop Certified Professional (2022)\",\n    \"Google Analytics Individual Qualification (2022)\"\n  ],\n  \"industries\": [\n    \"Tech Startups\",\n    \"MNCs\",\n    \"E-commerce\",\n    \"Global Banking\",\n    \"Retail\",\n    \"Healthcare\",\n    \"Fintech\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R\",\n    \"SQL\",\n    \"Java\",\n    \"Scala\"\n  ],\n  \"frameworks\": [\n    \"Pandas\",\n    \"NumPy\",\n    \"Scikit-learn\",\n    \"TensorFlow\",\n    \"Spark\",\n    \"Hadoop\"\n  ],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"Excel\",\n    \"matplotlib\",\n    \"seaborn\",\n    \"D3.js\"\n  ],\n  \"databases\": [\n    \"MySQL\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"Cassandra\",\n    \"Snowflake\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\",\n    \"GCP\"\n  ],\n  \"key_achievements\": [\n    \"Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.\",\n    \"Increased conversion rates by 28% by implementing an A/B testing framework.\",\n    \"Achieved 94% accuracy in detecting fraudulent transactions using an ensemble learning model.\"\n  ],\n  \"summary\": \"Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":934,"outputTokens":662,"totalTokens":1596}}
2025-06-13 12:12:03 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Machine Learning",
    "Statistical Modeling",
    "Data Visualization",
    "Data Quality Initiatives",
    "A/B Testing",
    "Recommendation Engines",
    "Predictive Modeling",
    "Database Query Optimization",
    "Financial Forecasting",
    "Budgeting",
    "Data Migration",
    "Quality Assurance"
  ],
  "soft_skills": [
    "Innovative",
    "Analytical",
    "Leadership",
    "Communication",
    "Problem-solving"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Technology (Computer Science)",
  "years_of_experience": 6,
  "certifications": [
    "AWS Certified Data Analytics Specialty (2024)",
    "Google Professional Data Engineer (2023)",
    "Microsoft Azure Data Scientist Associate (2023)",
    "Tableau Desktop Certified Professional (2022)",
    "Google Analytics Individual Qualification (2022)"
  ],
  "industries": [
    "Tech Startups",
    "MNCs",
    "E-commerce",
    "Global Banking",
    "Retail",
    "Healthcare",
    "Fintech"
  ],
  "programming_languages": [
    "Python",
    "R",
    "SQL",
    "Java",
    "Scala"
  ],
  "frameworks": [
    "Pandas",
    "NumPy",
    "Scikit-learn",
    "TensorFlow",
    "Spark",
    "Hadoop"
  ],
  "tools": [
    "Tableau",
    "Power BI",
    "Excel",
    "matplotlib",
    "seaborn",
    "D3.js"
  ],
  "databases": [
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Cassandra",
    "Snowflake"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure",
    "GCP"
  ],
  "key_achievements": [
    "Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.",
    "Increased conversion rates by 28% by implementing an A/B testing framework.",
    "Achieved 94% accuracy in detecting fraudulent transactions using an ensemble learning model."
  ],
  "summary": "Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency."
}
```
2025-06-13 12:12:03 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Anjali Patel - Data Analyst.pdf
2025-06-13 12:12:03 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Processed candidate: Anjali Patel - Data Analyst.pdf with ID: 8907d986-e5da-4642-a613-9ef8f4e4a404
2025-06-13 12:12:03 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Anjali Patel - Data Analyst.pdf (ID: 8907d986-e5da-4642-a613-9ef8f4e4a404) in 21697ms
2025-06-13 12:12:03 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:12:03 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Anjali Patel - Data Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, skil (truncated)...]
2025-06-13 12:12:03 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:12:04 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:12:04 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:12:04 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Processing resume upload: Arjun Singh - Software Developer.pdf
2025-06-13 12:12:08 [http-nio-8081-exec-1] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/217c483b-23bc-4a70-84f4-54b2d4472128-Arjun Singh - Software Developer.pdf
2025-06-13 12:12:17 [http-nio-8081-exec-1] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/217c483b-23bc-4a70-84f4-54b2d4472128-Arjun Singh - Software Developer.pdf
2025-06-13 12:12:17 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Professional Summary
Experienced Full Stack Software Developer with 7+ years of
expertise in building scalable web applications and
Arjun Singh
microservices for Indian tech companies and global clients.
Proficient in modern JavaScript frameworks, cloud
Full Stack Developer
technologies, and agile methodologies. Strong track record of
leading development teams and delivering high-quality
arjun.singh@email.com
software solutions that improved system performance by 60%
+91 94567 89012
and reduced deployment time by 45%.
linkedin.com/in/arjunsingh
github.com/arjunsingh
Professional Experience
T
Hyderabad, Telangana, India
Senior Software Developer
TECHNICAL SKILLS
Zomato Limited
Mar 2022 Present
Frontend
React Node.js TypeScript MongoDB Redis AWS Docker
PostgreSQL
Led development of real-time order tracking system serving
Redis
200K+ daily orders
- Built microservices architecture reducing API response time by
55%
LANGUAGES
- Implemented automated testing pipeline achieving 90% code
Hindi
Native
coverage
English
Fluent
- Mentored 4 junior developers and conducted code reviews
Punjabi
Native
Optimized database queries reducing server costs by ₹8 lakh
monthly
Telugu
Conversational
Software Developer
TOOLS & PLATFORMS
PayTM (One97 Communications)
Jan 2020 Feb 2022
Git Docker . Kubernetes Jenkins AWS
Azure Jira Slack vs Code Intelli]
Vue.js
Express.js
MySQL
Python
Django
Jenkins
IDEA Postman Webpack
- Developed payment gateway integration handling 100 crore+
daily transactions
- Created fraud detection algorithms reducing fraudulent
transactions by 40%
- Built responsive wallet interface used by 50M+ active users
- Implemented CI/CD pipelines reducing deployment time from 4
hours to 30 minutes
Junior Software Developer
Mindtree Limited
Jul 2018 Dec 2019
Angular Spring Boot PostgreSQU HTML5 CSS3
- Developed e-commerce modules for US retail client using Angular
and Spring Boot
- Created responsive UI components improving user experience by
35%
T Participated in agile development with 2-week sprint cycles
1 Fixed 200+ bugs and implemented 50+ feature enhancements
Key Projects
Food Delivery
Cryptocurrency
Platform
Trading Bot
Built end-to-end food
Developed automated
delivery platform with real-
trading bot using Python
time tracking, payment
and machine learning
integration, and restaurant
algorithms achieving 15%
management system using
monthly returns in
MERN stack.
backtesting.
React
Node.js
Python TensorFlow
MongoDB
Redis
Education
Bachelor of Technology (Computer Science
Engineering)
Indian Institute of Technology, Hyderabad
2014 2018
Certifications & Achievements
AWS Certified Solutions Architect Associate (2024)
Google Cloud Professional Developer (2023)
MongoDB Certified Developer (2022)
Scrum Master Certified (2021)
Winner Smart India Hackathon 2017 (Government of India)
Open Source Contributor 1000+ GitHub contributions

2025-06-13 12:12:23 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Node.js\",\n    \"TypeScript\",\n    \"MongoDB\",\n    \"Redis\",\n    \"AWS\",\n    \"Docker\",\n    \"PostgreSQL\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"MySQL\",\n    \"Python\",\n    \"Django\",\n    \"Jenkins\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"TensorFlow\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Agile Methodologies\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science Engineering)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect Associate\",\n    \"Google Cloud Professional Developer\",\n    \"MongoDB Certified Developer\",\n    \"Scrum Master Certified\"\n  ],\n  \"industries\": [\n    \"Technology\",\n    \"E-commerce\",\n    \"Finance\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"HTML5\",\n    \"CSS3\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Node.js\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"Django\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"AWS\",\n    \"Azure\",\n    \"Jira\",\n    \"Slack\",\n    \"VS Code\",\n    \"IntelliJ IDEA\",\n    \"Postman\",\n    \"Webpack\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"Redis\",\n    \"PostgreSQL\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\"\n  ],\n  \"key_achievements\": [\n    \"Improved system performance by 60% and reduced deployment time by 45%\",\n    \"Reduced API response time by 55% through microservices architecture\",\n    \"Reduced fraudulent transactions by 40% with fraud detection algorithms\"\n  ],\n  \"summary\": \"Experienced Full Stack Software Developer with 7+ years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Strong track record of leading development teams and delivering high-quality software solutions.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":937,"outputTokens":649,"totalTokens":1586}}
2025-06-13 12:12:23 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Node.js",
    "TypeScript",
    "MongoDB",
    "Redis",
    "AWS",
    "Docker",
    "PostgreSQL",
    "Vue.js",
    "Express.js",
    "MySQL",
    "Python",
    "Django",
    "Jenkins",
    "Angular",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "TensorFlow"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Agile Methodologies"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science Engineering)",
  "years_of_experience": 7,
  "certifications": [
    "AWS Certified Solutions Architect Associate",
    "Google Cloud Professional Developer",
    "MongoDB Certified Developer",
    "Scrum Master Certified"
  ],
  "industries": [
    "Technology",
    "E-commerce",
    "Finance"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "HTML5",
    "CSS3"
  ],
  "frameworks": [
    "React",
    "Node.js",
    "Vue.js",
    "Express.js",
    "Angular",
    "Spring Boot",
    "Django"
  ],
  "tools": [
    "Git",
    "Docker",
    "Kubernetes",
    "Jenkins",
    "AWS",
    "Azure",
    "Jira",
    "Slack",
    "VS Code",
    "IntelliJ IDEA",
    "Postman",
    "Webpack"
  ],
  "databases": [
    "MongoDB",
    "Redis",
    "PostgreSQL",
    "MySQL"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure"
  ],
  "key_achievements": [
    "Improved system performance by 60% and reduced deployment time by 45%",
    "Reduced API response time by 55% through microservices architecture",
    "Reduced fraudulent transactions by 40% with fraud detection algorithms"
  ],
  "summary": "Experienced Full Stack Software Developer with 7+ years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Strong track record of leading development teams and delivering high-quality software solutions."
}
```
2025-06-13 12:12:23 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Arjun Singh - Software Developer.pdf
2025-06-13 12:12:23 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Processed candidate: Arjun Singh - Software Developer.pdf with ID: 8f401759-ab84-4332-91bd-d798a3065d32
2025-06-13 12:12:23 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Arjun Singh - Software Developer.pdf (ID: 8f401759-ab84-4332-91bd-d798a3065d32) in 19611ms
2025-06-13 12:12:23 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:12:23 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Arjun Singh - Software Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, (truncated)...]
2025-06-13 12:12:23 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:12:24 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:12:24 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:12:24 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Processing resume upload: Deepika Reddy - Java Developer.pdf
2025-06-13 12:12:29 [http-nio-8081-exec-3] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/1a3d279e-d15a-4222-a625-36a235544924-Deepika Reddy - Java Developer.pdf
2025-06-13 12:12:36 [http-nio-8081-exec-3] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/1a3d279e-d15a-4222-a625-36a235544924-Deepika Reddy - Java Developer.pdf
2025-06-13 12:12:36 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Deepika Reddy
Java Developer & Backend Engineer
dccpika.reddy@email .com
H
+91 98712 34567
- linkedin com/1 in/deepikareddy
github.com/deepikareddy
T
Hyderabad, Telangana, India
PROFESSIONAL SUMMARY
TECHNICAL
SKILLS
Dedicated Java Developer with 5+ years of experience in
designing and developing enterprise level applications
CORE JAVA
using Java Spring Framework and microservices
lava I'
Java 11
architecture Expertise in building scalable backend
systems, RESTful APIs, and database integration with
lava OOP Concepts
strong knowledge of software design patterns and best
practices Proven track record of optimizing application
Multithreading
performance and delivering high-quality code in agile
environments
FRAMEWORKS
PROFESSIONAL EXPERIENCE
Spring Boot
Spring MVC
Spring Security
Senior Java Developer
Hibernato
JPA
Accenture Solutions
Jan 2022 Present
Java 17
Spring Boot
Spring Security
Microservices
DATABASES
PostgreSQL
Redis
Docker
Kafka
JUnit
PostgreSQI
MySQI
Developed microservices architecture using Java 17 and Spring
Oracle DB
Redis
Boot serving 500K+ daily transactions
Implemented secure authentication and authorization using
JDBC
Spring Security and JWT tokens
Designed and optimized PostgreSQI database schemas reducing
query execution time by 50%
WEB
Built event driven systems using Apache Kafka for real-time
TECHNOLOGIES
data processing
RESTAI
Implemented Redis caching strategies improving application
response 40%
Microservice
Servlets
Containerized applications using Docker and deployed on
Kubernetes clusters
JSP
SON
Achieved 90% code coverage through compreher sive unit
testing with JUnit and Mockito
TOOLS DEVOPS
Docker Kafka
Java Developer
Mayen Gi
Tomcat
Capgemini India
Mar 2020 Dec 2021
Java 11
Spring MVC
libernato
MySQI
RESTAPI
TESTING
Maven
Git
Unit
Mockito
Buil enterprise web applications using Java 11. Spring MVC.
and Hibernate ORM
Integration Testing
Developed RESTful APIs for frontend consumption and third-
party integrations
Unit Testing
Implemented database operations using Hibernate with MySQL
backend
Used Mayen for project management and dependency resolution
EDUCATION
Collaborated with cross-functional teams using Git for version
control
Participated code reviews and maintained high coding
Bachelor Technology
standards
(Computer Science)
Jawaharlal Nehru
Technological University
2015-2019
Associate Software Engineer
Wipro Technologies
Jul 2019 - Fcb 2020
CERTIFICATIONS
Juya8
Servlets
JSP
JDBC
Oracle
Tomcat
Oracle Certified Professional Java
Developed web applications using Java Servlets, and ISP
SE
technologies
Implemented database connectivity using JDBC with Oracle
Spring Professional Certification
database
Deployed applications on Apache Tomcat server
AWS Certified Developer
Fixed bugs and implemented feature enhancements based on
Associate
client requirements
Learned enterprise development practices and coding standards
Docker Certified Associate
Apache Kafka Developer
FEATURED PROJECTS
Microservice Architecture
LANGUAGES
Banking
E-Commerce Order
Microservices
Management
Platform
Telugu: Native
Java II
Spring MVC
Hindi: Fluent
Java 17
Spring Boot
libernate
MySQL
English: Fluent
PostgreSQ1
Redis
Tamil: Basic
RESTAPI
Kafka
Docker
Built order management
system using Java and
KEY
Architected prehensive
banki platform using
Spring MVC framework
ACHIEVEMENTS
microservices with Java 17
Implemented Hibernate for
and Spring Boot Implemented
ORM mapping with MySQL
database created REST APIs
PostgreSQL data
. performance improvement
persistence Redis caching
for order processing and
database queries
and Kalka for event streaming
integrated payment gateway
90% coverage
testing
Containerized services using
services
Led team of developers
500K daily transactions handled
Docker scalable
Zero production bugs in last months
deployment
Employee
Inventory Tracking
Management stem
API
Java 8
Servlets
Spring Boot
JSP
JDBC
Spring Security
JUnit
Oracle DB
Mockito
Mayen
Developed employee
Created REST for
management application using
inventory management using
Java with Servlets JSP
Spring Spring
for interface Used JDBC
Security authentication
for database operations with
Implemented comprehensive
Oracle backend implemented
testing with JUnit and
CRU D operations and
Mockito managed project
employee reporting features
dependencies with Mayen
build tool

2025-06-13 12:12:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Java 11\",\n    \"Java OOP Concepts\",\n    \"Multithreading\",\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\",\n    \"RESTful APIs\",\n    \"Servlets\",\n    \"JSP\",\n    \"JDBC\",\n    \"JSON\",\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Integration Testing\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\"\n  ],\n  \"soft_skills\": [\n    \"Team Collaboration\",\n    \"Code Reviews\",\n    \"High Coding Standards\",\n    \"Problem Solving\",\n    \"Client Requirements Handling\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"Oracle Certified Professional Java SE\",\n    \"Spring Professional Certification\",\n    \"AWS Certified Developer Associate\",\n    \"Docker Certified Associate\",\n    \"Apache Kafka Developer\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\"\n  ],\n  \"tools\": [\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\",\n    \"Tomcat\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"Oracle DB\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions\",\n    \"Designed and optimized PostgreSQL database schemas reducing query execution time by 50%\",\n    \"Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito\"\n  ],\n  \"summary\": \"Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1286,"outputTokens":641,"totalTokens":1927}}
2025-06-13 12:12:45 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Java 11",
    "Java OOP Concepts",
    "Multithreading",
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA",
    "RESTful APIs",
    "Servlets",
    "JSP",
    "JDBC",
    "JSON",
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Integration Testing",
    "Docker",
    "Kafka",
    "Kubernetes"
  ],
  "soft_skills": [
    "Team Collaboration",
    "Code Reviews",
    "High Coding Standards",
    "Problem Solving",
    "Client Requirements Handling"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 5,
  "certifications": [
    "Oracle Certified Professional Java SE",
    "Spring Professional Certification",
    "AWS Certified Developer Associate",
    "Docker Certified Associate",
    "Apache Kafka Developer"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "Java"
  ],
  "frameworks": [
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA"
  ],
  "tools": [
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Docker",
    "Kafka",
    "Kubernetes",
    "Tomcat"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "Oracle DB",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions",
    "Designed and optimized PostgreSQL database schemas reducing query execution time by 50%",
    "Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito"
  ],
  "summary": "Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments."
}
```
2025-06-13 12:12:45 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Deepika Reddy - Java Developer.pdf
2025-06-13 12:12:45 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Processed candidate: Deepika Reddy - Java Developer.pdf with ID: c64d13db-7c72-4ba8-88f7-8bd06ee18880
2025-06-13 12:12:45 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Deepika Reddy - Java Developer.pdf (ID: c64d13db-7c72-4ba8-88f7-8bd06ee18880) in 20667ms
2025-06-13 12:12:45 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:12:45 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Deepika Reddy - Java Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, s (truncated)...]
2025-06-13 12:12:45 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:12:46 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:12:46 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:12:46 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Processing resume upload: Karan Singh - DevOps Engineer.pdf
2025-06-13 12:12:49 [http-nio-8081-exec-2] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/16d3895f-4658-4e8b-aca3-3a4451204cc1-Karan Singh - DevOps Engineer.pdf
2025-06-13 12:13:03 [http-nio-8081-exec-2] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/16d3895f-4658-4e8b-aca3-3a4451204cc1-Karan Singh - DevOps Engineer.pdf
2025-06-13 12:13:03 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
karan.singh@email.com
+91 97531 86420
Karan Singh
DevOps Engineer & Cloud Architect
linkedin.com/in/karansingh
STATUS: ACTIVE UPTIME: 5+ YEARS I DEPLOYMENTS: 1000+
in github.com/karansingh
o
Gurgaon, Haryana, India
$ cat professional_summary.txt
TECHNICAL ARSENAL
CLOUD PLATFORMS
Experienced DevOps Engineer with 5+ years of expertise in automating
AWS EC2
AWS EKS
AWS RDS
AWS
deployment pipelines, managing cloud infrastructure. and orchestrating
AWS CloudWatch
AWS CodePipeline
AWS CLI
containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD
automation with strong background in Infrastructure as Code and monitoring
solutions Proven track record of reducing deployment time by 80% and
CONTAINERIZATION
improving system reliability to 99.9% uptime through robust DevOps practices.
Docker
Kubernetes
Docker Swarm
Helm
Container Registry
$ grep -r "experience" /career/history
CI/CD TOOLS
[PROCESS]
Jenkins
GitLab
GitHub Actions
Git
Maven
Senior DevOps Engineer
SonarQub
Paytm (One97 Communications)
Jan 2022 Present
AWS
Kubernetes
Docker
Jenkins
Terraform
Ansible
Prometheus
Grafana
ELK Stack
INFRASTRUCTURE AS CODE
Architected AWS cloud infrastructure using Terraform managing 100+ EC2 instances
Terraform
Ansible
CloudFormation
YAML
JSON
and RDS clusters
Implemented Kubernetes orchestration for microservices serving 50M+ daily
transactions
MONITORING LOGGING
Built Jenkins CI/CD pipelines reducing deployment time from 4 hours to 30 minutes
Prometheus
Grafana
ELK Stack
Alertmanager
Elasticsearch
Kibana
Configured monitoring stack using Prometheus and Grafana achieving 99.9% uptime SLA
Automated infrastructure provisioning using Ansible playbooks saving 20 hours/week
Implemented ELK Stack for centralized logging and real-time log analysis
SYSTEM ADMINISTRATION
Managed Docker container registry and optimized image sizes by 60%
Linux
Shell Scripting
Nainx
Apache
Tomcat
Redis
[PROCESS]
# PERFORMANCE METRICS
DevOps Engineer
Nagarro Software
Mar 2021 Dec 2021
99.9%
80%
AWS EC2
Docker Swarm
GitLab CI
CloudFormation
Nginx
Redis
SYSTEMUPTIME
DEPLOY TIME REDUCTION
Deployed applications on AWS EC2 using Docker Swarm for container orchestration
1000+
100+
Created GitLab CT pipelines for automated testing and deployment processes
DEPLOYMENTS
EC2 INSTANCES
Implemented infrastructure using AWS CloudFormation templates
Configured Nginx load balancers for high availability and traffic distribution
# SYSTEM CONFIGURATION
Set up Redis clusters for caching and session management
Optimized application performance resulting in 40% faster response times
Bachelor of Technology (Information
Technology)
Guru Gobind Singh Indraprastha University
2016 2020
[PROCESS]
Junior DevOps Engineer
# SECURITY CERTIFICATES
Mindtree Limited
Jun 2020 Feb 2021
Linux
Shell Scripting
Git
Mayer
Tomcat
AWS Certified DevOps Engineer Professional
Managed Linux servers and wrote Shell scripts for automation tasks
Certified Kubernetes Administrator (CKA)
Implemented Git workflows and branching strategies for development teams
Docker Certified Associate
Configured Mayen build processes for Java applications
Terraform Associate Certification
Deployed applications on Apache Tomcat servers
Learned infrastructure management and deployment best practices
Jenkins Certified Engineer
AWS Solutions Architect Associate
Prometheus Certified Associate
$ ls -la /projects/featured
LANGUAGE SUPPORT
[PROJECT]
[PROJECT]
Microservices Platform
CI/CD Automation Pipeline
Hindi: Native
Kubernetes
Docker
AWS EKS
Terraform
Jenkins
GitLab
Docker
English: Fluent
Helm
AWS CodePipeline
SonarQube
Punjabi: Native
Urdu: Conversational
Built scalable microservices platform on
Implemented end-to-end CI/CD pipeline
AWS EKS using Kubernetes and Docker.
using Jenkins and GitLab CI with Docker
Automated infrastructure deployment with
containerization. Integrated AWS
ADDITIONAL MODULES
Terraform and managed application
CodePipeline for cloud-native deployments
deployments using Helm charts for
and SonarQube for code quality analysis.
Microservices Architecture
consistent and reliable releases.
Site Reliability Engineering
cloud Security Best Practices
Disaster Recovery Planning
Cost Optimization Strategies
Agile DevOps Methodologies
[PROJECT]
[PROJECT]
Infrastructure Monitoring
Infrastructure as Code
SYSTEM STATUS
Prometheus
Grafana
ELK Stack
Terraform
Ansible
CloudFormation
AWS CloudWatch
Alertmanager
Shell Scripting
AWS CLI
OPERATIONAL: All systems running
MONITORING: Active 24/7
BACKUP: Automated daily
Set up comprehensive monitoring solution
Automated infrastructure provisioning
SECURITY Enhanced protection
PERFORMANCE: Optimized
using Prometheus and Grafana with ELK
using Terraform and Ansible with AWS
Stack for log aggregation. Configured AWS
CloudFormation. Created Shell scripts and
CloudWatch and Alertmanager for proactive
AWS CLI automation for infrastructure
incident management
management and deployment processes.

2025-06-13 12:13:18 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"AWS EC2\",\n    \"AWS EKS\",\n    \"AWS RDS\",\n    \"AWS CloudWatch\",\n    \"AWS CodePipeline\",\n    \"AWS CLI\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Docker Swarm\",\n    \"Helm\",\n    \"Jenkins\",\n    \"GitLab\",\n    \"GitHub Actions\",\n    \"Git\",\n    \"Maven\",\n    \"SonarQub\",\n    \"Terraform\",\n    \"Ansible\",\n    \"Prometheus\",\n    \"Grafana\",\n    \"ELK Stack\",\n    \"Alertmanager\",\n    \"Elasticsearch\",\n    \"Kibana\",\n    \"Linux\",\n    \"Shell Scripting\",\n    \"Nginx\",\n    \"Apache\",\n    \"Tomcat\",\n    \"Redis\"\n  ],\n  \"soft_skills\": [\n    \"Problem-solving\",\n    \"Automation\",\n    \"Optimization\",\n    \"Team collaboration\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Information Technology)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified DevOps Engineer Professional\",\n    \"Certified Kubernetes Administrator (CKA)\",\n    \"Docker Certified Associate\",\n    \"Terraform Associate Certification\",\n    \"Jenkins Certified Engineer\",\n    \"AWS Solutions Architect Associate\",\n    \"Prometheus Certified Associate\"\n  ],\n  \"industries\": [\n    \"IT\",\n    \"Finance\",\n    \"Consulting\"\n  ],\n  \"programming_languages\": [\n    \"Shell Scripting\"\n  ],\n  \"frameworks\": [\n    \"Kubernetes\",\n    \"Docker Swarm\",\n    \"Helm\"\n  ],\n  \"tools\": [\n    \"Jenkins\",\n    \"GitLab\",\n    \"GitHub Actions\",\n    \"Git\",\n    \"Maven\",\n    \"SonarQub\",\n    \"Terraform\",\n    \"Ansible\",\n    \"Prometheus\",\n    \"Grafana\",\n    \"ELK Stack\",\n    \"Alertmanager\",\n    \"Elasticsearch\",\n    \"Kibana\",\n    \"Nginx\",\n    \"Apache\",\n    \"Tomcat\",\n    \"Redis\",\n    \"AWS CLI\"\n  ],\n  \"databases\": [\n    \"AWS RDS\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Reduced deployment time by 80%\",\n    \"Improved system reliability to 99.9% uptime\",\n    \"Optimized Docker image sizes by 60%\"\n  ],\n  \"summary\": \"Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment times and improving system reliability.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1431,"outputTokens":736,"totalTokens":2167}}
2025-06-13 12:13:18 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "AWS EC2",
    "AWS EKS",
    "AWS RDS",
    "AWS CloudWatch",
    "AWS CodePipeline",
    "AWS CLI",
    "Docker",
    "Kubernetes",
    "Docker Swarm",
    "Helm",
    "Jenkins",
    "GitLab",
    "GitHub Actions",
    "Git",
    "Maven",
    "SonarQub",
    "Terraform",
    "Ansible",
    "Prometheus",
    "Grafana",
    "ELK Stack",
    "Alertmanager",
    "Elasticsearch",
    "Kibana",
    "Linux",
    "Shell Scripting",
    "Nginx",
    "Apache",
    "Tomcat",
    "Redis"
  ],
  "soft_skills": [
    "Problem-solving",
    "Automation",
    "Optimization",
    "Team collaboration"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Information Technology)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified DevOps Engineer Professional",
    "Certified Kubernetes Administrator (CKA)",
    "Docker Certified Associate",
    "Terraform Associate Certification",
    "Jenkins Certified Engineer",
    "AWS Solutions Architect Associate",
    "Prometheus Certified Associate"
  ],
  "industries": [
    "IT",
    "Finance",
    "Consulting"
  ],
  "programming_languages": [
    "Shell Scripting"
  ],
  "frameworks": [
    "Kubernetes",
    "Docker Swarm",
    "Helm"
  ],
  "tools": [
    "Jenkins",
    "GitLab",
    "GitHub Actions",
    "Git",
    "Maven",
    "SonarQub",
    "Terraform",
    "Ansible",
    "Prometheus",
    "Grafana",
    "ELK Stack",
    "Alertmanager",
    "Elasticsearch",
    "Kibana",
    "Nginx",
    "Apache",
    "Tomcat",
    "Redis",
    "AWS CLI"
  ],
  "databases": [
    "AWS RDS",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Reduced deployment time by 80%",
    "Improved system reliability to 99.9% uptime",
    "Optimized Docker image sizes by 60%"
  ],
  "summary": "Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment times and improving system reliability."
}
```
2025-06-13 12:13:18 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Karan Singh - DevOps Engineer.pdf
2025-06-13 12:13:18 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Processed candidate: Karan Singh - DevOps Engineer.pdf with ID: 2ca32381-ccce-45f1-bac7-8dbbd3000b68
2025-06-13 12:13:18 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Karan Singh - DevOps Engineer.pdf (ID: 2ca32381-ccce-45f1-bac7-8dbbd3000b68) in 31589ms
2025-06-13 12:13:18 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:13:18 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Karan Singh - DevOps Engineer.pdf, success=true, extractedData={experienceLevel=SENIOR, sk (truncated)...]
2025-06-13 12:13:18 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:13:19 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:13:19 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:13:19 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Processing resume upload: Kavya Nair - Full Stack Developer.pdf
2025-06-13 12:13:21 [http-nio-8081-exec-4] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/ab2a9bda-b41e-4b3a-91aa-eeff6602c566-Kavya Nair - Full Stack Developer.pdf
2025-06-13 12:13:28 [http-nio-8081-exec-4] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/ab2a9bda-b41e-4b3a-91aa-eeff6602c566-Kavya Nair - Full Stack Developer.pdf
2025-06-13 12:13:28 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
+91 98765 12345
Full Stack Developer
linkedin com/in/kavyanair
"Building scalable web solutions with modern technologies'
github.com/kavyanair
9
Kochi. Kerala India
PROFESSIONAL SUMMARY
TECHNICAL
ARSENAL
Passionate Full Stack Developer with 5+ years of experience
FRONTEND
building robust web applications using modern JavaScript
React
Vue.js
Angular
frameworks and cloud technologies. Expertise in React, Node.js,
TypeScript
JavaScript
Python, and AWS with a strong focus on creating scalable,
HTML5
CSS3
maintainable solutions. Proven track record of leading development
teams and delivering high-quality software that serves 100K+ users
daily.
BACKEND
Node.js
Express.js
Python
Django
Java
Spring Boot
PROFESSIONAL EXPERIENCE
DATABASES
PostgreSQL
MySQL
Senior Full Stack Developer
MongoDB
Redis
Oracle DE
Freshworks Inc.
Mar 2022 Present
React
TypeScript
Node.js
Express.js
PostgreSQL
Redis
AWS
Docker
CLOUD DEVOPS
Kubernetes
AWS
Docker
Kubernetes
Architected and developed microservices using Node js and Express.js
Jenkins
GitHub Actions
serving 100K+ daily active users
Built responsive React applications with TypeScript ensuring type safety and
maintainable code
APIS TOOLS
Optimized PostgreSQL database queries and implemented Redis caching
REST APIs
GraphQL
reducing API response time by 60%
Socket.ic
JWT
WebRTC
Deployed applications on AWS using Docker containers and Kubernetes
Chart.js
JUnit
Swagger
orchestration
Led team of developers and mentored junior developers in best practices
Implemented CI/CD pipelines using Jenkins and GitHub Actions reducing
EDUCATION
deployment time by 50%
Master of Computer
Applications (MCA)
Cochin University of Science &
Technology
Full Stack Developer
2017 2019
Zoho Corporation
Jan 2020 Feb 2022
Vue.js
Python
Django
MySQL
MongoDB
REST APIs
GraphQL
Bachelor of Science
(Computer Science)
Developed enterprise CRM features using Vue js frontend and Python Django
University of Kerala
backend
2014 2017
Created RESTful APIs and GraphQL endpoints handling 50K+ requests per
hour
Designed and implemented database schemas in MySQL and MongoDB for
CERTIFICATIONS
optimal performance
Integrated third-party services and APIs for email marketing and analytics
AWS Certified Solutions Architect
functionality
Participated in code reviews and maintained high code quality standards
MongoDB Certified Developer
React Professional Certificate
Node.js Application Developer
Software Developer
Docker Certified Associate
UST Global
Jun 2019 Dec 2019
Kubernetes Administrator
Angular
Java
Spring Boot
Oracle DB
JUnit
Built banking applications using Angular frontend and Java Spring Boot
backend
LANGUAGES
Implemented secure user authentication and authorization using Spring
Security
Malayalam: Native
Developed unit tests using JUnit achieving 85% code coverage
English: Fluent
Hindi: Conversational
Worked with Oracle databases and optimized complex SQL queries
Tamil: Basic
FEATURED PROJECTS
Social Media Analytics
E-Learning Management
Platform
System
React Node.js MongoDB
Vue.js Python Django
Redis Chart.js AWS
PostgreSQL WebRTC
Developed comprehensive social
Built an online learning platform with
media analytics dashboard using
Vue. js frontend and Django backend
React and Chart. js for data
Integrated video conferencing using
visualization. Built scalable backend
WebRTC, implemented course
with Node.js and MongoDB,
management features, and used
implemented Redis for caching, and
PostgreSQL for data storage with
deployed on AWS with auto-scaling
automated backups.
capabilities.
Real-time Chat Application
Inventory Management API
TypeScript Socket.io Express.js
Java
Spring Boot MySQL
JWT
Docker
JUnit
Swagger
Created real-time messaging
Developed RESTful API for inventory
application using Socket io for
management using Java Spring Boot
WebSocket communication and
and MySQL Created comprehensive
TypeScript for type safety.
API documentation with Swagger,
Implemented JWT authentication,
implemented unit testing with JUnit,
built with Express js backend and
and added data validation and error
containerized using Docker for easy
handling.
deployment.

2025-06-13 12:13:36 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"Python\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Java\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"REST APIs\",\n    \"GraphQL\",\n    \"Socket.io\",\n    \"JWT\",\n    \"WebRTC\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"Swagger\",\n    \"Spring Security\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Code Review\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Computer Applications (MCA)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect\",\n    \"MongoDB Certified Developer\",\n    \"React Professional Certificate\",\n    \"Node.js Application Developer\",\n    \"Docker Certified Associate\",\n    \"Kubernetes Administrator\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"CRM\",\n    \"Banking\",\n    \"Analytics\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Spring Boot\"\n  ],\n  \"tools\": [\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"GitHub Actions\",\n    \"Swagger\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"WebRTC\",\n    \"Socket.io\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"MongoDB\",\n    \"Redis\",\n    \"Oracle DB\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Architected and developed microservices serving 100K+ daily active users\",\n    \"Optimized PostgreSQL database queries reducing API response time by 60%\",\n    \"Implemented CI/CD pipelines reducing deployment time by 50%\"\n  ],\n  \"summary\": \"Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1215,"outputTokens":679,"totalTokens":1894}}
2025-06-13 12:13:36 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Vue.js",
    "Angular",
    "TypeScript",
    "JavaScript",
    "Python",
    "Node.js",
    "Express.js",
    "Django",
    "Java",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "REST APIs",
    "GraphQL",
    "Socket.io",
    "JWT",
    "WebRTC",
    "Chart.js",
    "JUnit",
    "Swagger",
    "Spring Security"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Code Review"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Computer Applications (MCA)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified Solutions Architect",
    "MongoDB Certified Developer",
    "React Professional Certificate",
    "Node.js Application Developer",
    "Docker Certified Associate",
    "Kubernetes Administrator"
  ],
  "industries": [
    "Software Development",
    "CRM",
    "Banking",
    "Analytics"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "Java"
  ],
  "frameworks": [
    "React",
    "Vue.js",
    "Angular",
    "Node.js",
    "Express.js",
    "Django",
    "Spring Boot"
  ],
  "tools": [
    "Docker",
    "Kubernetes",
    "Jenkins",
    "GitHub Actions",
    "Swagger",
    "Chart.js",
    "JUnit",
    "WebRTC",
    "Socket.io"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "MongoDB",
    "Redis",
    "Oracle DB"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Architected and developed microservices serving 100K+ daily active users",
    "Optimized PostgreSQL database queries reducing API response time by 60%",
    "Implemented CI/CD pipelines reducing deployment time by 50%"
  ],
  "summary": "Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily."
}
```
2025-06-13 12:13:36 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Kavya Nair - Full Stack Developer.pdf
2025-06-13 12:13:36 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Processed candidate: Kavya Nair - Full Stack Developer.pdf with ID: 0f75058c-584b-41b0-b575-7499878e9575
2025-06-13 12:13:36 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Kavya Nair - Full Stack Developer.pdf (ID: 0f75058c-584b-41b0-b575-7499878e9575) in 16964ms
2025-06-13 12:13:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:13:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Kavya Nair - Full Stack Developer.pdf, success=true, extractedData={experienceLevel=SENIOR (truncated)...]
2025-06-13 12:13:36 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:13:37 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:13:37 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:13:37 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Processing resume upload: Mei Chen - Marketing Analyst.pdf
2025-06-13 12:13:40 [http-nio-8081-exec-5] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/0fa316ec-f255-4db8-bad4-85673db824c4-Mei Chen - Marketing Analyst.pdf
2025-06-13 12:13:50 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/0fa316ec-f255-4db8-bad4-85673db824c4-Mei Chen - Marketing Analyst.pdf
2025-06-13 12:13:50 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Mei Chen
Marketing Analyst & Growth Strategist
mei.chen@email.com
+65 9876 5432
linkedin .com/in/meichen
Singapore
PROFESSIONAL SUMMARY
Core Skills
Data Analytics
95%
Data-driven Marketing Analyst with 6+ years of experience in
SQL & Python
90%
digital marketing analytics and customer insights across Asia-
Tableau & Power BI
88%
Pacific markets. Expert in transforming complex data into
actionable marketing strategies that drove 45% increase in ROI
Google Analytics
92%
and 35% growth in customer acquisition. Specialized in cross-
cultural marketing campaigns and multilingual market analysis.
A/B Testing
85%
Languages
PROFESSIONAL EXPERIENCE
Mandarin
English
Native
Fluent
Senior Marketing Analyst
Hindi
Shopee Singapore
Jan 2022 Present
Malay
Conversational
Basic
Analyzed user behavior data from 8 Southeast Asian markets with
100M+ active users
Developed attribution models improving campaign ROI
Education
measurement accuracy by 50%
Led A/B testing initiatives across mobile and web platforms with
28% conversion improvement
Master of Science in
Marketing Analytics
Created automated dashboards reducing manual reporting time by
National University of
75%
Singapore
2016 2018
Managed marketing analytics for flash sales generating S$50M+
revenue
Bachelor of Business
Administration
Nanyang Technological
University
Marketing Data Analyst
2012 2016
Grab Holdings
Mar 2020 Dec 2021
Performed cohort analysis for ride-hailing and food delivery
services across 6 countries
Certifications
Built predictive models for customer lifetime value with 89%
accuracy
Google Analytics 4 Certified
Optimized marketing spend allocation reducing CAC by 30%
across all verticals
Facebook Blueprint Certified
Conducted market research for new service launches in emerging
markets
Tableau Desktop Specialist
AWS Cloud Practitioner
Junior Marketing Analyst
Google Ads Certified
ByteDance (TikTok)
Jun 2018 Feb 2020
Analyzed viral content patterns and user engagement metrics for
HubSpot Marketing Analytics
APAC region
Created weekly performance reports for marketing campaigns
across 12 markets
Supported influencer marketing ROI analysis and campaign
optimization
Assisted in competitive analysis and market positioning strategies

2025-06-13 12:14:03 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Data Analytics\",\n    \"SQL\",\n    \"Python\",\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\",\n    \"A/B Testing\",\n    \"Predictive Modeling\",\n    \"Marketing Spend Allocation\",\n    \"Market Research\"\n  ],\n  \"soft_skills\": [\n    \"Cross-cultural Marketing\",\n    \"Multilingual Market Analysis\",\n    \"Campaign Optimization\",\n    \"Market Positioning Strategies\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Science in Marketing Analytics\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"Google Analytics 4 Certified\",\n    \"Facebook Blueprint Certified\",\n    \"Tableau Desktop Specialist\",\n    \"AWS Cloud Practitioner\",\n    \"Google Ads Certified\",\n    \"HubSpot Marketing Analytics\"\n  ],\n  \"industries\": [\n    \"Digital Marketing\",\n    \"E-commerce\",\n    \"Ride-hailing\",\n    \"Food Delivery\",\n    \"Social Media\"\n  ],\n  \"programming_languages\": [\n    \"SQL\",\n    \"Python\"\n  ],\n  \"frameworks\": [\n    \"Tableau\",\n    \"Power BI\"\n  ],\n  \"tools\": [\n    \"Google Analytics\",\n    \"Google Ads\",\n    \"HubSpot\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Drove 45% increase in ROI and 35% growth in customer acquisition.\",\n    \"Improved campaign ROI measurement accuracy by 50%.\",\n    \"Achieved 28% conversion improvement through A/B testing initiatives.\"\n  ],\n  \"summary\": \"Data-driven Marketing Analyst with over 6 years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":751,"outputTokens":492,"totalTokens":1243}}
2025-06-13 12:14:03 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Data Analytics",
    "SQL",
    "Python",
    "Tableau",
    "Power BI",
    "Google Analytics",
    "A/B Testing",
    "Predictive Modeling",
    "Marketing Spend Allocation",
    "Market Research"
  ],
  "soft_skills": [
    "Cross-cultural Marketing",
    "Multilingual Market Analysis",
    "Campaign Optimization",
    "Market Positioning Strategies"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Science in Marketing Analytics",
  "years_of_experience": 6,
  "certifications": [
    "Google Analytics 4 Certified",
    "Facebook Blueprint Certified",
    "Tableau Desktop Specialist",
    "AWS Cloud Practitioner",
    "Google Ads Certified",
    "HubSpot Marketing Analytics"
  ],
  "industries": [
    "Digital Marketing",
    "E-commerce",
    "Ride-hailing",
    "Food Delivery",
    "Social Media"
  ],
  "programming_languages": [
    "SQL",
    "Python"
  ],
  "frameworks": [
    "Tableau",
    "Power BI"
  ],
  "tools": [
    "Google Analytics",
    "Google Ads",
    "HubSpot"
  ],
  "databases": [],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Drove 45% increase in ROI and 35% growth in customer acquisition.",
    "Improved campaign ROI measurement accuracy by 50%.",
    "Achieved 28% conversion improvement through A/B testing initiatives."
  ],
  "summary": "Data-driven Marketing Analyst with over 6 years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis."
}
```
2025-06-13 12:14:03 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Mei Chen - Marketing Analyst.pdf
2025-06-13 12:14:03 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Processed candidate: Mei Chen - Marketing Analyst.pdf with ID: 33f5b462-768b-424e-a2df-d5fcd1649903
2025-06-13 12:14:03 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Mei Chen - Marketing Analyst.pdf (ID: 33f5b462-768b-424e-a2df-d5fcd1649903) in 25722ms
2025-06-13 12:14:03 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:14:03 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Mei Chen - Marketing Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, ski (truncated)...]
2025-06-13 12:14:03 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:14:04 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:14:04 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:14:04 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Processing resume upload: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 12:14:05 [http-nio-8081-exec-9] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/bd41336f-ae10-4140-8774-a412ba676fed-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 12:14:24 [http-nio-8081-exec-9] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/bd41336f-ae10-4140-8774-a412ba676fed-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 12:14:24 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
PROFESSIONAL SUMMARY
Results-oriented Sales & Marketing professional with 7+
years of experience in the Indian market, specializing in
digital marketing strategies and B2B sales. Proven track
Priya Sharma
record of increasing revenue by 40% and expanding
market presence across Tier 1 and Tier 2 cities. Expert in
Sales & Marketing Professional
managing multi-channel campaigns and building long-term
client relationships in competitive markets.
Contact
priya.sharma@email.com
PROFESSIONAL EXPERIENCE
+91 98765 43210
Senior Marketing Manager
linkedin.com/in/priyasharma
Tata Digital Solutions
Jan 2021 Present
Mumbai, Maharashtra, India
Led digital marketing initiatives for pan-India market expansion,
Core Skills
reaching 15+ states
Managed ₹50 lakh annual marketing budget with 35% ROI
Lead Generation
improvement
Developed localized campaigns for regional markets increasing
Digital Marketing
engagement by 60%
Built strategic partnerships with 25+ B2B clients across various
CRM Management
industries
Campaign Strategy
Implemented CRM system reducing sales cycle time by 30%
Analytics
Marketing Executive
Languages
Reliance Industries Ltd
Mar 2019 Dec 2020
Executed social media strategies achieving 2M+ followers across
Hindi (Native)
platforms
English (Fluent)
Coordinated trade shows and exhibitions in Mumbai, Delhi, and
Bangalore
Marathi (Native)
Managed vendor relationships and negotiated contracts saving
₹15 lakh annually
Certifications
Created content marketing strategy increasing website traffic by
150%
Google Ads Certified Professional
HubSpot Inbound Marketing
Salesforce Administrator
Sales Associate
Digital Marketing Institute
Wipro Technologies
Jun 2017 Feb 2019
Achieved 125% of sales targets consistently across Western
India region
Built client database of 200+ prospects through cold calling and
networking
Participated in 10+ industry conferences and generated 50+
qualified leads
EDUCATION
Master of Business Administration (Marketing)
Indian Institute of Management, Ahmedabad
2015 2017
Bachelor of Commerce
University of Mumbai
2012 2015

2025-06-13 12:14:31 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Lead Generation\",\n    \"Digital Marketing\",\n    \"CRM Management\",\n    \"Campaign Strategy\",\n    \"Analytics\"\n  ],\n  \"soft_skills\": [\n    \"Client Relationship Management\",\n    \"Strategic Partnerships\",\n    \"Negotiation\",\n    \"Content Creation\",\n    \"Budget Management\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Marketing)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"Google Ads Certified Professional\",\n    \"HubSpot Inbound Marketing\",\n    \"Salesforce Administrator\",\n    \"Digital Marketing Institute\"\n  ],\n  \"industries\": [\n    \"Digital Solutions\",\n    \"Reliance Industries\",\n    \"Information Technology\"\n  ],\n  \"programming_languages\": [],\n  \"frameworks\": [],\n  \"tools\": [\n    \"CRM system\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.\",\n    \"Managed ₹50 lakh annual marketing budget with 35% ROI improvement.\",\n    \"Executed social media strategies achieving 2M+ followers across platforms.\"\n  ],\n  \"summary\": \"Results-oriented Sales & Marketing professional with 7+ years of experience in the Indian market, specializing in digital marketing strategies and B2B sales. Proven track record of increasing revenue and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":722,"outputTokens":392,"totalTokens":1114}}
2025-06-13 12:14:31 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Lead Generation",
    "Digital Marketing",
    "CRM Management",
    "Campaign Strategy",
    "Analytics"
  ],
  "soft_skills": [
    "Client Relationship Management",
    "Strategic Partnerships",
    "Negotiation",
    "Content Creation",
    "Budget Management"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Marketing)",
  "years_of_experience": 7,
  "certifications": [
    "Google Ads Certified Professional",
    "HubSpot Inbound Marketing",
    "Salesforce Administrator",
    "Digital Marketing Institute"
  ],
  "industries": [
    "Digital Solutions",
    "Reliance Industries",
    "Information Technology"
  ],
  "programming_languages": [],
  "frameworks": [],
  "tools": [
    "CRM system"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.",
    "Managed ₹50 lakh annual marketing budget with 35% ROI improvement.",
    "Executed social media strategies achieving 2M+ followers across platforms."
  ],
  "summary": "Results-oriented Sales & Marketing professional with 7+ years of experience in the Indian market, specializing in digital marketing strategies and B2B sales. Proven track record of increasing revenue and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships."
}
```
2025-06-13 12:14:31 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 12:14:31 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Processed candidate: Priya Sharma - Sales & Marketing Professional.pdf with ID: 5985fd3a-d58a-4278-a811-e1a61167957b
2025-06-13 12:14:31 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Priya Sharma - Sales & Marketing Professional.pdf (ID: 5985fd3a-d58a-4278-a811-e1a61167957b) in 27437ms
2025-06-13 12:14:31 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:14:31 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Priya Sharma - Sales & Marketing Professional.pdf, success=true, extractedData={experience (truncated)...]
2025-06-13 12:14:31 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:14:32 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:14:32 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:14:32 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Processing resume upload: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 12:14:34 [http-nio-8081-exec-8] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/512eb7b2-9c3b-4ffa-a0a0-dda04f917578-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 12:14:40 [http-nio-8081-exec-8] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/512eb7b2-9c3b-4ffa-a0a0-dda04f917578-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 12:14:40 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Rajesh Kumar
Demand Planning Specialist
rajesh kumar@email.com
+91 98765 54321
linkedin.com/in/rajeshkumar
T
Pune, Maharashtra, India
Professional Summary
Strategic Demand Planning professional with 8+ years of experience in supply chain
optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting,
inventory management, and S&OP processes with proven track record of improving forecast
accuracy by 45% and reducing inventory costs by ₹2.5 crores annually. Skilled in implementing
demand planning solutions for multi-location operations across India.
Professional Experience
O
Senior Demand Planning Manager
Apr 202 Present
Hindustan Unilever Limited
Lead demand planning for 800+ SKUs across North and West India regions
Improved forecast accuracy from 72% to 91% using advanced analytics and ML models
Reduced excess inventory by ₹1.8 crores through enhanced demand sensing
Led S&OP implementation across 8 manufacturing locations
Managed cross-functional teams of 15+ members across supply chain functions
Implemented SAP IBP resulting in 40% reduction in planning cycle time
Demand Planner
Jun 2019 Mar 2021
ITC Limited
Managed demand planning for cigarettes and FMCG portfolio worth ₹500 crores
Developed statistical models for seasonal demand patterns using R and Python
Collaborated with marketing teams for promotional planning and new product launches
Reduced stockout incidents by 35% through improved demand sensing
Created automated dashboards using Power BI for executive reporting
Supply Chain Analyst
Jul 2017 May 2019
Mahindra & Mahindra
Supported inventory optimization for automotive spare parts across 200+ dealers
Performed root cause analysis on forecast variances and implemented corrections
Created Excel-based planning tools reducing manual effort by 60%
Assisted in vendor collaboration initiatives improving supplier fill rates
Core Competencies
Planning & Forecasting
Technology & Tools
Statistical Forecasting
Demand Sensing
SAP IBP/APO
Oracle Demantra
Power BI
S&OP
Inventory Optimization
Advanced Excel
Python
R Programming
Collaborative Planning
Industry Knowledge
FMCG
Automotive
Manufacturing
Retail
Multi- location Ops
Education & Certifications
Master of Business Administration (Operations)
Indian Institute of Management, Kozhikode
2015 2017
Bachelor of Engineering (Mechanical)
Pune University
2011 2015
Certifications
APICS SCOR Certified CPIM Certified SAP IBP Certification Six Sigma Green Belt

2025-06-13 12:14:45 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Statistical Forecasting\",\n    \"Demand Sensing\",\n    \"S&OP\",\n    \"Inventory Optimization\",\n    \"Advanced Excel\",\n    \"Python\",\n    \"R Programming\",\n    \"SAP IBP\",\n    \"Oracle Demantra\",\n    \"Power BI\"\n  ],\n  \"soft_skills\": [\n    \"Collaborative Planning\",\n    \"Team Management\",\n    \"Vendor Collaboration\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Operations)\",\n  \"years_of_experience\": 8,\n  \"certifications\": [\n    \"APICS SCOR Certified\",\n    \"CPIM Certified\",\n    \"SAP IBP Certification\",\n    \"Six Sigma Green Belt\"\n  ],\n  \"industries\": [\n    \"Manufacturing\",\n    \"FMCG\",\n    \"Automotive\",\n    \"Retail\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R Programming\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"SAP IBP\",\n    \"Oracle Demantra\",\n    \"Power BI\",\n    \"Advanced Excel\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Improved forecast accuracy from 72% to 91% using advanced analytics and ML models\",\n    \"Reduced excess inventory by ₹1.8 crores through enhanced demand sensing\",\n    \"Reduced stockout incidents by 35% through improved demand sensing\"\n  ],\n  \"summary\": \"Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with a proven track record of improving forecast accuracy by 45% and reducing inventory costs by ₹2.5 crores annually. Skilled in implementing demand planning solutions for multi-location operations across India.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":775,"outputTokens":473,"totalTokens":1248}}
2025-06-13 12:14:45 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Statistical Forecasting",
    "Demand Sensing",
    "S&OP",
    "Inventory Optimization",
    "Advanced Excel",
    "Python",
    "R Programming",
    "SAP IBP",
    "Oracle Demantra",
    "Power BI"
  ],
  "soft_skills": [
    "Collaborative Planning",
    "Team Management",
    "Vendor Collaboration"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Operations)",
  "years_of_experience": 8,
  "certifications": [
    "APICS SCOR Certified",
    "CPIM Certified",
    "SAP IBP Certification",
    "Six Sigma Green Belt"
  ],
  "industries": [
    "Manufacturing",
    "FMCG",
    "Automotive",
    "Retail"
  ],
  "programming_languages": [
    "Python",
    "R Programming"
  ],
  "frameworks": [],
  "tools": [
    "SAP IBP",
    "Oracle Demantra",
    "Power BI",
    "Advanced Excel"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Improved forecast accuracy from 72% to 91% using advanced analytics and ML models",
    "Reduced excess inventory by ₹1.8 crores through enhanced demand sensing",
    "Reduced stockout incidents by 35% through improved demand sensing"
  ],
  "summary": "Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with a proven track record of improving forecast accuracy by 45% and reducing inventory costs by ₹2.5 crores annually. Skilled in implementing demand planning solutions for multi-location operations across India."
}
```
2025-06-13 12:14:45 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 12:14:45 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Processed candidate: Rajesh Kumar - Demand Planning Specialist.pdf with ID: 430f46af-c408-4e97-a1b8-e9a0d0f52d67
2025-06-13 12:14:45 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rajesh Kumar - Demand Planning Specialist.pdf (ID: 430f46af-c408-4e97-a1b8-e9a0d0f52d67) in 12987ms
2025-06-13 12:14:45 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:14:45 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rajesh Kumar - Demand Planning Specialist.pdf, success=true, extractedData={experienceLeve (truncated)...]
2025-06-13 12:14:45 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:14:46 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:14:46 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:14:46 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Processing resume upload: Rohit Gupta - Angular Developer.pdf
2025-06-13 12:14:48 [http-nio-8081-exec-6] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/d3759201-7ad9-4b08-9201-70576c49926c-Rohit Gupta - Angular Developer.pdf
2025-06-13 12:14:54 [http-nio-8081-exec-6] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/d3759201-7ad9-4b08-9201-70576c49926c-Rohit Gupta - Angular Developer.pdf
2025-06-13 12:14:54 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
hit Gupta
per & Frontend Specialist
+91 99876 54321
A linkedin.com/in/rohitgupta
github.com/rohitgupta
Delhi. India
I
PROFESSIONAL SUMMARY
TECHNICAL
EXPERTISE
Experienced Angular Developer with 4+ years of
ANGULAR FRAMEWORK
expertise in building dynamic, responsive web
applications using Angular framework and
Angular
Angular 1
TypeScript. Proficient in creating scalable frontend
Angular
Angular CLI
solutions with RxJS, NgRx state management, and
Angula Router
modern UI libraries. Strong background in integrating
RESTful APIs, implementing unit testing with Jasmine
and Karma, and optimizing application performance.
CORE TECHNOLOGIES
Passionate about clean code, user experience, and
TypeScript
JavaScript
staying updated with latest Angular trends and best
practices.
HTML5 CSS3
STATE MANAGEMENT
T
PROFESSIONAL EXPERIENCE
NgRx RxJ
Observable
Reactive Programming
Senior Angular Developer
HCL Technologies
Feb 2022 Present
UI LIBRARIES
Angular
TypeScript
RxJS
NgRx
ingula Material
Bootstra
Angular Material
Jasmine Karma REST APIs
Chart.j
PrimeNG
. Developed enterprise banking applications using Angular
15+ and TypeScript with 99 9% uptime
.
Implemented state management using NgR> for complex
TESTING APIS
application state handling
Jasmine
Karma
. Built reusable components using Angular Material and
custom UI libraries
REST
Integrated RESTful APIs and handled asynchronous
WebSocke
Socket.ic
operations using Rx1S observables
Achieved 95% code coverage through comprehensive unit
testing with Jasmine and Karma
TOOLS OTHERS
Optimized application performance resulting 40% faster
page load times
VS Code
Mentored junior developers Angular best practices
Webpack
and code review processes
EDUCATION
Angular Developer
Tech Mahindra
Jun 2021 2022
Bachelor of Technology
Angular 12
TypeScript
Bootstrap
Chart.js
(Computer Science)
HTTP Client
Forms
Delhi Technological University
2016-2020
. Built responsive dashboard applications using Angular 12
and Bootstrap framework
.
Created interactive data visualizations using Chart.js and
Angular integration
CERTIFICATIONS
Implemented reactive forms and template-driven forms
for data collection
Angular Certified Developer
Consumed REST APIs using Angular HTTP Client and
handled error scenarios
TypeScript Professional
Collaborated with UX/UI teams to implement pixel perfect
designs
NgRx State Management
Participated agile development cycles with daily
standups and sprint planning
Rx1S Reactive Programming
Frontend Web Development
Frontend Developer
Angular Testing with Jasmine
Cognizant Technology
Aug 2020 May
Solutions
2021
LANGUAGES
Angular
JavaScript
HTML5
CSS3
SCSS
Gi
Hindi: Native
English: Fluent
.
Developed customer facing web applications using
Angular 10 and modern JavaScript
Punjabi: Conversational
Created responsive layouts using HTML5, CSS3, and SCSS
preprocessor
INTERESTS
Implemented routing and navigation using Angular Router
Worked with version control using Git and collaborated in
Frontend Architectur Angular
team environments
Updates Open Source Contributing
Fixed bugs and implemented feature enhancements
. Tech Blogging UI/UX Design
based on client requirements
FEATURED PROJECTS
Banking Dashboard
E-Commerce Admin
System
Panel
Angular
NgRx
Angular 12
Angular Material
TypeScript
Bootstrap
Chart.js
RxJS
REST APIs
Forms
Developed comprehensive
Built admin panel e
banking dashboard using
commerce management
Angular with NgRx for
using Angular 12 and
state management
TypeScript Implemented
Integrated Angular Material
Bootstrap responsive
components consistent
design integrated REST
UI and Chart.j for financial
APIs data operations,
data visualization Used
and created complex forms
RxJS handling complex
for product and inventory
asynchronous operations
management
and real-time updates.
Task Management
Real-time Chat
Application
Interface
Angular
Jasmine
Angula Socket.ig
Karma
HTTP Client
SCSS WebSocket
Local Storage
Reactive Forms
Created task management
Developed real-time chat
app using Angular 10 with
application using Angular 14
local storage data
and Socket.ic WebSocket
persistence. Implemented
communication Styled with
comprehensive unit testing
SCSS custom
with Jasmine and Karma.
animations impleme nted
used HTTP Client for API
reactive forms message
integration and built drag
input. and handled real time
and-drop functionality for
message updates efficiently
task organization

2025-06-13 12:15:00 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Angular\",\n    \"Angular 1\",\n    \"TypeScript\",\n    \"RxJS\",\n    \"NgRx\",\n    \"Angular Router\",\n    \"Angular CLI\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"Chart.js\",\n    \"PrimeNG\",\n    \"Jasmine\",\n    \"Karma\",\n    \"REST APIs\",\n    \"WebSocket\",\n    \"Socket.io\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\",\n    \"Git\",\n    \"VS Code\",\n    \"Webpack\",\n    \"HTTP Client\",\n    \"Forms\",\n    \"Reactive Programming\",\n    \"Observable\",\n    \"Local Storage\"\n  ],\n  \"soft_skills\": [\n    \"Mentoring\",\n    \"Collaboration\",\n    \"Agile development\",\n    \"Team environments\",\n    \"Client requirements handling\"\n  ],\n  \"experience_level\": \"MID\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 4,\n  \"certifications\": [\n    \"Angular Certified Developer\",\n    \"TypeScript Professional\",\n    \"NgRx State Management\",\n    \"RxJS Reactive Programming\",\n    \"Frontend Web Development\",\n    \"Angular Testing with Jasmine\"\n  ],\n  \"industries\": [\n    \"IT\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"TypeScript\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\"\n  ],\n  \"frameworks\": [\n    \"Angular\",\n    \"Angular 1\",\n    \"Angular CLI\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"Chart.js\",\n    \"PrimeNG\",\n    \"Jasmine\",\n    \"Karma\"\n  ],\n  \"tools\": [\n    \"VS Code\",\n    \"Webpack\",\n    \"Git\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime\",\n    \"Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma\",\n    \"Optimized application performance resulting in 40% faster page load times\"\n  ],\n  \"summary\": \"Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular framework, TypeScript, RxJS, and NgRx state management. Passionate about clean code, user experience, and staying updated with the latest Angular trends and best practices.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1267,"outputTokens":646,"totalTokens":1913}}
2025-06-13 12:15:00 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Angular",
    "Angular 1",
    "TypeScript",
    "RxJS",
    "NgRx",
    "Angular Router",
    "Angular CLI",
    "Angular Material",
    "Bootstrap",
    "Chart.js",
    "PrimeNG",
    "Jasmine",
    "Karma",
    "REST APIs",
    "WebSocket",
    "Socket.io",
    "HTML5",
    "CSS3",
    "SCSS",
    "Git",
    "VS Code",
    "Webpack",
    "HTTP Client",
    "Forms",
    "Reactive Programming",
    "Observable",
    "Local Storage"
  ],
  "soft_skills": [
    "Mentoring",
    "Collaboration",
    "Agile development",
    "Team environments",
    "Client requirements handling"
  ],
  "experience_level": "MID",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 4,
  "certifications": [
    "Angular Certified Developer",
    "TypeScript Professional",
    "NgRx State Management",
    "RxJS Reactive Programming",
    "Frontend Web Development",
    "Angular Testing with Jasmine"
  ],
  "industries": [
    "IT",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "TypeScript",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS"
  ],
  "frameworks": [
    "Angular",
    "Angular 1",
    "Angular CLI",
    "Angular Material",
    "Bootstrap",
    "Chart.js",
    "PrimeNG",
    "Jasmine",
    "Karma"
  ],
  "tools": [
    "VS Code",
    "Webpack",
    "Git"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime",
    "Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma",
    "Optimized application performance resulting in 40% faster page load times"
  ],
  "summary": "Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular framework, TypeScript, RxJS, and NgRx state management. Passionate about clean code, user experience, and staying updated with the latest Angular trends and best practices."
}
```
2025-06-13 12:15:00 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rohit Gupta - Angular Developer.pdf
2025-06-13 12:15:00 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Processed candidate: Rohit Gupta - Angular Developer.pdf with ID: 7f76d30e-ea02-4f89-9795-45a6d4eb8ebe
2025-06-13 12:15:00 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rohit Gupta - Angular Developer.pdf (ID: 7f76d30e-ea02-4f89-9795-45a6d4eb8ebe) in 14100ms
2025-06-13 12:15:00 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:15:00 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rohit Gupta - Angular Developer.pdf, success=true, extractedData={experienceLevel=MID, ski (truncated)...]
2025-06-13 12:15:00 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:15:01 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 12:15:01 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 12:15:01 [http-nio-8081-exec-7] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 12:15:01 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:15:01 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@29757ff7, com.hackathon.hr.model.Candidate@4c1af832, com.hackathon (truncated)...]
2025-06-13 12:15:01 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:17:30 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 12:17:30 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 12:17:30 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 10 candidates and 10 jobs
2025-06-13 12:17:30 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 12:17:30 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:17:30 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 12:17:30 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 12:17:30 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 12:17:30 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 12:17:30 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 12:17:30 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 12:17:30 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:17:30 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@29757ff7, com.hackathon.hr.model.Candidate@4c1af832, com.hackathon (truncated)...]
2025-06-13 12:17:30 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:17:30 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@509e6f90, com.hackathon.hr.model.JobRequirement@78dfe85d, com (truncated)...]
2025-06-13 12:17:30 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:17:30 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:20:29 [RMI TCP Connection(20)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 12:20:29 [RMI TCP Connection(20)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 12:20:29 [RMI TCP Connection(20)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 12:21:52 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 72904 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 12:21:53 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 12:21:53 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 12:21:53 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 12:21:53 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 12:21:54 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 12:21:54 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 12:21:54 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 12:21:54 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 12:21:54 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1761 ms
2025-06-13 12:21:56 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 12:21:56 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 12:21:57 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 12:21:57 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 12:21:57 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 19 mappings in 'requestMappingHandlerMapping'
2025-06-13 12:21:57 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 12:21:57 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 12:21:57 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 12:21:57 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 12:21:57 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 5.314 seconds (JVM running for 6.559)
2025-06-13 12:21:59 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 12:21:59 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6859c89c
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7de5d7c7
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 12:21:59 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2ebb1fc5
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2d64a300
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@41546dd2
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 12:21:59 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:00 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 12:22:00 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 12:22:00 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 12:22:00 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 12:22:00 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 12:22:00 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 12:22:00 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:22:00 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:22:00 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 12:22:00 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@257497d4, com.hackathon.hr.model.JobRequirement@656aa2dd, com (truncated)...]
2025-06-13 12:22:00 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:00 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:04 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 12:22:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 12:22:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 12:22:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 12:22:04 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:13 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 12:22:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 12:22:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 12:22:13 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 12:22:13 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 12:22:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 12:22:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:22:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 12:22:13 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 12:22:13 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 12:22:15 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 12:22:15 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 12:22:15 [http-nio-8081-exec-6] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 12:22:15 [http-nio-8081-exec-6] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 12:22:15 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 12:22:15 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 12:22:15 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/upload.js", parameters={}
2025-06-13 12:22:15 [http-nio-8081-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 12:22:15 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 12:22:15 [http-nio-8081-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 12:22:15 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 12:22:15 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 12:22:15 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:15 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/matching.js", parameters={}
2025-06-13 12:22:15 [http-nio-8081-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 12:22:15 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:15 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 12:22:15 [http-nio-8081-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 12:22:15 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 12:22:15 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/candidates.js", parameters={}
2025-06-13 12:22:15 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 12:22:15 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 12:22:15 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:22:15 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 12:22:15 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 12:22:15 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:15 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 12:22:15 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:15 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:15 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:16 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 12:22:16 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 12:22:16 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 12:22:16 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 12:22:16 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 12:22:16 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 12:22:16 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:22:16 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:22:16 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@257497d4, com.hackathon.hr.model.JobRequirement@656aa2dd, com (truncated)...]
2025-06-13 12:22:16 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:16 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 12:22:16 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:16 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 12:22:16 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 12:22:16 [http-nio-8081-exec-4] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 12:22:16 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 12:22:16 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 12:22:16 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 12:22:16 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:22:16 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 12:22:16 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 12:22:16 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 12:22:24 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 12:22:24 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 12:22:24 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 12:22:24 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 12:22:24 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:22:41 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:22:41 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:22:41 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Processing resume upload: Aarav Sharma - Junior Developer.pdf
2025-06-13 12:22:53 [http-nio-8081-exec-8] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/7dc11ba8-1f7a-4433-88ab-f057a0ba5824-Aarav Sharma - Junior Developer.pdf
2025-06-13 12:23:00 [http-nio-8081-exec-8] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/7dc11ba8-1f7a-4433-88ab-f057a0ba5824-Aarav Sharma - Junior Developer.pdf
2025-06-13 12:23:00 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Aarav Sharma
Junior Software Developer
aarav.sharma@email.com
+91 98765 43210
linkedin.com/in/aaravsharma
github .com/aaravsharma
Jaipur, Rajasthan, India
Professional Summary
Technical Skills
Enthusiastic Junior Software Developer with 2+ years
FRONTEND
of experience in web development using modern
HTML5
CSS3
JavaScript
React
technologies. Passionate about creating clean,
efficient code and building user-friendly applications.
Bootstrap
Strong foundation in JavaScript, React, and Node is
BACKEND
with hands-on experience in full-stack development
Node.j
Express
PHP
REST APIs
projects. Eager to contribute to innovative software
solutions and grow within a dynamic development
DATABASES
team.
MongoDB
MySQL
TOOLS TECHNOLOGIES
Git GitHub
VS Code
Postman
Professional Experience
JWT
APIS INTEGRATIONS
Junior Software Developer
TechStart Solutions Pvt Ltd
Jun 2022 Present
Stripe API
Local Storage
JavaScript React Node.js MongoDB Express.js Git
Education
Developed responsive web applications using React and
JavaScript ES6+
Bachelor of Computer
Built REST APIs using Node js and Express js serving
10,000+ daily requests
Applications (BCA)
University of Rajasthan
Implemented user authentication and authorization using
2019 - 2022
JWT tokens
Collaborated with senior developers using Git for version
control and code reviews
Certifications
Optimized database queries in MongoDB reducing
.
response time by 25%
JavaScript Fundamentals freeCodeCamp
.
React Developer Course Udemy
Participated in agile development cycles with daily
.
Node js Certification Coursera
standups and sprint planning
.
Git Version Control Codecademy
Languages
Hindi: Native
Web Development Intern
English: Fluent
Digital Innovators
Jan 2022 May 2022
Rajasthani: Native
HTML5 CSS3 JavaScript Bootstrap MySQL
Created static websites using HTML5, CSS3, and
Bootstrap framework
Implemented interactive features using vanilla JavaScript
Assisted in maintaining MySQL databases and writing
basic SQL queries
Fixed UI bugs and improved cross-browser compatibility
Learned modern development practices and coding
standards
Key Projects
E-Commerce Shopping Platform
React
Node.j
Express
MongoDB
JWT
Stripe API
Built full-stack e-commerce application with React frontend
and Node js backend Implemented user authentication using
JWT. integrated Stripe payment gateway, and created admin
dashboard for inventory management. Used MongoDB for
data storage and Express js for API development.
Task Management System
JavaScript
React
Local Storage
CSS3
Bootstrap
Developed a responsive task management application using
React and JavaScript. Features include task creation, editing,
deletion. and status tracking. Implemented local storage for
data persistence and used Bootstrap for responsive design
across devices.
Restaurant Website
HTML5
CSS3
JavaScript
MySQL
PHP
Created dynamic restaurant website with online reservation
system. Used HTML5 and CSS3 for layout and styling,
JavaScript for interactive features, and PHP with MySQL for
backend functionality including reservation management and
menu display.

2025-06-13 12:23:07 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"HTML5\",\n    \"CSS3\",\n    \"JavaScript\",\n    \"React\",\n    \"Bootstrap\",\n    \"Node.js\",\n    \"Express\",\n    \"PHP\",\n    \"REST APIs\",\n    \"MongoDB\",\n    \"MySQL\",\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\",\n    \"JWT\",\n    \"Stripe API\",\n    \"Local Storage\",\n    \"JavaScript ES6+\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Communication\",\n    \"Agile development\"\n  ],\n  \"experience_level\": \"ENTRY\",\n  \"education\": \"Bachelor of Computer Applications (BCA)\",\n  \"years_of_experience\": 2,\n  \"certifications\": [\n    \"JavaScript Fundamentals - freeCodeCamp\",\n    \"React Developer Course - Udemy\",\n    \"Node.js Certification - Coursera\",\n    \"Git Version Control - Codecademy\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"Web Development\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"Node.js\",\n    \"PHP\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Bootstrap\",\n    \"Express\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Built REST APIs using Node.js and Express.js serving 10,000+ daily requests\",\n    \"Optimized database queries in MongoDB reducing response time by 25%\",\n    \"Implemented user authentication and authorization using JWT tokens\"\n  ],\n  \"summary\": \"Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":920,"outputTokens":531,"totalTokens":1451}}
2025-06-13 12:23:07 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "HTML5",
    "CSS3",
    "JavaScript",
    "React",
    "Bootstrap",
    "Node.js",
    "Express",
    "PHP",
    "REST APIs",
    "MongoDB",
    "MySQL",
    "Git",
    "GitHub",
    "VS Code",
    "Postman",
    "JWT",
    "Stripe API",
    "Local Storage",
    "JavaScript ES6+"
  ],
  "soft_skills": [
    "Collaboration",
    "Communication",
    "Agile development"
  ],
  "experience_level": "ENTRY",
  "education": "Bachelor of Computer Applications (BCA)",
  "years_of_experience": 2,
  "certifications": [
    "JavaScript Fundamentals - freeCodeCamp",
    "React Developer Course - Udemy",
    "Node.js Certification - Coursera",
    "Git Version Control - Codecademy"
  ],
  "industries": [
    "Software Development",
    "Web Development"
  ],
  "programming_languages": [
    "JavaScript",
    "Node.js",
    "PHP"
  ],
  "frameworks": [
    "React",
    "Bootstrap",
    "Express"
  ],
  "tools": [
    "Git",
    "GitHub",
    "VS Code",
    "Postman"
  ],
  "databases": [
    "MongoDB",
    "MySQL"
  ],
  "cloud_platforms": [],
  "key_achievements": [
    "Built REST APIs using Node.js and Express.js serving 10,000+ daily requests",
    "Optimized database queries in MongoDB reducing response time by 25%",
    "Implemented user authentication and authorization using JWT tokens"
  ],
  "summary": "Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects."
}
```
2025-06-13 12:23:07 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Aarav Sharma - Junior Developer.pdf
2025-06-13 12:23:07 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Processed candidate: Aarav Sharma - Junior Developer.pdf with ID: 471ebdb9-91fd-4e48-a370-b2d5adce3593
2025-06-13 12:23:07 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Aarav Sharma - Junior Developer.pdf (ID: 471ebdb9-91fd-4e48-a370-b2d5adce3593) in 25583ms
2025-06-13 12:23:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:23:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Aarav Sharma - Junior Developer.pdf, success=true, extractedData={experienceLevel=ENTRY, s (truncated)...]
2025-06-13 12:23:07 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:23:08 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:23:08 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:23:08 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Processing resume upload: Anjali Patel - Data Analyst.pdf
2025-06-13 12:23:13 [http-nio-8081-exec-9] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/7e9b8a31-2856-4d0b-b8ba-3f51079a7fa8-Anjali Patel - Data Analyst.pdf
2025-06-13 12:23:23 [http-nio-8081-exec-9] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/7e9b8a31-2856-4d0b-b8ba-3f51079a7fa8-Anjali Patel - Data Analyst.pdf
2025-06-13 12:23:23 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Pater
S Intelligence Specialist
anjali.patel@email.com
+91 97845 62310
linkedin.com/in/anjalipate
Bangalore, Karnataka, India
Professional Summary
Technical Skills
Innovative Data Analyst with 6+ years of experience in
transforming complex datasets into strategic business
Programming
insights for Indian tech startups and MNCs. Expert in
Python
R
SQL
Java
Scala
machine learning, statistical modeling, and data
visualization with proven track record of improving
business efficiency by 50% and reducing costs by
Databases
₹30 lakh annually through data-driven
recommendations.
MySQL
PostgreSQL
MongoDB
Cassandra
Snowflake
Professional Experience
Analytics & ML
Senior Data Analyst
Pandas
NumPy
Scikit-learn
TensorFlow
Flipkart Group
Feb 2022 Present
Statistical Modeling
Developed ML models for customer behavior analysis
processing 10M+ transactions daily
Created automated dashboards reducing reporting time by
Visualization
70% for 15+ stakeholders
Led data quality initiatives improving accuracy by 95%
Tableau
Power B
matplotlib
seaborn
across e-commerce platform
D3.js
Implemented A/B testing framework increasing conversion
rates by 28%
Built recommendation engines improving customer
engagement by 35%
Cloud Platforms
AWS
Azure
GCP
Spark
Hadoop
Data Analyst
Infosys Limited
Jun 2020 Jan 2022
Analyzed financial data for global banking clients using
Python and SQL
Developed predictive models for fraud detection with 92%
Key Projects
accuracy
Created Power BI dashboards for C-level executives and
stakeholders
E-commerce Customer Segmentation
Optimized database queries improving performance by
Built ML clustering model using K-means and RFM
45%
analysis to segment 5M+ customers, enabling
personalized marketing campaigns with 40% higher
conversion rates.
Junior Data Analyst
Tata Consultancy Services
Jul 2018 May 2020
Real-time Fraud Detection System
Supported market research analysis for retail and
Developed ensemble learning model combining
healthcare clients
Random Forest and XGBoost achieving 94% accuracy
Developed Excel-based models for financial forecasting
in detecting fraudulent transactions for fintech
and budgeting
application.
Assisted in data migration projects and quality assurance
testing
Supply Chain Optimization Dashboard
Created interactive Tableau dashboard tracking 50+
KPIs across inventory, logistics, and vendor
performance, reducing operational costs by ₹25 lakh
annually.
Education
Master of Technology (Computer Science)
Indian Institute of Technology, Bombay
Certifications
2016 2018
AWS Certified Data Analytics Specialty (2024)
Bachelor of Engineering (Information
Technology)
Google Professional Data Engineer (2023)
Gujarat Technological University
2012 2016
Microsoft Azure Data Scientist Associate (2023)
Tableau Desktop Certified Professional (2022)
Google Analytics Individual Qualification (2022)
Languages
Hindi (Native)
English (Fluent)
Gujarati (Native)
Tamil (Conversational)

2025-06-13 12:23:31 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Machine Learning\",\n    \"Statistical Modeling\",\n    \"Data Visualization\",\n    \"Data Quality Initiatives\",\n    \"A/B Testing\",\n    \"Recommendation Engines\",\n    \"Predictive Modeling\",\n    \"Database Query Optimization\",\n    \"Financial Forecasting\",\n    \"Budgeting\",\n    \"Data Migration\",\n    \"Quality Assurance Testing\"\n  ],\n  \"soft_skills\": [\n    \"Innovative\",\n    \"Analytical\",\n    \"Leadership\",\n    \"Communication\",\n    \"Problem-solving\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Technology (Computer Science)\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"AWS Certified Data Analytics Specialty (2024)\",\n    \"Google Professional Data Engineer (2023)\",\n    \"Microsoft Azure Data Scientist Associate (2023)\",\n    \"Tableau Desktop Certified Professional (2022)\",\n    \"Google Analytics Individual Qualification (2022)\"\n  ],\n  \"industries\": [\n    \"Tech Startups\",\n    \"MNCs\",\n    \"E-commerce\",\n    \"Global Banking\",\n    \"Retail\",\n    \"Healthcare\",\n    \"Fintech\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R\",\n    \"SQL\",\n    \"Java\",\n    \"Scala\"\n  ],\n  \"frameworks\": [\n    \"Pandas\",\n    \"NumPy\",\n    \"Scikit-learn\",\n    \"TensorFlow\",\n    \"Spark\",\n    \"Hadoop\"\n  ],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"matplotlib\",\n    \"seaborn\",\n    \"D3.js\",\n    \"Excel\"\n  ],\n  \"databases\": [\n    \"MySQL\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"Cassandra\",\n    \"Snowflake\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\",\n    \"GCP\"\n  ],\n  \"key_achievements\": [\n    \"Improved business efficiency by 50% and reduced costs by ₹30 lakh annually.\",\n    \"Increased conversion rates by 28% through A/B testing framework.\",\n    \"Achieved 94% accuracy in detecting fraudulent transactions using ensemble learning model.\"\n  ],\n  \"summary\": \"Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":934,"outputTokens":658,"totalTokens":1592}}
2025-06-13 12:23:31 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Machine Learning",
    "Statistical Modeling",
    "Data Visualization",
    "Data Quality Initiatives",
    "A/B Testing",
    "Recommendation Engines",
    "Predictive Modeling",
    "Database Query Optimization",
    "Financial Forecasting",
    "Budgeting",
    "Data Migration",
    "Quality Assurance Testing"
  ],
  "soft_skills": [
    "Innovative",
    "Analytical",
    "Leadership",
    "Communication",
    "Problem-solving"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Technology (Computer Science)",
  "years_of_experience": 6,
  "certifications": [
    "AWS Certified Data Analytics Specialty (2024)",
    "Google Professional Data Engineer (2023)",
    "Microsoft Azure Data Scientist Associate (2023)",
    "Tableau Desktop Certified Professional (2022)",
    "Google Analytics Individual Qualification (2022)"
  ],
  "industries": [
    "Tech Startups",
    "MNCs",
    "E-commerce",
    "Global Banking",
    "Retail",
    "Healthcare",
    "Fintech"
  ],
  "programming_languages": [
    "Python",
    "R",
    "SQL",
    "Java",
    "Scala"
  ],
  "frameworks": [
    "Pandas",
    "NumPy",
    "Scikit-learn",
    "TensorFlow",
    "Spark",
    "Hadoop"
  ],
  "tools": [
    "Tableau",
    "Power BI",
    "matplotlib",
    "seaborn",
    "D3.js",
    "Excel"
  ],
  "databases": [
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Cassandra",
    "Snowflake"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure",
    "GCP"
  ],
  "key_achievements": [
    "Improved business efficiency by 50% and reduced costs by ₹30 lakh annually.",
    "Increased conversion rates by 28% through A/B testing framework.",
    "Achieved 94% accuracy in detecting fraudulent transactions using ensemble learning model."
  ],
  "summary": "Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs."
}
```
2025-06-13 12:23:31 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Anjali Patel - Data Analyst.pdf
2025-06-13 12:23:31 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Processed candidate: Anjali Patel - Data Analyst.pdf with ID: 84abdc1d-b0a0-472d-81ea-6ad8d6b39cc6
2025-06-13 12:23:31 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Anjali Patel - Data Analyst.pdf (ID: 84abdc1d-b0a0-472d-81ea-6ad8d6b39cc6) in 23163ms
2025-06-13 12:23:31 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:23:31 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Anjali Patel - Data Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, skil (truncated)...]
2025-06-13 12:23:31 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:23:32 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:23:32 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:23:32 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Processing resume upload: Arjun Singh - Software Developer.pdf
2025-06-13 12:23:37 [http-nio-8081-exec-2] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/0a3567c8-6708-4b54-9b51-e57070812d6b-Arjun Singh - Software Developer.pdf
2025-06-13 12:23:41 [http-nio-8081-exec-2] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/0a3567c8-6708-4b54-9b51-e57070812d6b-Arjun Singh - Software Developer.pdf
2025-06-13 12:23:41 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Professional Summary
Experienced Full Stack Software Developer with 7+ years of
expertise in building scalable web applications and
Arjun Singh
microservices for Indian tech companies and global clients.
Proficient in modern JavaScript frameworks, cloud
Full Stack Developer
technologies, and agile methodologies. Strong track record of
leading development teams and delivering high-quality
arjun.singh@email.com
software solutions that improved system performance by 60%
+91 94567 89012
and reduced deployment time by 45%.
linkedin.com/in/arjunsingh
github.com/arjunsingh
Professional Experience
T
Hyderabad, Telangana, India
Senior Software Developer
TECHNICAL SKILLS
Zomato Limited
Mar 2022 Present
Frontend
React Node.js TypeScript MongoDB Redis AWS Docker
PostgreSQL
Led development of real-time order tracking system serving
Redis
200K+ daily orders
- Built microservices architecture reducing API response time by
55%
LANGUAGES
- Implemented automated testing pipeline achieving 90% code
Hindi
Native
coverage
English
Fluent
- Mentored 4 junior developers and conducted code reviews
Punjabi
Native
Optimized database queries reducing server costs by ₹8 lakh
monthly
Telugu
Conversational
Software Developer
TOOLS & PLATFORMS
PayTM (One97 Communications)
Jan 2020 Feb 2022
Git Docker . Kubernetes Jenkins AWS
Azure Jira Slack vs Code Intelli]
Vue.js
Express.js
MySQL
Python
Django
Jenkins
IDEA Postman Webpack
- Developed payment gateway integration handling 100 crore+
daily transactions
- Created fraud detection algorithms reducing fraudulent
transactions by 40%
- Built responsive wallet interface used by 50M+ active users
- Implemented CI/CD pipelines reducing deployment time from 4
hours to 30 minutes
Junior Software Developer
Mindtree Limited
Jul 2018 Dec 2019
Angular Spring Boot PostgreSQU HTML5 CSS3
- Developed e-commerce modules for US retail client using Angular
and Spring Boot
- Created responsive UI components improving user experience by
35%
T Participated in agile development with 2-week sprint cycles
1 Fixed 200+ bugs and implemented 50+ feature enhancements
Key Projects
Food Delivery
Cryptocurrency
Platform
Trading Bot
Built end-to-end food
Developed automated
delivery platform with real-
trading bot using Python
time tracking, payment
and machine learning
integration, and restaurant
algorithms achieving 15%
management system using
monthly returns in
MERN stack.
backtesting.
React
Node.js
Python TensorFlow
MongoDB
Redis
Education
Bachelor of Technology (Computer Science
Engineering)
Indian Institute of Technology, Hyderabad
2014 2018
Certifications & Achievements
AWS Certified Solutions Architect Associate (2024)
Google Cloud Professional Developer (2023)
MongoDB Certified Developer (2022)
Scrum Master Certified (2021)
Winner Smart India Hackathon 2017 (Government of India)
Open Source Contributor 1000+ GitHub contributions

2025-06-13 12:23:49 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Node.js\",\n    \"TypeScript\",\n    \"MongoDB\",\n    \"Redis\",\n    \"AWS\",\n    \"Docker\",\n    \"PostgreSQL\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"MySQL\",\n    \"Python\",\n    \"Django\",\n    \"Jenkins\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"TensorFlow\",\n    \"Git\",\n    \"Kubernetes\",\n    \"Azure\",\n    \"Jira\",\n    \"Slack\",\n    \"VS Code\",\n    \"IntelliJ IDEA\",\n    \"Postman\",\n    \"Webpack\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Agile Methodologies\",\n    \"Problem Solving\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science Engineering)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect Associate (2024)\",\n    \"Google Cloud Professional Developer (2023)\",\n    \"MongoDB Certified Developer (2022)\",\n    \"Scrum Master Certified (2021)\"\n  ],\n  \"industries\": [\n    \"Technology\",\n    \"E-commerce\",\n    \"Finance\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"HTML5\",\n    \"CSS3\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Node.js\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"Django\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"AWS\",\n    \"Azure\",\n    \"Jira\",\n    \"Slack\",\n    \"VS Code\",\n    \"IntelliJ IDEA\",\n    \"Postman\",\n    \"Webpack\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"Redis\",\n    \"PostgreSQL\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\"\n  ],\n  \"key_achievements\": [\n    \"Improved system performance by 60% and reduced deployment time by 45%.\",\n    \"Reduced API response time by 55% through microservices architecture.\",\n    \"Reduced fraudulent transactions by 40% with fraud detection algorithms.\"\n  ],\n  \"summary\": \"Experienced Full Stack Software Developer with 7+ years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Strong track record of leading development teams and delivering high-quality software solutions.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":937,"outputTokens":733,"totalTokens":1670}}
2025-06-13 12:23:49 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Node.js",
    "TypeScript",
    "MongoDB",
    "Redis",
    "AWS",
    "Docker",
    "PostgreSQL",
    "Vue.js",
    "Express.js",
    "MySQL",
    "Python",
    "Django",
    "Jenkins",
    "Angular",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "TensorFlow",
    "Git",
    "Kubernetes",
    "Azure",
    "Jira",
    "Slack",
    "VS Code",
    "IntelliJ IDEA",
    "Postman",
    "Webpack"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Agile Methodologies",
    "Problem Solving"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science Engineering)",
  "years_of_experience": 7,
  "certifications": [
    "AWS Certified Solutions Architect Associate (2024)",
    "Google Cloud Professional Developer (2023)",
    "MongoDB Certified Developer (2022)",
    "Scrum Master Certified (2021)"
  ],
  "industries": [
    "Technology",
    "E-commerce",
    "Finance"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "HTML5",
    "CSS3"
  ],
  "frameworks": [
    "React",
    "Node.js",
    "Vue.js",
    "Express.js",
    "Angular",
    "Spring Boot",
    "Django"
  ],
  "tools": [
    "Git",
    "Docker",
    "Kubernetes",
    "Jenkins",
    "AWS",
    "Azure",
    "Jira",
    "Slack",
    "VS Code",
    "IntelliJ IDEA",
    "Postman",
    "Webpack"
  ],
  "databases": [
    "MongoDB",
    "Redis",
    "PostgreSQL",
    "MySQL"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure"
  ],
  "key_achievements": [
    "Improved system performance by 60% and reduced deployment time by 45%.",
    "Reduced API response time by 55% through microservices architecture.",
    "Reduced fraudulent transactions by 40% with fraud detection algorithms."
  ],
  "summary": "Experienced Full Stack Software Developer with 7+ years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Strong track record of leading development teams and delivering high-quality software solutions."
}
```
2025-06-13 12:23:49 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Arjun Singh - Software Developer.pdf
2025-06-13 12:23:49 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Processed candidate: Arjun Singh - Software Developer.pdf with ID: 8f0ec8cd-0f80-4a94-aa9a-a9a6a0b9e6bf
2025-06-13 12:23:49 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Arjun Singh - Software Developer.pdf (ID: 8f0ec8cd-0f80-4a94-aa9a-a9a6a0b9e6bf) in 17444ms
2025-06-13 12:23:49 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:23:49 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Arjun Singh - Software Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, (truncated)...]
2025-06-13 12:23:49 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:23:50 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:23:50 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:23:50 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Processing resume upload: Deepika Reddy - Java Developer.pdf
2025-06-13 12:23:55 [http-nio-8081-exec-4] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/74ac387b-93e1-4886-9235-892633dc6821-Deepika Reddy - Java Developer.pdf
2025-06-13 12:24:24 [http-nio-8081-exec-4] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/74ac387b-93e1-4886-9235-892633dc6821-Deepika Reddy - Java Developer.pdf
2025-06-13 12:24:24 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Deepika Reddy
Java Developer & Backend Engineer
dccpika.reddy@email .com
H
+91 98712 34567
- linkedin com/1 in/deepikareddy
github.com/deepikareddy
T
Hyderabad, Telangana, India
PROFESSIONAL SUMMARY
TECHNICAL
SKILLS
Dedicated Java Developer with 5+ years of experience in
designing and developing enterprise level applications
CORE JAVA
using Java Spring Framework and microservices
lava I'
Java 11
architecture Expertise in building scalable backend
systems, RESTful APIs, and database integration with
lava OOP Concepts
strong knowledge of software design patterns and best
practices Proven track record of optimizing application
Multithreading
performance and delivering high-quality code in agile
environments
FRAMEWORKS
PROFESSIONAL EXPERIENCE
Spring Boot
Spring MVC
Spring Security
Senior Java Developer
Hibernato
JPA
Accenture Solutions
Jan 2022 Present
Java 17
Spring Boot
Spring Security
Microservices
DATABASES
PostgreSQL
Redis
Docker
Kafka
JUnit
PostgreSQI
MySQI
Developed microservices architecture using Java 17 and Spring
Oracle DB
Redis
Boot serving 500K+ daily transactions
Implemented secure authentication and authorization using
JDBC
Spring Security and JWT tokens
Designed and optimized PostgreSQI database schemas reducing
query execution time by 50%
WEB
Built event driven systems using Apache Kafka for real-time
TECHNOLOGIES
data processing
RESTAI
Implemented Redis caching strategies improving application
response 40%
Microservice
Servlets
Containerized applications using Docker and deployed on
Kubernetes clusters
JSP
SON
Achieved 90% code coverage through compreher sive unit
testing with JUnit and Mockito
TOOLS DEVOPS
Docker Kafka
Java Developer
Mayen Gi
Tomcat
Capgemini India
Mar 2020 Dec 2021
Java 11
Spring MVC
libernato
MySQI
RESTAPI
TESTING
Maven
Git
Unit
Mockito
Buil enterprise web applications using Java 11. Spring MVC.
and Hibernate ORM
Integration Testing
Developed RESTful APIs for frontend consumption and third-
party integrations
Unit Testing
Implemented database operations using Hibernate with MySQL
backend
Used Mayen for project management and dependency resolution
EDUCATION
Collaborated with cross-functional teams using Git for version
control
Participated code reviews and maintained high coding
Bachelor Technology
standards
(Computer Science)
Jawaharlal Nehru
Technological University
2015-2019
Associate Software Engineer
Wipro Technologies
Jul 2019 - Fcb 2020
CERTIFICATIONS
Juya8
Servlets
JSP
JDBC
Oracle
Tomcat
Oracle Certified Professional Java
Developed web applications using Java Servlets, and ISP
SE
technologies
Implemented database connectivity using JDBC with Oracle
Spring Professional Certification
database
Deployed applications on Apache Tomcat server
AWS Certified Developer
Fixed bugs and implemented feature enhancements based on
Associate
client requirements
Learned enterprise development practices and coding standards
Docker Certified Associate
Apache Kafka Developer
FEATURED PROJECTS
Microservice Architecture
LANGUAGES
Banking
E-Commerce Order
Microservices
Management
Platform
Telugu: Native
Java II
Spring MVC
Hindi: Fluent
Java 17
Spring Boot
libernate
MySQL
English: Fluent
PostgreSQ1
Redis
Tamil: Basic
RESTAPI
Kafka
Docker
Built order management
system using Java and
KEY
Architected prehensive
banki platform using
Spring MVC framework
ACHIEVEMENTS
microservices with Java 17
Implemented Hibernate for
and Spring Boot Implemented
ORM mapping with MySQL
database created REST APIs
PostgreSQL data
. performance improvement
persistence Redis caching
for order processing and
database queries
and Kalka for event streaming
integrated payment gateway
90% coverage
testing
Containerized services using
services
Led team of developers
500K daily transactions handled
Docker scalable
Zero production bugs in last months
deployment
Employee
Inventory Tracking
Management stem
API
Java 8
Servlets
Spring Boot
JSP
JDBC
Spring Security
JUnit
Oracle DB
Mockito
Mayen
Developed employee
Created REST for
management application using
inventory management using
Java with Servlets JSP
Spring Spring
for interface Used JDBC
Security authentication
for database operations with
Implemented comprehensive
Oracle backend implemented
testing with JUnit and
CRU D operations and
Mockito managed project
employee reporting features
dependencies with Mayen
build tool

2025-06-13 12:24:30 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Java 11\",\n    \"Java OOP Concepts\",\n    \"Multithreading\",\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\",\n    \"RESTful APIs\",\n    \"Microservices\",\n    \"Servlets\",\n    \"JSP\",\n    \"JDBC\",\n    \"JSON\",\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Integration Testing\",\n    \"Unit Testing\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Code Reviews\",\n    \"High Coding Standards\",\n    \"Team Leadership\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"Oracle Certified Professional Java SE\",\n    \"Spring Professional Certification\",\n    \"AWS Certified Developer Associate\",\n    \"Docker Certified Associate\",\n    \"Apache Kafka Developer\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\"\n  ],\n  \"tools\": [\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\",\n    \"Tomcat\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"Oracle DB\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions\",\n    \"Designed and optimized PostgreSQL database schemas reducing query execution time by 50%\",\n    \"Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito\"\n  ],\n  \"summary\": \"Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1286,"outputTokens":647,"totalTokens":1933}}
2025-06-13 12:24:30 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Java 11",
    "Java OOP Concepts",
    "Multithreading",
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA",
    "RESTful APIs",
    "Microservices",
    "Servlets",
    "JSP",
    "JDBC",
    "JSON",
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Integration Testing",
    "Unit Testing",
    "Docker",
    "Kafka",
    "Kubernetes"
  ],
  "soft_skills": [
    "Collaboration",
    "Code Reviews",
    "High Coding Standards",
    "Team Leadership"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 5,
  "certifications": [
    "Oracle Certified Professional Java SE",
    "Spring Professional Certification",
    "AWS Certified Developer Associate",
    "Docker Certified Associate",
    "Apache Kafka Developer"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "Java"
  ],
  "frameworks": [
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA"
  ],
  "tools": [
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Docker",
    "Kafka",
    "Kubernetes",
    "Tomcat"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "Oracle DB",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions",
    "Designed and optimized PostgreSQL database schemas reducing query execution time by 50%",
    "Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito"
  ],
  "summary": "Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments."
}
```
2025-06-13 12:24:30 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Deepika Reddy - Java Developer.pdf
2025-06-13 12:24:30 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Processed candidate: Deepika Reddy - Java Developer.pdf with ID: 8215498d-af88-4821-b37c-0f7b8bd53351
2025-06-13 12:24:30 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Deepika Reddy - Java Developer.pdf (ID: 8215498d-af88-4821-b37c-0f7b8bd53351) in 39754ms
2025-06-13 12:24:30 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:24:30 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Deepika Reddy - Java Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, s (truncated)...]
2025-06-13 12:24:30 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:24:31 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:24:31 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:24:31 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Processing resume upload: Karan Singh - DevOps Engineer.pdf
2025-06-13 12:24:34 [http-nio-8081-exec-5] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/c238560c-b08c-4579-ac5c-2636988bb747-Karan Singh - DevOps Engineer.pdf
2025-06-13 12:24:54 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/c238560c-b08c-4579-ac5c-2636988bb747-Karan Singh - DevOps Engineer.pdf
2025-06-13 12:24:54 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
karan.singh@email.com
+91 97531 86420
Karan Singh
DevOps Engineer & Cloud Architect
linkedin.com/in/karansingh
STATUS: ACTIVE UPTIME: 5+ YEARS I DEPLOYMENTS: 1000+
in github.com/karansingh
o
Gurgaon, Haryana, India
$ cat professional_summary.txt
TECHNICAL ARSENAL
CLOUD PLATFORMS
Experienced DevOps Engineer with 5+ years of expertise in automating
AWS EC2
AWS EKS
AWS RDS
AWS
deployment pipelines, managing cloud infrastructure. and orchestrating
AWS CloudWatch
AWS CodePipeline
AWS CLI
containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD
automation with strong background in Infrastructure as Code and monitoring
solutions Proven track record of reducing deployment time by 80% and
CONTAINERIZATION
improving system reliability to 99.9% uptime through robust DevOps practices.
Docker
Kubernetes
Docker Swarm
Helm
Container Registry
$ grep -r "experience" /career/history
CI/CD TOOLS
[PROCESS]
Jenkins
GitLab
GitHub Actions
Git
Maven
Senior DevOps Engineer
SonarQub
Paytm (One97 Communications)
Jan 2022 Present
AWS
Kubernetes
Docker
Jenkins
Terraform
Ansible
Prometheus
Grafana
ELK Stack
INFRASTRUCTURE AS CODE
Architected AWS cloud infrastructure using Terraform managing 100+ EC2 instances
Terraform
Ansible
CloudFormation
YAML
JSON
and RDS clusters
Implemented Kubernetes orchestration for microservices serving 50M+ daily
transactions
MONITORING LOGGING
Built Jenkins CI/CD pipelines reducing deployment time from 4 hours to 30 minutes
Prometheus
Grafana
ELK Stack
Alertmanager
Elasticsearch
Kibana
Configured monitoring stack using Prometheus and Grafana achieving 99.9% uptime SLA
Automated infrastructure provisioning using Ansible playbooks saving 20 hours/week
Implemented ELK Stack for centralized logging and real-time log analysis
SYSTEM ADMINISTRATION
Managed Docker container registry and optimized image sizes by 60%
Linux
Shell Scripting
Nainx
Apache
Tomcat
Redis
[PROCESS]
# PERFORMANCE METRICS
DevOps Engineer
Nagarro Software
Mar 2021 Dec 2021
99.9%
80%
AWS EC2
Docker Swarm
GitLab CI
CloudFormation
Nginx
Redis
SYSTEMUPTIME
DEPLOY TIME REDUCTION
Deployed applications on AWS EC2 using Docker Swarm for container orchestration
1000+
100+
Created GitLab CT pipelines for automated testing and deployment processes
DEPLOYMENTS
EC2 INSTANCES
Implemented infrastructure using AWS CloudFormation templates
Configured Nginx load balancers for high availability and traffic distribution
# SYSTEM CONFIGURATION
Set up Redis clusters for caching and session management
Optimized application performance resulting in 40% faster response times
Bachelor of Technology (Information
Technology)
Guru Gobind Singh Indraprastha University
2016 2020
[PROCESS]
Junior DevOps Engineer
# SECURITY CERTIFICATES
Mindtree Limited
Jun 2020 Feb 2021
Linux
Shell Scripting
Git
Mayer
Tomcat
AWS Certified DevOps Engineer Professional
Managed Linux servers and wrote Shell scripts for automation tasks
Certified Kubernetes Administrator (CKA)
Implemented Git workflows and branching strategies for development teams
Docker Certified Associate
Configured Mayen build processes for Java applications
Terraform Associate Certification
Deployed applications on Apache Tomcat servers
Learned infrastructure management and deployment best practices
Jenkins Certified Engineer
AWS Solutions Architect Associate
Prometheus Certified Associate
$ ls -la /projects/featured
LANGUAGE SUPPORT
[PROJECT]
[PROJECT]
Microservices Platform
CI/CD Automation Pipeline
Hindi: Native
Kubernetes
Docker
AWS EKS
Terraform
Jenkins
GitLab
Docker
English: Fluent
Helm
AWS CodePipeline
SonarQube
Punjabi: Native
Urdu: Conversational
Built scalable microservices platform on
Implemented end-to-end CI/CD pipeline
AWS EKS using Kubernetes and Docker.
using Jenkins and GitLab CI with Docker
Automated infrastructure deployment with
containerization. Integrated AWS
ADDITIONAL MODULES
Terraform and managed application
CodePipeline for cloud-native deployments
deployments using Helm charts for
and SonarQube for code quality analysis.
Microservices Architecture
consistent and reliable releases.
Site Reliability Engineering
cloud Security Best Practices
Disaster Recovery Planning
Cost Optimization Strategies
Agile DevOps Methodologies
[PROJECT]
[PROJECT]
Infrastructure Monitoring
Infrastructure as Code
SYSTEM STATUS
Prometheus
Grafana
ELK Stack
Terraform
Ansible
CloudFormation
AWS CloudWatch
Alertmanager
Shell Scripting
AWS CLI
OPERATIONAL: All systems running
MONITORING: Active 24/7
BACKUP: Automated daily
Set up comprehensive monitoring solution
Automated infrastructure provisioning
SECURITY Enhanced protection
PERFORMANCE: Optimized
using Prometheus and Grafana with ELK
using Terraform and Ansible with AWS
Stack for log aggregation. Configured AWS
CloudFormation. Created Shell scripts and
CloudWatch and Alertmanager for proactive
AWS CLI automation for infrastructure
incident management
management and deployment processes.

2025-06-13 12:25:01 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"AWS EC2\", \"AWS EKS\", \"AWS RDS\", \"AWS CloudWatch\", \"AWS CodePipeline\", \"AWS CLI\",\n    \"Docker\", \"Kubernetes\", \"Docker Swarm\", \"Helm\", \"Container Registry\",\n    \"Jenkins\", \"GitLab\", \"GitHub Actions\", \"Git\", \"Maven\", \"SonarQub\",\n    \"Terraform\", \"Ansible\", \"CloudFormation\", \"YAML\", \"JSON\",\n    \"Prometheus\", \"Grafana\", \"ELK Stack\", \"Alertmanager\", \"Elasticsearch\", \"Kibana\",\n    \"Linux\", \"Shell Scripting\", \"Nginx\", \"Apache\", \"Tomcat\", \"Redis\"\n  ],\n  \"soft_skills\": [\n    \"Problem-solving\", \"Automation\", \"Optimization\", \"Team Collaboration\", \"Project Management\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Information Technology)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified DevOps Engineer Professional\",\n    \"Certified Kubernetes Administrator (CKA)\",\n    \"Docker Certified Associate\",\n    \"Terraform Associate Certification\",\n    \"Jenkins Certified Engineer\",\n    \"AWS Solutions Architect Associate\",\n    \"Prometheus Certified Associate\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Financial Technology\"\n  ],\n  \"programming_languages\": [\n    \"Shell Scripting\"\n  ],\n  \"frameworks\": [\n    \"Kubernetes\",\n    \"Docker Swarm\",\n    \"Helm\"\n  ],\n  \"tools\": [\n    \"Jenkins\",\n    \"GitLab\",\n    \"GitHub Actions\",\n    \"Git\",\n    \"Maven\",\n    \"SonarQub\",\n    \"Terraform\",\n    \"Ansible\",\n    \"CloudFormation\",\n    \"Prometheus\",\n    \"Grafana\",\n    \"ELK Stack\",\n    \"Alertmanager\",\n    \"Elasticsearch\",\n    \"Kibana\",\n    \"Nginx\",\n    \"Apache\",\n    \"Tomcat\",\n    \"Redis\",\n    \"AWS CLI\"\n  ],\n  \"databases\": [\n    \"AWS RDS\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Reduced deployment time by 80%\",\n    \"Improved system reliability to 99.9% uptime\",\n    \"Optimized Docker image sizes by 60%\"\n  ],\n  \"summary\": \"Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment times and enhancing system reliability.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1431,"outputTokens":701,"totalTokens":2132}}
2025-06-13 12:25:01 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "AWS EC2", "AWS EKS", "AWS RDS", "AWS CloudWatch", "AWS CodePipeline", "AWS CLI",
    "Docker", "Kubernetes", "Docker Swarm", "Helm", "Container Registry",
    "Jenkins", "GitLab", "GitHub Actions", "Git", "Maven", "SonarQub",
    "Terraform", "Ansible", "CloudFormation", "YAML", "JSON",
    "Prometheus", "Grafana", "ELK Stack", "Alertmanager", "Elasticsearch", "Kibana",
    "Linux", "Shell Scripting", "Nginx", "Apache", "Tomcat", "Redis"
  ],
  "soft_skills": [
    "Problem-solving", "Automation", "Optimization", "Team Collaboration", "Project Management"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Information Technology)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified DevOps Engineer Professional",
    "Certified Kubernetes Administrator (CKA)",
    "Docker Certified Associate",
    "Terraform Associate Certification",
    "Jenkins Certified Engineer",
    "AWS Solutions Architect Associate",
    "Prometheus Certified Associate"
  ],
  "industries": [
    "IT Services",
    "Financial Technology"
  ],
  "programming_languages": [
    "Shell Scripting"
  ],
  "frameworks": [
    "Kubernetes",
    "Docker Swarm",
    "Helm"
  ],
  "tools": [
    "Jenkins",
    "GitLab",
    "GitHub Actions",
    "Git",
    "Maven",
    "SonarQub",
    "Terraform",
    "Ansible",
    "CloudFormation",
    "Prometheus",
    "Grafana",
    "ELK Stack",
    "Alertmanager",
    "Elasticsearch",
    "Kibana",
    "Nginx",
    "Apache",
    "Tomcat",
    "Redis",
    "AWS CLI"
  ],
  "databases": [
    "AWS RDS",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Reduced deployment time by 80%",
    "Improved system reliability to 99.9% uptime",
    "Optimized Docker image sizes by 60%"
  ],
  "summary": "Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment times and enhancing system reliability."
}
```
2025-06-13 12:25:01 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Karan Singh - DevOps Engineer.pdf
2025-06-13 12:25:01 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Processed candidate: Karan Singh - DevOps Engineer.pdf with ID: 07f5b629-8725-4f82-9232-f940c63836e2
2025-06-13 12:25:01 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Karan Singh - DevOps Engineer.pdf (ID: 07f5b629-8725-4f82-9232-f940c63836e2) in 29631ms
2025-06-13 12:25:01 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:25:01 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Karan Singh - DevOps Engineer.pdf, success=true, extractedData={experienceLevel=SENIOR, sk (truncated)...]
2025-06-13 12:25:01 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:25:02 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:25:02 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:25:02 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Processing resume upload: Kavya Nair - Full Stack Developer.pdf
2025-06-13 12:25:04 [http-nio-8081-exec-8] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/9dc8e75b-f042-4509-8ecb-06430d1b2662-Kavya Nair - Full Stack Developer.pdf
2025-06-13 12:25:14 [http-nio-8081-exec-8] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/9dc8e75b-f042-4509-8ecb-06430d1b2662-Kavya Nair - Full Stack Developer.pdf
2025-06-13 12:25:14 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
+91 98765 12345
Full Stack Developer
linkedin com/in/kavyanair
"Building scalable web solutions with modern technologies'
github.com/kavyanair
9
Kochi. Kerala India
PROFESSIONAL SUMMARY
TECHNICAL
ARSENAL
Passionate Full Stack Developer with 5+ years of experience
FRONTEND
building robust web applications using modern JavaScript
React
Vue.js
Angular
frameworks and cloud technologies. Expertise in React, Node.js,
TypeScript
JavaScript
Python, and AWS with a strong focus on creating scalable,
HTML5
CSS3
maintainable solutions. Proven track record of leading development
teams and delivering high-quality software that serves 100K+ users
daily.
BACKEND
Node.js
Express.js
Python
Django
Java
Spring Boot
PROFESSIONAL EXPERIENCE
DATABASES
PostgreSQL
MySQL
Senior Full Stack Developer
MongoDB
Redis
Oracle DE
Freshworks Inc.
Mar 2022 Present
React
TypeScript
Node.js
Express.js
PostgreSQL
Redis
AWS
Docker
CLOUD DEVOPS
Kubernetes
AWS
Docker
Kubernetes
Architected and developed microservices using Node js and Express.js
Jenkins
GitHub Actions
serving 100K+ daily active users
Built responsive React applications with TypeScript ensuring type safety and
maintainable code
APIS TOOLS
Optimized PostgreSQL database queries and implemented Redis caching
REST APIs
GraphQL
reducing API response time by 60%
Socket.ic
JWT
WebRTC
Deployed applications on AWS using Docker containers and Kubernetes
Chart.js
JUnit
Swagger
orchestration
Led team of developers and mentored junior developers in best practices
Implemented CI/CD pipelines using Jenkins and GitHub Actions reducing
EDUCATION
deployment time by 50%
Master of Computer
Applications (MCA)
Cochin University of Science &
Technology
Full Stack Developer
2017 2019
Zoho Corporation
Jan 2020 Feb 2022
Vue.js
Python
Django
MySQL
MongoDB
REST APIs
GraphQL
Bachelor of Science
(Computer Science)
Developed enterprise CRM features using Vue js frontend and Python Django
University of Kerala
backend
2014 2017
Created RESTful APIs and GraphQL endpoints handling 50K+ requests per
hour
Designed and implemented database schemas in MySQL and MongoDB for
CERTIFICATIONS
optimal performance
Integrated third-party services and APIs for email marketing and analytics
AWS Certified Solutions Architect
functionality
Participated in code reviews and maintained high code quality standards
MongoDB Certified Developer
React Professional Certificate
Node.js Application Developer
Software Developer
Docker Certified Associate
UST Global
Jun 2019 Dec 2019
Kubernetes Administrator
Angular
Java
Spring Boot
Oracle DB
JUnit
Built banking applications using Angular frontend and Java Spring Boot
backend
LANGUAGES
Implemented secure user authentication and authorization using Spring
Security
Malayalam: Native
Developed unit tests using JUnit achieving 85% code coverage
English: Fluent
Hindi: Conversational
Worked with Oracle databases and optimized complex SQL queries
Tamil: Basic
FEATURED PROJECTS
Social Media Analytics
E-Learning Management
Platform
System
React Node.js MongoDB
Vue.js Python Django
Redis Chart.js AWS
PostgreSQL WebRTC
Developed comprehensive social
Built an online learning platform with
media analytics dashboard using
Vue. js frontend and Django backend
React and Chart. js for data
Integrated video conferencing using
visualization. Built scalable backend
WebRTC, implemented course
with Node.js and MongoDB,
management features, and used
implemented Redis for caching, and
PostgreSQL for data storage with
deployed on AWS with auto-scaling
automated backups.
capabilities.
Real-time Chat Application
Inventory Management API
TypeScript Socket.io Express.js
Java
Spring Boot MySQL
JWT
Docker
JUnit
Swagger
Created real-time messaging
Developed RESTful API for inventory
application using Socket io for
management using Java Spring Boot
WebSocket communication and
and MySQL Created comprehensive
TypeScript for type safety.
API documentation with Swagger,
Implemented JWT authentication,
implemented unit testing with JUnit,
built with Express js backend and
and added data validation and error
containerized using Docker for easy
handling.
deployment.

2025-06-13 12:25:22 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"Python\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Java\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"REST APIs\",\n    \"GraphQL\",\n    \"Socket.io\",\n    \"JWT\",\n    \"WebRTC\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"Swagger\",\n    \"Spring Security\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Code Quality Standards\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Computer Applications (MCA)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect\",\n    \"MongoDB Certified Developer\",\n    \"React Professional Certificate\",\n    \"Node.js Application Developer\",\n    \"Docker Certified Associate\",\n    \"Kubernetes Administrator\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"CRM\",\n    \"Banking\",\n    \"Analytics\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Spring Boot\"\n  ],\n  \"tools\": [\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"GitHub Actions\",\n    \"Swagger\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"WebRTC\",\n    \"Socket.io\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"MongoDB\",\n    \"Redis\",\n    \"Oracle DB\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Architected and developed microservices serving 100K+ daily active users\",\n    \"Optimized PostgreSQL database queries and implemented Redis caching reducing API response time by 60%\",\n    \"Implemented CI/CD pipelines reducing deployment time by 50%\"\n  ],\n  \"summary\": \"Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1215,"outputTokens":684,"totalTokens":1899}}
2025-06-13 12:25:22 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Vue.js",
    "Angular",
    "TypeScript",
    "JavaScript",
    "Python",
    "Node.js",
    "Express.js",
    "Django",
    "Java",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "REST APIs",
    "GraphQL",
    "Socket.io",
    "JWT",
    "WebRTC",
    "Chart.js",
    "JUnit",
    "Swagger",
    "Spring Security"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Code Quality Standards"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Computer Applications (MCA)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified Solutions Architect",
    "MongoDB Certified Developer",
    "React Professional Certificate",
    "Node.js Application Developer",
    "Docker Certified Associate",
    "Kubernetes Administrator"
  ],
  "industries": [
    "Software Development",
    "CRM",
    "Banking",
    "Analytics"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "Java"
  ],
  "frameworks": [
    "React",
    "Vue.js",
    "Angular",
    "Node.js",
    "Express.js",
    "Django",
    "Spring Boot"
  ],
  "tools": [
    "Docker",
    "Kubernetes",
    "Jenkins",
    "GitHub Actions",
    "Swagger",
    "Chart.js",
    "JUnit",
    "WebRTC",
    "Socket.io"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "MongoDB",
    "Redis",
    "Oracle DB"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Architected and developed microservices serving 100K+ daily active users",
    "Optimized PostgreSQL database queries and implemented Redis caching reducing API response time by 60%",
    "Implemented CI/CD pipelines reducing deployment time by 50%"
  ],
  "summary": "Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily."
}
```
2025-06-13 12:25:22 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Kavya Nair - Full Stack Developer.pdf
2025-06-13 12:25:22 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Processed candidate: Kavya Nair - Full Stack Developer.pdf with ID: f9850109-081f-4df2-8ccd-e6be3706b5f0
2025-06-13 12:25:22 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Kavya Nair - Full Stack Developer.pdf (ID: f9850109-081f-4df2-8ccd-e6be3706b5f0) in 19806ms
2025-06-13 12:25:22 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:25:22 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Kavya Nair - Full Stack Developer.pdf, success=true, extractedData={experienceLevel=SENIOR (truncated)...]
2025-06-13 12:25:22 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:25:23 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:25:23 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:25:23 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Processing resume upload: Mei Chen - Marketing Analyst.pdf
2025-06-13 12:25:33 [http-nio-8081-exec-1] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/dcaa7a99-bb46-4ad7-93b7-da9f3067d597-Mei Chen - Marketing Analyst.pdf
2025-06-13 12:25:42 [http-nio-8081-exec-1] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/dcaa7a99-bb46-4ad7-93b7-da9f3067d597-Mei Chen - Marketing Analyst.pdf
2025-06-13 12:25:42 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Mei Chen
Marketing Analyst & Growth Strategist
mei.chen@email.com
+65 9876 5432
linkedin .com/in/meichen
Singapore
PROFESSIONAL SUMMARY
Core Skills
Data Analytics
95%
Data-driven Marketing Analyst with 6+ years of experience in
SQL & Python
90%
digital marketing analytics and customer insights across Asia-
Tableau & Power BI
88%
Pacific markets. Expert in transforming complex data into
actionable marketing strategies that drove 45% increase in ROI
Google Analytics
92%
and 35% growth in customer acquisition. Specialized in cross-
cultural marketing campaigns and multilingual market analysis.
A/B Testing
85%
Languages
PROFESSIONAL EXPERIENCE
Mandarin
English
Native
Fluent
Senior Marketing Analyst
Hindi
Shopee Singapore
Jan 2022 Present
Malay
Conversational
Basic
Analyzed user behavior data from 8 Southeast Asian markets with
100M+ active users
Developed attribution models improving campaign ROI
Education
measurement accuracy by 50%
Led A/B testing initiatives across mobile and web platforms with
28% conversion improvement
Master of Science in
Marketing Analytics
Created automated dashboards reducing manual reporting time by
National University of
75%
Singapore
2016 2018
Managed marketing analytics for flash sales generating S$50M+
revenue
Bachelor of Business
Administration
Nanyang Technological
University
Marketing Data Analyst
2012 2016
Grab Holdings
Mar 2020 Dec 2021
Performed cohort analysis for ride-hailing and food delivery
services across 6 countries
Certifications
Built predictive models for customer lifetime value with 89%
accuracy
Google Analytics 4 Certified
Optimized marketing spend allocation reducing CAC by 30%
across all verticals
Facebook Blueprint Certified
Conducted market research for new service launches in emerging
markets
Tableau Desktop Specialist
AWS Cloud Practitioner
Junior Marketing Analyst
Google Ads Certified
ByteDance (TikTok)
Jun 2018 Feb 2020
Analyzed viral content patterns and user engagement metrics for
HubSpot Marketing Analytics
APAC region
Created weekly performance reports for marketing campaigns
across 12 markets
Supported influencer marketing ROI analysis and campaign
optimization
Assisted in competitive analysis and market positioning strategies

2025-06-13 12:25:47 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Data Analytics\",\n    \"SQL\",\n    \"Python\",\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\",\n    \"A/B Testing\",\n    \"Predictive Modeling\",\n    \"Marketing Spend Allocation\",\n    \"Market Research\",\n    \"Cohort Analysis\"\n  ],\n  \"soft_skills\": [\n    \"Cross-cultural Marketing\",\n    \"Multilingual Market Analysis\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Science in Marketing Analytics\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"Google Analytics 4 Certified\",\n    \"Facebook Blueprint Certified\",\n    \"Tableau Desktop Specialist\",\n    \"AWS Cloud Practitioner\",\n    \"Google Ads Certified\",\n    \"HubSpot Marketing Analytics\"\n  ],\n  \"industries\": [\n    \"Digital Marketing\",\n    \"E-commerce\",\n    \"Ride-hailing\",\n    \"Food Delivery\",\n    \"Social Media\"\n  ],\n  \"programming_languages\": [\n    \"SQL\",\n    \"Python\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\"\n  ],\n  \"databases\": [\n    \"SQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Drove 45% increase in ROI and 35% growth in customer acquisition\",\n    \"Improved campaign ROI measurement accuracy by 50%\",\n    \"Achieved 28% conversion improvement through A/B testing initiatives\"\n  ],\n  \"summary\": \"Data-driven Marketing Analyst with over 6 years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":751,"outputTokens":478,"totalTokens":1229}}
2025-06-13 12:25:47 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Data Analytics",
    "SQL",
    "Python",
    "Tableau",
    "Power BI",
    "Google Analytics",
    "A/B Testing",
    "Predictive Modeling",
    "Marketing Spend Allocation",
    "Market Research",
    "Cohort Analysis"
  ],
  "soft_skills": [
    "Cross-cultural Marketing",
    "Multilingual Market Analysis"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Science in Marketing Analytics",
  "years_of_experience": 6,
  "certifications": [
    "Google Analytics 4 Certified",
    "Facebook Blueprint Certified",
    "Tableau Desktop Specialist",
    "AWS Cloud Practitioner",
    "Google Ads Certified",
    "HubSpot Marketing Analytics"
  ],
  "industries": [
    "Digital Marketing",
    "E-commerce",
    "Ride-hailing",
    "Food Delivery",
    "Social Media"
  ],
  "programming_languages": [
    "SQL",
    "Python"
  ],
  "frameworks": [],
  "tools": [
    "Tableau",
    "Power BI",
    "Google Analytics"
  ],
  "databases": [
    "SQL"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Drove 45% increase in ROI and 35% growth in customer acquisition",
    "Improved campaign ROI measurement accuracy by 50%",
    "Achieved 28% conversion improvement through A/B testing initiatives"
  ],
  "summary": "Data-driven Marketing Analyst with over 6 years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis."
}
```
2025-06-13 12:25:47 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Mei Chen - Marketing Analyst.pdf
2025-06-13 12:25:47 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Processed candidate: Mei Chen - Marketing Analyst.pdf with ID: 64eaacec-1c7c-4c3e-8fe5-22da46345e63
2025-06-13 12:25:47 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Mei Chen - Marketing Analyst.pdf (ID: 64eaacec-1c7c-4c3e-8fe5-22da46345e63) in 24454ms
2025-06-13 12:25:47 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:25:47 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Mei Chen - Marketing Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, ski (truncated)...]
2025-06-13 12:25:47 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:25:48 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:25:48 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:25:48 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Processing resume upload: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 12:25:54 [http-nio-8081-exec-6] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/b419e38d-8219-4002-a711-e9a87a9f599b-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 12:26:01 [http-nio-8081-exec-6] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/b419e38d-8219-4002-a711-e9a87a9f599b-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 12:26:01 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
PROFESSIONAL SUMMARY
Results-oriented Sales & Marketing professional with 7+
years of experience in the Indian market, specializing in
digital marketing strategies and B2B sales. Proven track
Priya Sharma
record of increasing revenue by 40% and expanding
market presence across Tier 1 and Tier 2 cities. Expert in
Sales & Marketing Professional
managing multi-channel campaigns and building long-term
client relationships in competitive markets.
Contact
priya.sharma@email.com
PROFESSIONAL EXPERIENCE
+91 98765 43210
Senior Marketing Manager
linkedin.com/in/priyasharma
Tata Digital Solutions
Jan 2021 Present
Mumbai, Maharashtra, India
Led digital marketing initiatives for pan-India market expansion,
Core Skills
reaching 15+ states
Managed ₹50 lakh annual marketing budget with 35% ROI
Lead Generation
improvement
Developed localized campaigns for regional markets increasing
Digital Marketing
engagement by 60%
Built strategic partnerships with 25+ B2B clients across various
CRM Management
industries
Campaign Strategy
Implemented CRM system reducing sales cycle time by 30%
Analytics
Marketing Executive
Languages
Reliance Industries Ltd
Mar 2019 Dec 2020
Executed social media strategies achieving 2M+ followers across
Hindi (Native)
platforms
English (Fluent)
Coordinated trade shows and exhibitions in Mumbai, Delhi, and
Bangalore
Marathi (Native)
Managed vendor relationships and negotiated contracts saving
₹15 lakh annually
Certifications
Created content marketing strategy increasing website traffic by
150%
Google Ads Certified Professional
HubSpot Inbound Marketing
Salesforce Administrator
Sales Associate
Digital Marketing Institute
Wipro Technologies
Jun 2017 Feb 2019
Achieved 125% of sales targets consistently across Western
India region
Built client database of 200+ prospects through cold calling and
networking
Participated in 10+ industry conferences and generated 50+
qualified leads
EDUCATION
Master of Business Administration (Marketing)
Indian Institute of Management, Ahmedabad
2015 2017
Bachelor of Commerce
University of Mumbai
2012 2015

2025-06-13 12:26:07 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\"Lead Generation\", \"Digital Marketing\", \"CRM Management\", \"Campaign Strategy\", \"Analytics\"],\n  \"soft_skills\": [\"Managing multi-channel campaigns\", \"Building long-term client relationships\", \"Strategic partnerships\", \"Vendor relationships\", \"Negotiation\"],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Marketing)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\"Google Ads Certified Professional\", \"HubSpot Inbound Marketing\", \"Salesforce Administrator\"],\n  \"industries\": [\"Digital Solutions\", \"Reliance Industries\", \"Wipro Technologies\"],\n  \"programming_languages\": [],\n  \"frameworks\": [],\n  \"tools\": [\"CRM system\"],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.\",\n    \"Managed ₹50 lakh annual marketing budget with 35% ROI improvement.\",\n    \"Executed social media strategies achieving 2M+ followers across platforms.\"\n  ],\n  \"summary\": \"Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market. Specializes in digital marketing strategies and B2B sales, with a proven track record of increasing revenue and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":722,"outputTokens":331,"totalTokens":1053}}
2025-06-13 12:26:07 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": ["Lead Generation", "Digital Marketing", "CRM Management", "Campaign Strategy", "Analytics"],
  "soft_skills": ["Managing multi-channel campaigns", "Building long-term client relationships", "Strategic partnerships", "Vendor relationships", "Negotiation"],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Marketing)",
  "years_of_experience": 7,
  "certifications": ["Google Ads Certified Professional", "HubSpot Inbound Marketing", "Salesforce Administrator"],
  "industries": ["Digital Solutions", "Reliance Industries", "Wipro Technologies"],
  "programming_languages": [],
  "frameworks": [],
  "tools": ["CRM system"],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.",
    "Managed ₹50 lakh annual marketing budget with 35% ROI improvement.",
    "Executed social media strategies achieving 2M+ followers across platforms."
  ],
  "summary": "Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market. Specializes in digital marketing strategies and B2B sales, with a proven track record of increasing revenue and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships."
}
```
2025-06-13 12:26:07 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 12:26:07 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Processed candidate: Priya Sharma - Sales & Marketing Professional.pdf with ID: 89e6366a-a527-4006-ae55-4c14d4e5560b
2025-06-13 12:26:07 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Priya Sharma - Sales & Marketing Professional.pdf (ID: 89e6366a-a527-4006-ae55-4c14d4e5560b) in 18867ms
2025-06-13 12:26:07 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:26:07 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Priya Sharma - Sales & Marketing Professional.pdf, success=true, extractedData={experience (truncated)...]
2025-06-13 12:26:07 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:26:08 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:26:08 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:26:08 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Processing resume upload: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 12:26:14 [http-nio-8081-exec-7] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/449ab8dd-05b5-44f2-94af-fb51deaec240-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 12:26:20 [http-nio-8081-exec-7] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/449ab8dd-05b5-44f2-94af-fb51deaec240-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 12:26:20 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Rajesh Kumar
Demand Planning Specialist
rajesh kumar@email.com
+91 98765 54321
linkedin.com/in/rajeshkumar
T
Pune, Maharashtra, India
Professional Summary
Strategic Demand Planning professional with 8+ years of experience in supply chain
optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting,
inventory management, and S&OP processes with proven track record of improving forecast
accuracy by 45% and reducing inventory costs by ₹2.5 crores annually. Skilled in implementing
demand planning solutions for multi-location operations across India.
Professional Experience
O
Senior Demand Planning Manager
Apr 202 Present
Hindustan Unilever Limited
Lead demand planning for 800+ SKUs across North and West India regions
Improved forecast accuracy from 72% to 91% using advanced analytics and ML models
Reduced excess inventory by ₹1.8 crores through enhanced demand sensing
Led S&OP implementation across 8 manufacturing locations
Managed cross-functional teams of 15+ members across supply chain functions
Implemented SAP IBP resulting in 40% reduction in planning cycle time
Demand Planner
Jun 2019 Mar 2021
ITC Limited
Managed demand planning for cigarettes and FMCG portfolio worth ₹500 crores
Developed statistical models for seasonal demand patterns using R and Python
Collaborated with marketing teams for promotional planning and new product launches
Reduced stockout incidents by 35% through improved demand sensing
Created automated dashboards using Power BI for executive reporting
Supply Chain Analyst
Jul 2017 May 2019
Mahindra & Mahindra
Supported inventory optimization for automotive spare parts across 200+ dealers
Performed root cause analysis on forecast variances and implemented corrections
Created Excel-based planning tools reducing manual effort by 60%
Assisted in vendor collaboration initiatives improving supplier fill rates
Core Competencies
Planning & Forecasting
Technology & Tools
Statistical Forecasting
Demand Sensing
SAP IBP/APO
Oracle Demantra
Power BI
S&OP
Inventory Optimization
Advanced Excel
Python
R Programming
Collaborative Planning
Industry Knowledge
FMCG
Automotive
Manufacturing
Retail
Multi- location Ops
Education & Certifications
Master of Business Administration (Operations)
Indian Institute of Management, Kozhikode
2015 2017
Bachelor of Engineering (Mechanical)
Pune University
2011 2015
Certifications
APICS SCOR Certified CPIM Certified SAP IBP Certification Six Sigma Green Belt

2025-06-13 12:26:24 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Statistical Forecasting\",\n    \"Demand Sensing\",\n    \"Inventory Optimization\",\n    \"Advanced Excel\",\n    \"Python\",\n    \"R Programming\",\n    \"SAP IBP\",\n    \"Oracle Demantra\",\n    \"Power BI\"\n  ],\n  \"soft_skills\": [\n    \"Collaborative Planning\",\n    \"Team Management\",\n    \"Cross-functional Coordination\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Operations)\",\n  \"years_of_experience\": 8,\n  \"certifications\": [\n    \"APICS SCOR Certified\",\n    \"CPIM Certified\",\n    \"SAP IBP Certification\",\n    \"Six Sigma Green Belt\"\n  ],\n  \"industries\": [\n    \"FMCG\",\n    \"Automotive\",\n    \"Manufacturing\",\n    \"Retail\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R Programming\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"SAP IBP\",\n    \"Oracle Demantra\",\n    \"Power BI\",\n    \"Advanced Excel\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Improved forecast accuracy by 45% and reduced inventory costs by ₹2.5 crores annually.\",\n    \"Improved forecast accuracy from 72% to 91% using advanced analytics and ML models.\",\n    \"Reduced excess inventory by ₹1.8 crores through enhanced demand sensing.\"\n  ],\n  \"summary\": \"Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with a proven track record of improving forecast accuracy and reducing inventory costs. Skilled in implementing demand planning solutions for multi-location operations across India.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":775,"outputTokens":464,"totalTokens":1239}}
2025-06-13 12:26:24 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Statistical Forecasting",
    "Demand Sensing",
    "Inventory Optimization",
    "Advanced Excel",
    "Python",
    "R Programming",
    "SAP IBP",
    "Oracle Demantra",
    "Power BI"
  ],
  "soft_skills": [
    "Collaborative Planning",
    "Team Management",
    "Cross-functional Coordination"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Operations)",
  "years_of_experience": 8,
  "certifications": [
    "APICS SCOR Certified",
    "CPIM Certified",
    "SAP IBP Certification",
    "Six Sigma Green Belt"
  ],
  "industries": [
    "FMCG",
    "Automotive",
    "Manufacturing",
    "Retail"
  ],
  "programming_languages": [
    "Python",
    "R Programming"
  ],
  "frameworks": [],
  "tools": [
    "SAP IBP",
    "Oracle Demantra",
    "Power BI",
    "Advanced Excel"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Improved forecast accuracy by 45% and reduced inventory costs by ₹2.5 crores annually.",
    "Improved forecast accuracy from 72% to 91% using advanced analytics and ML models.",
    "Reduced excess inventory by ₹1.8 crores through enhanced demand sensing."
  ],
  "summary": "Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with a proven track record of improving forecast accuracy and reducing inventory costs. Skilled in implementing demand planning solutions for multi-location operations across India."
}
```
2025-06-13 12:26:24 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 12:26:24 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Processed candidate: Rajesh Kumar - Demand Planning Specialist.pdf with ID: 2667759d-c42b-4def-a9bf-476ff197ab8a
2025-06-13 12:26:24 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rajesh Kumar - Demand Planning Specialist.pdf (ID: 2667759d-c42b-4def-a9bf-476ff197ab8a) in 16376ms
2025-06-13 12:26:24 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:26:24 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rajesh Kumar - Demand Planning Specialist.pdf, success=true, extractedData={experienceLeve (truncated)...]
2025-06-13 12:26:24 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:26:25 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 12:26:25 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 12:26:25 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Processing resume upload: Rohit Gupta - Angular Developer.pdf
2025-06-13 12:26:30 [http-nio-8081-exec-10] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/9a0d81f1-1926-4134-8768-3049e7f2f4b1-Rohit Gupta - Angular Developer.pdf
2025-06-13 12:26:35 [http-nio-8081-exec-10] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/9a0d81f1-1926-4134-8768-3049e7f2f4b1-Rohit Gupta - Angular Developer.pdf
2025-06-13 12:26:35 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
hit Gupta
per & Frontend Specialist
+91 99876 54321
A linkedin.com/in/rohitgupta
github.com/rohitgupta
Delhi. India
I
PROFESSIONAL SUMMARY
TECHNICAL
EXPERTISE
Experienced Angular Developer with 4+ years of
ANGULAR FRAMEWORK
expertise in building dynamic, responsive web
applications using Angular framework and
Angular
Angular 1
TypeScript. Proficient in creating scalable frontend
Angular
Angular CLI
solutions with RxJS, NgRx state management, and
Angula Router
modern UI libraries. Strong background in integrating
RESTful APIs, implementing unit testing with Jasmine
and Karma, and optimizing application performance.
CORE TECHNOLOGIES
Passionate about clean code, user experience, and
TypeScript
JavaScript
staying updated with latest Angular trends and best
practices.
HTML5 CSS3
STATE MANAGEMENT
T
PROFESSIONAL EXPERIENCE
NgRx RxJ
Observable
Reactive Programming
Senior Angular Developer
HCL Technologies
Feb 2022 Present
UI LIBRARIES
Angular
TypeScript
RxJS
NgRx
ingula Material
Bootstra
Angular Material
Jasmine Karma REST APIs
Chart.j
PrimeNG
. Developed enterprise banking applications using Angular
15+ and TypeScript with 99 9% uptime
.
Implemented state management using NgR> for complex
TESTING APIS
application state handling
Jasmine
Karma
. Built reusable components using Angular Material and
custom UI libraries
REST
Integrated RESTful APIs and handled asynchronous
WebSocke
Socket.ic
operations using Rx1S observables
Achieved 95% code coverage through comprehensive unit
testing with Jasmine and Karma
TOOLS OTHERS
Optimized application performance resulting 40% faster
page load times
VS Code
Mentored junior developers Angular best practices
Webpack
and code review processes
EDUCATION
Angular Developer
Tech Mahindra
Jun 2021 2022
Bachelor of Technology
Angular 12
TypeScript
Bootstrap
Chart.js
(Computer Science)
HTTP Client
Forms
Delhi Technological University
2016-2020
. Built responsive dashboard applications using Angular 12
and Bootstrap framework
.
Created interactive data visualizations using Chart.js and
Angular integration
CERTIFICATIONS
Implemented reactive forms and template-driven forms
for data collection
Angular Certified Developer
Consumed REST APIs using Angular HTTP Client and
handled error scenarios
TypeScript Professional
Collaborated with UX/UI teams to implement pixel perfect
designs
NgRx State Management
Participated agile development cycles with daily
standups and sprint planning
Rx1S Reactive Programming
Frontend Web Development
Frontend Developer
Angular Testing with Jasmine
Cognizant Technology
Aug 2020 May
Solutions
2021
LANGUAGES
Angular
JavaScript
HTML5
CSS3
SCSS
Gi
Hindi: Native
English: Fluent
.
Developed customer facing web applications using
Angular 10 and modern JavaScript
Punjabi: Conversational
Created responsive layouts using HTML5, CSS3, and SCSS
preprocessor
INTERESTS
Implemented routing and navigation using Angular Router
Worked with version control using Git and collaborated in
Frontend Architectur Angular
team environments
Updates Open Source Contributing
Fixed bugs and implemented feature enhancements
. Tech Blogging UI/UX Design
based on client requirements
FEATURED PROJECTS
Banking Dashboard
E-Commerce Admin
System
Panel
Angular
NgRx
Angular 12
Angular Material
TypeScript
Bootstrap
Chart.js
RxJS
REST APIs
Forms
Developed comprehensive
Built admin panel e
banking dashboard using
commerce management
Angular with NgRx for
using Angular 12 and
state management
TypeScript Implemented
Integrated Angular Material
Bootstrap responsive
components consistent
design integrated REST
UI and Chart.j for financial
APIs data operations,
data visualization Used
and created complex forms
RxJS handling complex
for product and inventory
asynchronous operations
management
and real-time updates.
Task Management
Real-time Chat
Application
Interface
Angular
Jasmine
Angula Socket.ig
Karma
HTTP Client
SCSS WebSocket
Local Storage
Reactive Forms
Created task management
Developed real-time chat
app using Angular 10 with
application using Angular 14
local storage data
and Socket.ic WebSocket
persistence. Implemented
communication Styled with
comprehensive unit testing
SCSS custom
with Jasmine and Karma.
animations impleme nted
used HTTP Client for API
reactive forms message
integration and built drag
input. and handled real time
and-drop functionality for
message updates efficiently
task organization

2025-06-13 12:26:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Angular\",\n    \"Angular 1\",\n    \"TypeScript\",\n    \"RxJS\",\n    \"NgRx\",\n    \"Angular CLI\",\n    \"Angular Router\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"Chart.js\",\n    \"PrimeNG\",\n    \"Jasmine\",\n    \"Karma\",\n    \"REST APIs\",\n    \"WebSocket\",\n    \"Socket.io\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\",\n    \"Git\",\n    \"VS Code\",\n    \"Webpack\",\n    \"HTTP Client\",\n    \"Forms\",\n    \"Local Storage\",\n    \"Reactive Forms\"\n  ],\n  \"soft_skills\": [\n    \"Mentoring\",\n    \"Collaboration\",\n    \"Agile development\",\n    \"Team environments\"\n  ],\n  \"experience_level\": \"MID\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 4,\n  \"certifications\": [\n    \"Angular Certified Developer\",\n    \"TypeScript Professional\",\n    \"NgRx State Management\",\n    \"RxJS Reactive Programming\",\n    \"Frontend Web Development\",\n    \"Angular Testing with Jasmine\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"TypeScript\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\"\n  ],\n  \"frameworks\": [\n    \"Angular\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"PrimeNG\"\n  ],\n  \"tools\": [\n    \"VS Code\",\n    \"Webpack\",\n    \"Git\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime\",\n    \"Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma\",\n    \"Optimized application performance resulting in 40% faster page load times\"\n  ],\n  \"summary\": \"Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular, TypeScript, RxJS, and NgRx state management. Passionate about clean code and user experience.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1267,"outputTokens":589,"totalTokens":1856}}
2025-06-13 12:26:43 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Angular",
    "Angular 1",
    "TypeScript",
    "RxJS",
    "NgRx",
    "Angular CLI",
    "Angular Router",
    "Angular Material",
    "Bootstrap",
    "Chart.js",
    "PrimeNG",
    "Jasmine",
    "Karma",
    "REST APIs",
    "WebSocket",
    "Socket.io",
    "HTML5",
    "CSS3",
    "SCSS",
    "Git",
    "VS Code",
    "Webpack",
    "HTTP Client",
    "Forms",
    "Local Storage",
    "Reactive Forms"
  ],
  "soft_skills": [
    "Mentoring",
    "Collaboration",
    "Agile development",
    "Team environments"
  ],
  "experience_level": "MID",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 4,
  "certifications": [
    "Angular Certified Developer",
    "TypeScript Professional",
    "NgRx State Management",
    "RxJS Reactive Programming",
    "Frontend Web Development",
    "Angular Testing with Jasmine"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "TypeScript",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS"
  ],
  "frameworks": [
    "Angular",
    "Angular Material",
    "Bootstrap",
    "PrimeNG"
  ],
  "tools": [
    "VS Code",
    "Webpack",
    "Git"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime",
    "Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma",
    "Optimized application performance resulting in 40% faster page load times"
  ],
  "summary": "Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular, TypeScript, RxJS, and NgRx state management. Passionate about clean code and user experience."
}
```
2025-06-13 12:26:43 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rohit Gupta - Angular Developer.pdf
2025-06-13 12:26:43 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Processed candidate: Rohit Gupta - Angular Developer.pdf with ID: a909f5a7-bd35-4fd8-bc5d-4103e78ab942
2025-06-13 12:26:43 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rohit Gupta - Angular Developer.pdf (ID: a909f5a7-bd35-4fd8-bc5d-4103e78ab942) in 17337ms
2025-06-13 12:26:43 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:26:43 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rohit Gupta - Angular Developer.pdf, success=true, extractedData={experienceLevel=MID, ski (truncated)...]
2025-06-13 12:26:43 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:26:44 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 12:26:44 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 12:26:44 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 12:26:44 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 12:26:44 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@76a30db8, com.hackathon.hr.model.Candidate@53c0fd69, com.hackathon (truncated)...]
2025-06-13 12:26:44 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 12:33:02 [RMI TCP Connection(19)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 12:33:02 [RMI TCP Connection(19)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 12:33:02 [RMI TCP Connection(19)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 13:39:56 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 73574 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 13:39:56 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 13:39:56 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 13:39:56 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 13:39:56 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 13:39:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 13:39:58 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 13:39:58 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 13:39:58 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 13:39:58 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1735 ms
2025-06-13 13:40:00 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 13:40:00 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 13:40:00 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 13:40:00 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 13:40:00 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2025-06-13 13:40:00 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 13:40:00 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 13:40:00 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 13:40:00 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 13:40:00 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.796 seconds (JVM running for 6.53)
2025-06-13 13:40:06 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 13:40:06 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@33879d5f
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@64263ebe
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 13:40:06 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7db22bf6
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@52b9bce5
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1c140fb8
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 13:40:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:06 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 13:40:06 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/matching.js", parameters={}
2025-06-13 13:40:06 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 13:40:06 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/upload.js", parameters={}
2025-06-13 13:40:06 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/candidates.js", parameters={}
2025-06-13 13:40:06 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 13:40:06 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 13:40:06 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 13:40:06 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 13:40:06 [http-nio-8081-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 13:40:07 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:07 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:07 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:07 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:07 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:07 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 13:40:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 13:40:07 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 13:40:07 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 13:40:07 [http-nio-8081-exec-7] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 13:40:07 [http-nio-8081-exec-8] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 13:40:07 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:40:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:40:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 13:40:07 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@5a785ef9, com.hackathon.hr.model.JobRequirement@24867e73, com (truncated)...]
2025-06-13 13:40:07 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 13:40:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 13:40:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 13:40:07 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 13:40:07 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 13:40:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 13:40:07 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:40:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 13:40:07 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 13:40:07 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 13:40:07 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:11 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 13:40:11 [http-nio-8081-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 13:40:11 [http-nio-8081-exec-10] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 13:40:11 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 13:40:11 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 13:40:11 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 13:40:11 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:40:11 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 13:40:11 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 13:40:11 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 13:40:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 13:40:14 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 13:40:14 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 13:40:14 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 13:40:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:14 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/matching.js", parameters={}
2025-06-13 13:40:14 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 13:40:14 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/upload.js", parameters={}
2025-06-13 13:40:14 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 13:40:14 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:14 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 13:40:14 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/candidates.js", parameters={}
2025-06-13 13:40:14 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 13:40:14 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 13:40:14 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 13:40:14 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:14 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:14 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:14 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 13:40:14 [http-nio-8081-exec-3] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 13:40:14 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 13:40:14 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 13:40:14 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 13:40:14 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:40:14 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 13:40:14 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 13:40:14 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 13:40:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 13:40:14 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 13:40:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:14 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 13:40:14 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 13:40:14 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 13:40:14 [http-nio-8081-exec-8] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 13:40:14 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 13:40:14 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:40:14 [http-nio-8081-exec-9] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 13:40:14 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@5a785ef9, com.hackathon.hr.model.JobRequirement@24867e73, com (truncated)...]
2025-06-13 13:40:14 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:40:14 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 13:40:14 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:14 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:15 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 13:40:15 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 13:40:15 [http-nio-8081-exec-7] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 13:40:15 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 13:40:15 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 13:40:15 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 13:40:15 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:40:15 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 13:40:15 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 13:40:15 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 13:40:25 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 13:40:25 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 13:40:25 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 13:40:25 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 13:40:25 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:40:52 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:40:52 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:40:52 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Processing resume upload: Aarav Sharma - Junior Developer.pdf
2025-06-13 13:40:56 [http-nio-8081-exec-5] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/b81d9a10-11e0-4b55-a10f-e4e02c4481c1-Aarav Sharma - Junior Developer.pdf
2025-06-13 13:41:03 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/b81d9a10-11e0-4b55-a10f-e4e02c4481c1-Aarav Sharma - Junior Developer.pdf
2025-06-13 13:41:03 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Aarav Sharma
Junior Software Developer
aarav.sharma@email.com
+91 98765 43210
linkedin.com/in/aaravsharma
github .com/aaravsharma
Jaipur, Rajasthan, India
Professional Summary
Technical Skills
Enthusiastic Junior Software Developer with 2+ years
FRONTEND
of experience in web development using modern
HTML5
CSS3
JavaScript
React
technologies. Passionate about creating clean,
efficient code and building user-friendly applications.
Bootstrap
Strong foundation in JavaScript, React, and Node is
BACKEND
with hands-on experience in full-stack development
Node.j
Express
PHP
REST APIs
projects. Eager to contribute to innovative software
solutions and grow within a dynamic development
DATABASES
team.
MongoDB
MySQL
TOOLS TECHNOLOGIES
Git GitHub
VS Code
Postman
Professional Experience
JWT
APIS INTEGRATIONS
Junior Software Developer
TechStart Solutions Pvt Ltd
Jun 2022 Present
Stripe API
Local Storage
JavaScript React Node.js MongoDB Express.js Git
Education
Developed responsive web applications using React and
JavaScript ES6+
Bachelor of Computer
Built REST APIs using Node js and Express js serving
10,000+ daily requests
Applications (BCA)
University of Rajasthan
Implemented user authentication and authorization using
2019 - 2022
JWT tokens
Collaborated with senior developers using Git for version
control and code reviews
Certifications
Optimized database queries in MongoDB reducing
.
response time by 25%
JavaScript Fundamentals freeCodeCamp
.
React Developer Course Udemy
Participated in agile development cycles with daily
.
Node js Certification Coursera
standups and sprint planning
.
Git Version Control Codecademy
Languages
Hindi: Native
Web Development Intern
English: Fluent
Digital Innovators
Jan 2022 May 2022
Rajasthani: Native
HTML5 CSS3 JavaScript Bootstrap MySQL
Created static websites using HTML5, CSS3, and
Bootstrap framework
Implemented interactive features using vanilla JavaScript
Assisted in maintaining MySQL databases and writing
basic SQL queries
Fixed UI bugs and improved cross-browser compatibility
Learned modern development practices and coding
standards
Key Projects
E-Commerce Shopping Platform
React
Node.j
Express
MongoDB
JWT
Stripe API
Built full-stack e-commerce application with React frontend
and Node js backend Implemented user authentication using
JWT. integrated Stripe payment gateway, and created admin
dashboard for inventory management. Used MongoDB for
data storage and Express js for API development.
Task Management System
JavaScript
React
Local Storage
CSS3
Bootstrap
Developed a responsive task management application using
React and JavaScript. Features include task creation, editing,
deletion. and status tracking. Implemented local storage for
data persistence and used Bootstrap for responsive design
across devices.
Restaurant Website
HTML5
CSS3
JavaScript
MySQL
PHP
Created dynamic restaurant website with online reservation
system. Used HTML5 and CSS3 for layout and styling,
JavaScript for interactive features, and PHP with MySQL for
backend functionality including reservation management and
menu display.

2025-06-13 13:41:13 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"HTML5\",\n    \"CSS3\",\n    \"JavaScript\",\n    \"React\",\n    \"Bootstrap\",\n    \"Node.js\",\n    \"Express.js\",\n    \"PHP\",\n    \"REST APIs\",\n    \"JWT\",\n    \"Stripe API\",\n    \"Local Storage\",\n    \"JavaScript ES6+\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Communication\",\n    \"Problem-solving\",\n    \"Adaptability\"\n  ],\n  \"experience_level\": \"ENTRY\",\n  \"education\": \"Bachelor of Computer Applications (BCA)\",\n  \"years_of_experience\": 2,\n  \"certifications\": [\n    \"JavaScript Fundamentals - freeCodeCamp\",\n    \"React Developer Course - Udemy\",\n    \"Node.js Certification - Coursera\",\n    \"Git Version Control - Codecademy\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"Web Development\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"PHP\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Bootstrap\",\n    \"Express.js\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Built REST APIs using Node.js and Express.js serving 10,000+ daily requests\",\n    \"Optimized database queries in MongoDB reducing response time by 25%\",\n    \"Implemented user authentication and authorization using JWT tokens\"\n  ],\n  \"summary\": \"Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":920,"outputTokens":501,"totalTokens":1421}}
2025-06-13 13:41:13 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "HTML5",
    "CSS3",
    "JavaScript",
    "React",
    "Bootstrap",
    "Node.js",
    "Express.js",
    "PHP",
    "REST APIs",
    "JWT",
    "Stripe API",
    "Local Storage",
    "JavaScript ES6+"
  ],
  "soft_skills": [
    "Collaboration",
    "Communication",
    "Problem-solving",
    "Adaptability"
  ],
  "experience_level": "ENTRY",
  "education": "Bachelor of Computer Applications (BCA)",
  "years_of_experience": 2,
  "certifications": [
    "JavaScript Fundamentals - freeCodeCamp",
    "React Developer Course - Udemy",
    "Node.js Certification - Coursera",
    "Git Version Control - Codecademy"
  ],
  "industries": [
    "Software Development",
    "Web Development"
  ],
  "programming_languages": [
    "JavaScript",
    "PHP"
  ],
  "frameworks": [
    "React",
    "Bootstrap",
    "Express.js"
  ],
  "tools": [
    "Git",
    "GitHub",
    "VS Code",
    "Postman"
  ],
  "databases": [
    "MongoDB",
    "MySQL"
  ],
  "cloud_platforms": [],
  "key_achievements": [
    "Built REST APIs using Node.js and Express.js serving 10,000+ daily requests",
    "Optimized database queries in MongoDB reducing response time by 25%",
    "Implemented user authentication and authorization using JWT tokens"
  ],
  "summary": "Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects."
}
```
2025-06-13 13:41:13 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Aarav Sharma - Junior Developer.pdf
2025-06-13 13:41:13 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Processed candidate: Aarav Sharma - Junior Developer.pdf with ID: 1c6cedca-654a-4132-81c2-96b634e87ee7
2025-06-13 13:41:13 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Aarav Sharma - Junior Developer.pdf (ID: 1c6cedca-654a-4132-81c2-96b634e87ee7) in 20758ms
2025-06-13 13:41:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:41:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Aarav Sharma - Junior Developer.pdf, success=true, extractedData={experienceLevel=ENTRY, s (truncated)...]
2025-06-13 13:41:13 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:41:15 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:41:15 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:41:15 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Processing resume upload: Anjali Patel - Data Analyst.pdf
2025-06-13 13:41:20 [http-nio-8081-exec-4] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/eba388af-b4dc-487b-9d57-b015b367c738-Anjali Patel - Data Analyst.pdf
2025-06-13 13:41:33 [http-nio-8081-exec-4] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/eba388af-b4dc-487b-9d57-b015b367c738-Anjali Patel - Data Analyst.pdf
2025-06-13 13:41:33 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Pater
S Intelligence Specialist
anjali.patel@email.com
+91 97845 62310
linkedin.com/in/anjalipate
Bangalore, Karnataka, India
Professional Summary
Technical Skills
Innovative Data Analyst with 6+ years of experience in
transforming complex datasets into strategic business
Programming
insights for Indian tech startups and MNCs. Expert in
Python
R
SQL
Java
Scala
machine learning, statistical modeling, and data
visualization with proven track record of improving
business efficiency by 50% and reducing costs by
Databases
₹30 lakh annually through data-driven
recommendations.
MySQL
PostgreSQL
MongoDB
Cassandra
Snowflake
Professional Experience
Analytics & ML
Senior Data Analyst
Pandas
NumPy
Scikit-learn
TensorFlow
Flipkart Group
Feb 2022 Present
Statistical Modeling
Developed ML models for customer behavior analysis
processing 10M+ transactions daily
Created automated dashboards reducing reporting time by
Visualization
70% for 15+ stakeholders
Led data quality initiatives improving accuracy by 95%
Tableau
Power B
matplotlib
seaborn
across e-commerce platform
D3.js
Implemented A/B testing framework increasing conversion
rates by 28%
Built recommendation engines improving customer
engagement by 35%
Cloud Platforms
AWS
Azure
GCP
Spark
Hadoop
Data Analyst
Infosys Limited
Jun 2020 Jan 2022
Analyzed financial data for global banking clients using
Python and SQL
Developed predictive models for fraud detection with 92%
Key Projects
accuracy
Created Power BI dashboards for C-level executives and
stakeholders
E-commerce Customer Segmentation
Optimized database queries improving performance by
Built ML clustering model using K-means and RFM
45%
analysis to segment 5M+ customers, enabling
personalized marketing campaigns with 40% higher
conversion rates.
Junior Data Analyst
Tata Consultancy Services
Jul 2018 May 2020
Real-time Fraud Detection System
Supported market research analysis for retail and
Developed ensemble learning model combining
healthcare clients
Random Forest and XGBoost achieving 94% accuracy
Developed Excel-based models for financial forecasting
in detecting fraudulent transactions for fintech
and budgeting
application.
Assisted in data migration projects and quality assurance
testing
Supply Chain Optimization Dashboard
Created interactive Tableau dashboard tracking 50+
KPIs across inventory, logistics, and vendor
performance, reducing operational costs by ₹25 lakh
annually.
Education
Master of Technology (Computer Science)
Indian Institute of Technology, Bombay
Certifications
2016 2018
AWS Certified Data Analytics Specialty (2024)
Bachelor of Engineering (Information
Technology)
Google Professional Data Engineer (2023)
Gujarat Technological University
2012 2016
Microsoft Azure Data Scientist Associate (2023)
Tableau Desktop Certified Professional (2022)
Google Analytics Individual Qualification (2022)
Languages
Hindi (Native)
English (Fluent)
Gujarati (Native)
Tamil (Conversational)

2025-06-13 13:41:41 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Machine Learning\",\n    \"Statistical Modeling\",\n    \"Data Visualization\",\n    \"Data Quality Initiatives\",\n    \"A/B Testing\",\n    \"Recommendation Engines\",\n    \"Predictive Modeling\",\n    \"Fraud Detection\",\n    \"Database Optimization\",\n    \"Data Migration\",\n    \"Quality Assurance Testing\",\n    \"KPI Tracking\"\n  ],\n  \"soft_skills\": [\n    \"Innovative\",\n    \"Analytical\",\n    \"Leadership\",\n    \"Communication\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Technology (Computer Science)\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"AWS Certified Data Analytics Specialty (2024)\",\n    \"Google Professional Data Engineer (2023)\",\n    \"Microsoft Azure Data Scientist Associate (2023)\",\n    \"Tableau Desktop Certified Professional (2022)\",\n    \"Google Analytics Individual Qualification (2022)\"\n  ],\n  \"industries\": [\n    \"Tech Startups\",\n    \"MNCs\",\n    \"E-commerce\",\n    \"Global Banking\",\n    \"Retail\",\n    \"Healthcare\",\n    \"Fintech\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R\",\n    \"SQL\",\n    \"Java\",\n    \"Scala\"\n  ],\n  \"frameworks\": [\n    \"Pandas\",\n    \"NumPy\",\n    \"Scikit-learn\",\n    \"TensorFlow\",\n    \"Spark\",\n    \"Hadoop\"\n  ],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"matplotlib\",\n    \"seaborn\",\n    \"D3.js\",\n    \"Excel\"\n  ],\n  \"databases\": [\n    \"MySQL\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"Cassandra\",\n    \"Snowflake\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\",\n    \"GCP\"\n  ],\n  \"key_achievements\": [\n    \"Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.\",\n    \"Increased conversion rates by 28% by implementing an A/B testing framework.\",\n    \"Achieved 94% accuracy in detecting fraudulent transactions using an ensemble learning model.\"\n  ],\n  \"summary\": \"Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs through data-driven recommendations.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":934,"outputTokens":665,"totalTokens":1599}}
2025-06-13 13:41:41 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Machine Learning",
    "Statistical Modeling",
    "Data Visualization",
    "Data Quality Initiatives",
    "A/B Testing",
    "Recommendation Engines",
    "Predictive Modeling",
    "Fraud Detection",
    "Database Optimization",
    "Data Migration",
    "Quality Assurance Testing",
    "KPI Tracking"
  ],
  "soft_skills": [
    "Innovative",
    "Analytical",
    "Leadership",
    "Communication"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Technology (Computer Science)",
  "years_of_experience": 6,
  "certifications": [
    "AWS Certified Data Analytics Specialty (2024)",
    "Google Professional Data Engineer (2023)",
    "Microsoft Azure Data Scientist Associate (2023)",
    "Tableau Desktop Certified Professional (2022)",
    "Google Analytics Individual Qualification (2022)"
  ],
  "industries": [
    "Tech Startups",
    "MNCs",
    "E-commerce",
    "Global Banking",
    "Retail",
    "Healthcare",
    "Fintech"
  ],
  "programming_languages": [
    "Python",
    "R",
    "SQL",
    "Java",
    "Scala"
  ],
  "frameworks": [
    "Pandas",
    "NumPy",
    "Scikit-learn",
    "TensorFlow",
    "Spark",
    "Hadoop"
  ],
  "tools": [
    "Tableau",
    "Power BI",
    "matplotlib",
    "seaborn",
    "D3.js",
    "Excel"
  ],
  "databases": [
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Cassandra",
    "Snowflake"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure",
    "GCP"
  ],
  "key_achievements": [
    "Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.",
    "Increased conversion rates by 28% by implementing an A/B testing framework.",
    "Achieved 94% accuracy in detecting fraudulent transactions using an ensemble learning model."
  ],
  "summary": "Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs through data-driven recommendations."
}
```
2025-06-13 13:41:41 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Anjali Patel - Data Analyst.pdf
2025-06-13 13:41:41 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Processed candidate: Anjali Patel - Data Analyst.pdf with ID: 64912500-7371-47ce-ac8e-cc9b465df2be
2025-06-13 13:41:41 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Anjali Patel - Data Analyst.pdf (ID: 64912500-7371-47ce-ac8e-cc9b465df2be) in 26515ms
2025-06-13 13:41:41 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:41:41 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Anjali Patel - Data Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, skil (truncated)...]
2025-06-13 13:41:41 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:41:43 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:41:43 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:41:43 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Processing resume upload: Arjun Singh - Software Developer.pdf
2025-06-13 13:41:47 [http-nio-8081-exec-9] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/e7f3376a-b888-4b49-bcff-7f980d52c734-Arjun Singh - Software Developer.pdf
2025-06-13 13:41:51 [http-nio-8081-exec-9] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/e7f3376a-b888-4b49-bcff-7f980d52c734-Arjun Singh - Software Developer.pdf
2025-06-13 13:41:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Professional Summary
Experienced Full Stack Software Developer with 7+ years of
expertise in building scalable web applications and
Arjun Singh
microservices for Indian tech companies and global clients.
Proficient in modern JavaScript frameworks, cloud
Full Stack Developer
technologies, and agile methodologies. Strong track record of
leading development teams and delivering high-quality
arjun.singh@email.com
software solutions that improved system performance by 60%
+91 94567 89012
and reduced deployment time by 45%.
linkedin.com/in/arjunsingh
github.com/arjunsingh
Professional Experience
T
Hyderabad, Telangana, India
Senior Software Developer
TECHNICAL SKILLS
Zomato Limited
Mar 2022 Present
Frontend
React Node.js TypeScript MongoDB Redis AWS Docker
PostgreSQL
Led development of real-time order tracking system serving
Redis
200K+ daily orders
- Built microservices architecture reducing API response time by
55%
LANGUAGES
- Implemented automated testing pipeline achieving 90% code
Hindi
Native
coverage
English
Fluent
- Mentored 4 junior developers and conducted code reviews
Punjabi
Native
Optimized database queries reducing server costs by ₹8 lakh
monthly
Telugu
Conversational
Software Developer
TOOLS & PLATFORMS
PayTM (One97 Communications)
Jan 2020 Feb 2022
Git Docker . Kubernetes Jenkins AWS
Azure Jira Slack vs Code Intelli]
Vue.js
Express.js
MySQL
Python
Django
Jenkins
IDEA Postman Webpack
- Developed payment gateway integration handling 100 crore+
daily transactions
- Created fraud detection algorithms reducing fraudulent
transactions by 40%
- Built responsive wallet interface used by 50M+ active users
- Implemented CI/CD pipelines reducing deployment time from 4
hours to 30 minutes
Junior Software Developer
Mindtree Limited
Jul 2018 Dec 2019
Angular Spring Boot PostgreSQU HTML5 CSS3
- Developed e-commerce modules for US retail client using Angular
and Spring Boot
- Created responsive UI components improving user experience by
35%
T Participated in agile development with 2-week sprint cycles
1 Fixed 200+ bugs and implemented 50+ feature enhancements
Key Projects
Food Delivery
Cryptocurrency
Platform
Trading Bot
Built end-to-end food
Developed automated
delivery platform with real-
trading bot using Python
time tracking, payment
and machine learning
integration, and restaurant
algorithms achieving 15%
management system using
monthly returns in
MERN stack.
backtesting.
React
Node.js
Python TensorFlow
MongoDB
Redis
Education
Bachelor of Technology (Computer Science
Engineering)
Indian Institute of Technology, Hyderabad
2014 2018
Certifications & Achievements
AWS Certified Solutions Architect Associate (2024)
Google Cloud Professional Developer (2023)
MongoDB Certified Developer (2022)
Scrum Master Certified (2021)
Winner Smart India Hackathon 2017 (Government of India)
Open Source Contributor 1000+ GitHub contributions

2025-06-13 13:41:57 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Node.js\",\n    \"TypeScript\",\n    \"MongoDB\",\n    \"Redis\",\n    \"AWS\",\n    \"Docker\",\n    \"PostgreSQL\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"MySQL\",\n    \"Python\",\n    \"Django\",\n    \"Jenkins\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"TensorFlow\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Agile Methodologies\",\n    \"Problem Solving\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science Engineering)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect Associate (2024)\",\n    \"Google Cloud Professional Developer (2023)\",\n    \"MongoDB Certified Developer (2022)\",\n    \"Scrum Master Certified (2021)\"\n  ],\n  \"industries\": [\n    \"Technology\",\n    \"E-commerce\",\n    \"Finance\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"HTML5\",\n    \"CSS3\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Node.js\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"Django\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"AWS\",\n    \"Azure\",\n    \"Jira\",\n    \"Slack\",\n    \"VS Code\",\n    \"IntelliJ IDEA\",\n    \"Postman\",\n    \"Webpack\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"Redis\",\n    \"PostgreSQL\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\"\n  ],\n  \"key_achievements\": [\n    \"Improved system performance by 60% and reduced deployment time by 45%.\",\n    \"Reduced API response time by 55% through microservices architecture.\",\n    \"Achieved 90% code coverage with automated testing pipeline.\"\n  ],\n  \"summary\": \"Experienced Full Stack Software Developer with over 7 years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Proven track record of leading teams and delivering high-quality software solutions.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":937,"outputTokens":677,"totalTokens":1614}}
2025-06-13 13:41:57 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Node.js",
    "TypeScript",
    "MongoDB",
    "Redis",
    "AWS",
    "Docker",
    "PostgreSQL",
    "Vue.js",
    "Express.js",
    "MySQL",
    "Python",
    "Django",
    "Jenkins",
    "Angular",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "TensorFlow"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Agile Methodologies",
    "Problem Solving"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science Engineering)",
  "years_of_experience": 7,
  "certifications": [
    "AWS Certified Solutions Architect Associate (2024)",
    "Google Cloud Professional Developer (2023)",
    "MongoDB Certified Developer (2022)",
    "Scrum Master Certified (2021)"
  ],
  "industries": [
    "Technology",
    "E-commerce",
    "Finance"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "HTML5",
    "CSS3"
  ],
  "frameworks": [
    "React",
    "Node.js",
    "Vue.js",
    "Express.js",
    "Angular",
    "Spring Boot",
    "Django"
  ],
  "tools": [
    "Git",
    "Docker",
    "Kubernetes",
    "Jenkins",
    "AWS",
    "Azure",
    "Jira",
    "Slack",
    "VS Code",
    "IntelliJ IDEA",
    "Postman",
    "Webpack"
  ],
  "databases": [
    "MongoDB",
    "Redis",
    "PostgreSQL",
    "MySQL"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure"
  ],
  "key_achievements": [
    "Improved system performance by 60% and reduced deployment time by 45%.",
    "Reduced API response time by 55% through microservices architecture.",
    "Achieved 90% code coverage with automated testing pipeline."
  ],
  "summary": "Experienced Full Stack Software Developer with over 7 years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Proven track record of leading teams and delivering high-quality software solutions."
}
```
2025-06-13 13:41:57 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Arjun Singh - Software Developer.pdf
2025-06-13 13:41:57 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Processed candidate: Arjun Singh - Software Developer.pdf with ID: 13bd91fd-e63d-45d7-bea9-a086ae64c29c
2025-06-13 13:41:57 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Arjun Singh - Software Developer.pdf (ID: 13bd91fd-e63d-45d7-bea9-a086ae64c29c) in 13956ms
2025-06-13 13:41:57 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:41:57 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Arjun Singh - Software Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, (truncated)...]
2025-06-13 13:41:57 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:42:04 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:42:04 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:42:04 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Processing resume upload: Deepika Reddy - Java Developer.pdf
2025-06-13 13:42:09 [http-nio-8081-exec-8] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/512eea6c-a394-460f-af98-60529ec9b0a2-Deepika Reddy - Java Developer.pdf
2025-06-13 13:42:16 [http-nio-8081-exec-8] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/512eea6c-a394-460f-af98-60529ec9b0a2-Deepika Reddy - Java Developer.pdf
2025-06-13 13:42:16 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Deepika Reddy
Java Developer & Backend Engineer
dccpika.reddy@email .com
H
+91 98712 34567
- linkedin com/1 in/deepikareddy
github.com/deepikareddy
T
Hyderabad, Telangana, India
PROFESSIONAL SUMMARY
TECHNICAL
SKILLS
Dedicated Java Developer with 5+ years of experience in
designing and developing enterprise level applications
CORE JAVA
using Java Spring Framework and microservices
lava I'
Java 11
architecture Expertise in building scalable backend
systems, RESTful APIs, and database integration with
lava OOP Concepts
strong knowledge of software design patterns and best
practices Proven track record of optimizing application
Multithreading
performance and delivering high-quality code in agile
environments
FRAMEWORKS
PROFESSIONAL EXPERIENCE
Spring Boot
Spring MVC
Spring Security
Senior Java Developer
Hibernato
JPA
Accenture Solutions
Jan 2022 Present
Java 17
Spring Boot
Spring Security
Microservices
DATABASES
PostgreSQL
Redis
Docker
Kafka
JUnit
PostgreSQI
MySQI
Developed microservices architecture using Java 17 and Spring
Oracle DB
Redis
Boot serving 500K+ daily transactions
Implemented secure authentication and authorization using
JDBC
Spring Security and JWT tokens
Designed and optimized PostgreSQI database schemas reducing
query execution time by 50%
WEB
Built event driven systems using Apache Kafka for real-time
TECHNOLOGIES
data processing
RESTAI
Implemented Redis caching strategies improving application
response 40%
Microservice
Servlets
Containerized applications using Docker and deployed on
Kubernetes clusters
JSP
SON
Achieved 90% code coverage through compreher sive unit
testing with JUnit and Mockito
TOOLS DEVOPS
Docker Kafka
Java Developer
Mayen Gi
Tomcat
Capgemini India
Mar 2020 Dec 2021
Java 11
Spring MVC
libernato
MySQI
RESTAPI
TESTING
Maven
Git
Unit
Mockito
Buil enterprise web applications using Java 11. Spring MVC.
and Hibernate ORM
Integration Testing
Developed RESTful APIs for frontend consumption and third-
party integrations
Unit Testing
Implemented database operations using Hibernate with MySQL
backend
Used Mayen for project management and dependency resolution
EDUCATION
Collaborated with cross-functional teams using Git for version
control
Participated code reviews and maintained high coding
Bachelor Technology
standards
(Computer Science)
Jawaharlal Nehru
Technological University
2015-2019
Associate Software Engineer
Wipro Technologies
Jul 2019 - Fcb 2020
CERTIFICATIONS
Juya8
Servlets
JSP
JDBC
Oracle
Tomcat
Oracle Certified Professional Java
Developed web applications using Java Servlets, and ISP
SE
technologies
Implemented database connectivity using JDBC with Oracle
Spring Professional Certification
database
Deployed applications on Apache Tomcat server
AWS Certified Developer
Fixed bugs and implemented feature enhancements based on
Associate
client requirements
Learned enterprise development practices and coding standards
Docker Certified Associate
Apache Kafka Developer
FEATURED PROJECTS
Microservice Architecture
LANGUAGES
Banking
E-Commerce Order
Microservices
Management
Platform
Telugu: Native
Java II
Spring MVC
Hindi: Fluent
Java 17
Spring Boot
libernate
MySQL
English: Fluent
PostgreSQ1
Redis
Tamil: Basic
RESTAPI
Kafka
Docker
Built order management
system using Java and
KEY
Architected prehensive
banki platform using
Spring MVC framework
ACHIEVEMENTS
microservices with Java 17
Implemented Hibernate for
and Spring Boot Implemented
ORM mapping with MySQL
database created REST APIs
PostgreSQL data
. performance improvement
persistence Redis caching
for order processing and
database queries
and Kalka for event streaming
integrated payment gateway
90% coverage
testing
Containerized services using
services
Led team of developers
500K daily transactions handled
Docker scalable
Zero production bugs in last months
deployment
Employee
Inventory Tracking
Management stem
API
Java 8
Servlets
Spring Boot
JSP
JDBC
Spring Security
JUnit
Oracle DB
Mockito
Mayen
Developed employee
Created REST for
management application using
inventory management using
Java with Servlets JSP
Spring Spring
for interface Used JDBC
Security authentication
for database operations with
Implemented comprehensive
Oracle backend implemented
testing with JUnit and
CRU D operations and
Mockito managed project
employee reporting features
dependencies with Mayen
build tool

2025-06-13 13:42:22 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Java 11\",\n    \"Java OOP Concepts\",\n    \"Multithreading\",\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\",\n    \"RESTful APIs\",\n    \"Microservices\",\n    \"Servlets\",\n    \"JSP\",\n    \"JDBC\",\n    \"JSON\",\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Integration Testing\",\n    \"Unit Testing\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\"\n  ],\n  \"soft_skills\": [\n    \"Team collaboration\",\n    \"Code reviews\",\n    \"High coding standards\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"Oracle Certified Professional Java SE\",\n    \"Spring Professional Certification\",\n    \"AWS Certified Developer Associate\",\n    \"Docker Certified Associate\",\n    \"Apache Kafka Developer\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\"\n  ],\n  \"tools\": [\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Docker\",\n    \"Kafka\",\n    \"Tomcat\",\n    \"Kubernetes\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"Oracle DB\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Kubernetes\"\n  ],\n  \"key_achievements\": [\n    \"Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions\",\n    \"Designed and optimized PostgreSQL database schemas reducing query execution time by 50%\",\n    \"Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito\"\n  ],\n  \"summary\": \"Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1286,"outputTokens":647,"totalTokens":1933}}
2025-06-13 13:42:22 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Java 11",
    "Java OOP Concepts",
    "Multithreading",
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA",
    "RESTful APIs",
    "Microservices",
    "Servlets",
    "JSP",
    "JDBC",
    "JSON",
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Integration Testing",
    "Unit Testing",
    "Docker",
    "Kafka",
    "Kubernetes"
  ],
  "soft_skills": [
    "Team collaboration",
    "Code reviews",
    "High coding standards"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 5,
  "certifications": [
    "Oracle Certified Professional Java SE",
    "Spring Professional Certification",
    "AWS Certified Developer Associate",
    "Docker Certified Associate",
    "Apache Kafka Developer"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "Java"
  ],
  "frameworks": [
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA"
  ],
  "tools": [
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Docker",
    "Kafka",
    "Tomcat",
    "Kubernetes"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "Oracle DB",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS",
    "Kubernetes"
  ],
  "key_achievements": [
    "Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions",
    "Designed and optimized PostgreSQL database schemas reducing query execution time by 50%",
    "Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito"
  ],
  "summary": "Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments."
}
```
2025-06-13 13:42:22 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Deepika Reddy - Java Developer.pdf
2025-06-13 13:42:22 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Processed candidate: Deepika Reddy - Java Developer.pdf with ID: d88b14f7-795e-48b8-9610-201b5f81067c
2025-06-13 13:42:22 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Deepika Reddy - Java Developer.pdf (ID: d88b14f7-795e-48b8-9610-201b5f81067c) in 17360ms
2025-06-13 13:42:22 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:42:22 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Deepika Reddy - Java Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, s (truncated)...]
2025-06-13 13:42:22 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:42:23 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:42:23 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:42:23 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Processing resume upload: Karan Singh - DevOps Engineer.pdf
2025-06-13 13:42:32 [http-nio-8081-exec-7] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/acb234b9-af0c-4f92-9832-62001af6707b-Karan Singh - DevOps Engineer.pdf
2025-06-13 13:42:44 [http-nio-8081-exec-7] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/acb234b9-af0c-4f92-9832-62001af6707b-Karan Singh - DevOps Engineer.pdf
2025-06-13 13:42:44 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
karan.singh@email.com
+91 97531 86420
Karan Singh
DevOps Engineer & Cloud Architect
linkedin.com/in/karansingh
STATUS: ACTIVE UPTIME: 5+ YEARS I DEPLOYMENTS: 1000+
in github.com/karansingh
o
Gurgaon, Haryana, India
$ cat professional_summary.txt
TECHNICAL ARSENAL
CLOUD PLATFORMS
Experienced DevOps Engineer with 5+ years of expertise in automating
AWS EC2
AWS EKS
AWS RDS
AWS
deployment pipelines, managing cloud infrastructure. and orchestrating
AWS CloudWatch
AWS CodePipeline
AWS CLI
containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD
automation with strong background in Infrastructure as Code and monitoring
solutions Proven track record of reducing deployment time by 80% and
CONTAINERIZATION
improving system reliability to 99.9% uptime through robust DevOps practices.
Docker
Kubernetes
Docker Swarm
Helm
Container Registry
$ grep -r "experience" /career/history
CI/CD TOOLS
[PROCESS]
Jenkins
GitLab
GitHub Actions
Git
Maven
Senior DevOps Engineer
SonarQub
Paytm (One97 Communications)
Jan 2022 Present
AWS
Kubernetes
Docker
Jenkins
Terraform
Ansible
Prometheus
Grafana
ELK Stack
INFRASTRUCTURE AS CODE
Architected AWS cloud infrastructure using Terraform managing 100+ EC2 instances
Terraform
Ansible
CloudFormation
YAML
JSON
and RDS clusters
Implemented Kubernetes orchestration for microservices serving 50M+ daily
transactions
MONITORING LOGGING
Built Jenkins CI/CD pipelines reducing deployment time from 4 hours to 30 minutes
Prometheus
Grafana
ELK Stack
Alertmanager
Elasticsearch
Kibana
Configured monitoring stack using Prometheus and Grafana achieving 99.9% uptime SLA
Automated infrastructure provisioning using Ansible playbooks saving 20 hours/week
Implemented ELK Stack for centralized logging and real-time log analysis
SYSTEM ADMINISTRATION
Managed Docker container registry and optimized image sizes by 60%
Linux
Shell Scripting
Nainx
Apache
Tomcat
Redis
[PROCESS]
# PERFORMANCE METRICS
DevOps Engineer
Nagarro Software
Mar 2021 Dec 2021
99.9%
80%
AWS EC2
Docker Swarm
GitLab CI
CloudFormation
Nginx
Redis
SYSTEMUPTIME
DEPLOY TIME REDUCTION
Deployed applications on AWS EC2 using Docker Swarm for container orchestration
1000+
100+
Created GitLab CT pipelines for automated testing and deployment processes
DEPLOYMENTS
EC2 INSTANCES
Implemented infrastructure using AWS CloudFormation templates
Configured Nginx load balancers for high availability and traffic distribution
# SYSTEM CONFIGURATION
Set up Redis clusters for caching and session management
Optimized application performance resulting in 40% faster response times
Bachelor of Technology (Information
Technology)
Guru Gobind Singh Indraprastha University
2016 2020
[PROCESS]
Junior DevOps Engineer
# SECURITY CERTIFICATES
Mindtree Limited
Jun 2020 Feb 2021
Linux
Shell Scripting
Git
Mayer
Tomcat
AWS Certified DevOps Engineer Professional
Managed Linux servers and wrote Shell scripts for automation tasks
Certified Kubernetes Administrator (CKA)
Implemented Git workflows and branching strategies for development teams
Docker Certified Associate
Configured Mayen build processes for Java applications
Terraform Associate Certification
Deployed applications on Apache Tomcat servers
Learned infrastructure management and deployment best practices
Jenkins Certified Engineer
AWS Solutions Architect Associate
Prometheus Certified Associate
$ ls -la /projects/featured
LANGUAGE SUPPORT
[PROJECT]
[PROJECT]
Microservices Platform
CI/CD Automation Pipeline
Hindi: Native
Kubernetes
Docker
AWS EKS
Terraform
Jenkins
GitLab
Docker
English: Fluent
Helm
AWS CodePipeline
SonarQube
Punjabi: Native
Urdu: Conversational
Built scalable microservices platform on
Implemented end-to-end CI/CD pipeline
AWS EKS using Kubernetes and Docker.
using Jenkins and GitLab CI with Docker
Automated infrastructure deployment with
containerization. Integrated AWS
ADDITIONAL MODULES
Terraform and managed application
CodePipeline for cloud-native deployments
deployments using Helm charts for
and SonarQube for code quality analysis.
Microservices Architecture
consistent and reliable releases.
Site Reliability Engineering
cloud Security Best Practices
Disaster Recovery Planning
Cost Optimization Strategies
Agile DevOps Methodologies
[PROJECT]
[PROJECT]
Infrastructure Monitoring
Infrastructure as Code
SYSTEM STATUS
Prometheus
Grafana
ELK Stack
Terraform
Ansible
CloudFormation
AWS CloudWatch
Alertmanager
Shell Scripting
AWS CLI
OPERATIONAL: All systems running
MONITORING: Active 24/7
BACKUP: Automated daily
Set up comprehensive monitoring solution
Automated infrastructure provisioning
SECURITY Enhanced protection
PERFORMANCE: Optimized
using Prometheus and Grafana with ELK
using Terraform and Ansible with AWS
Stack for log aggregation. Configured AWS
CloudFormation. Created Shell scripts and
CloudWatch and Alertmanager for proactive
AWS CLI automation for infrastructure
incident management
management and deployment processes.

2025-06-13 13:42:50 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"AWS EC2\", \"AWS EKS\", \"AWS RDS\", \"AWS CloudWatch\", \"AWS CodePipeline\", \"AWS CLI\", \"Docker\", \"Kubernetes\", \"Docker Swarm\", \"Helm\", \"Container Registry\", \"Jenkins\", \"GitLab\", \"GitHub Actions\", \"Git\", \"Maven\", \"SonarQub\", \"Terraform\", \"Ansible\", \"Prometheus\", \"Grafana\", \"ELK Stack\", \"Alertmanager\", \"Elasticsearch\", \"Kibana\", \"Linux\", \"Shell Scripting\", \"Nginx\", \"Apache\", \"Tomcat\", \"Redis\", \"CloudFormation\", \"YAML\", \"JSON\"\n  ],\n  \"soft_skills\": [\n    \"Agile DevOps Methodologies\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Information Technology)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified DevOps Engineer Professional\",\n    \"Certified Kubernetes Administrator (CKA)\",\n    \"Docker Certified Associate\",\n    \"Terraform Associate Certification\",\n    \"Jenkins Certified Engineer\",\n    \"AWS Solutions Architect Associate\",\n    \"Prometheus Certified Associate\"\n  ],\n  \"industries\": [\n    \"IT\", \"Finance Technology\"\n  ],\n  \"programming_languages\": [\n    \"Shell Scripting\"\n  ],\n  \"frameworks\": [\n    \"Kubernetes\", \"Docker Swarm\", \"Helm\"\n  ],\n  \"tools\": [\n    \"Jenkins\", \"GitLab\", \"GitHub Actions\", \"Git\", \"Maven\", \"SonarQub\", \"Terraform\", \"Ansible\", \"Prometheus\", \"Grafana\", \"ELK Stack\", \"Alertmanager\", \"Elasticsearch\", \"Kibana\", \"Linux\", \"Nginx\", \"Apache\", \"Tomcat\", \"Redis\", \"CloudFormation\", \"AWS CLI\"\n  ],\n  \"databases\": [\n    \"AWS RDS\", \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Reduced deployment time by 80%\",\n    \"Improved system reliability to 99.9% uptime\",\n    \"Optimized Docker image sizes by 60%\"\n  ],\n  \"summary\": \"Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment times and enhancing system reliability.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1431,"outputTokens":633,"totalTokens":2064}}
2025-06-13 13:42:50 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "AWS EC2", "AWS EKS", "AWS RDS", "AWS CloudWatch", "AWS CodePipeline", "AWS CLI", "Docker", "Kubernetes", "Docker Swarm", "Helm", "Container Registry", "Jenkins", "GitLab", "GitHub Actions", "Git", "Maven", "SonarQub", "Terraform", "Ansible", "Prometheus", "Grafana", "ELK Stack", "Alertmanager", "Elasticsearch", "Kibana", "Linux", "Shell Scripting", "Nginx", "Apache", "Tomcat", "Redis", "CloudFormation", "YAML", "JSON"
  ],
  "soft_skills": [
    "Agile DevOps Methodologies"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Information Technology)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified DevOps Engineer Professional",
    "Certified Kubernetes Administrator (CKA)",
    "Docker Certified Associate",
    "Terraform Associate Certification",
    "Jenkins Certified Engineer",
    "AWS Solutions Architect Associate",
    "Prometheus Certified Associate"
  ],
  "industries": [
    "IT", "Finance Technology"
  ],
  "programming_languages": [
    "Shell Scripting"
  ],
  "frameworks": [
    "Kubernetes", "Docker Swarm", "Helm"
  ],
  "tools": [
    "Jenkins", "GitLab", "GitHub Actions", "Git", "Maven", "SonarQub", "Terraform", "Ansible", "Prometheus", "Grafana", "ELK Stack", "Alertmanager", "Elasticsearch", "Kibana", "Linux", "Nginx", "Apache", "Tomcat", "Redis", "CloudFormation", "AWS CLI"
  ],
  "databases": [
    "AWS RDS", "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Reduced deployment time by 80%",
    "Improved system reliability to 99.9% uptime",
    "Optimized Docker image sizes by 60%"
  ],
  "summary": "Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment times and enhancing system reliability."
}
```
2025-06-13 13:42:50 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Karan Singh - DevOps Engineer.pdf
2025-06-13 13:42:50 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Processed candidate: Karan Singh - DevOps Engineer.pdf with ID: 9d940a81-22fb-48d5-8c0d-33d97c874e63
2025-06-13 13:42:50 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Karan Singh - DevOps Engineer.pdf (ID: 9d940a81-22fb-48d5-8c0d-33d97c874e63) in 27593ms
2025-06-13 13:42:50 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:42:50 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Karan Singh - DevOps Engineer.pdf, success=true, extractedData={experienceLevel=SENIOR, sk (truncated)...]
2025-06-13 13:42:50 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:42:52 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:42:52 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:42:52 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Processing resume upload: Kavya Nair - Full Stack Developer.pdf
2025-06-13 13:42:57 [http-nio-8081-exec-10] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/46e944fd-9357-43e6-aba0-3353841a0195-Kavya Nair - Full Stack Developer.pdf
2025-06-13 13:43:06 [http-nio-8081-exec-10] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/46e944fd-9357-43e6-aba0-3353841a0195-Kavya Nair - Full Stack Developer.pdf
2025-06-13 13:43:06 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
+91 98765 12345
Full Stack Developer
linkedin com/in/kavyanair
"Building scalable web solutions with modern technologies'
github.com/kavyanair
9
Kochi. Kerala India
PROFESSIONAL SUMMARY
TECHNICAL
ARSENAL
Passionate Full Stack Developer with 5+ years of experience
FRONTEND
building robust web applications using modern JavaScript
React
Vue.js
Angular
frameworks and cloud technologies. Expertise in React, Node.js,
TypeScript
JavaScript
Python, and AWS with a strong focus on creating scalable,
HTML5
CSS3
maintainable solutions. Proven track record of leading development
teams and delivering high-quality software that serves 100K+ users
daily.
BACKEND
Node.js
Express.js
Python
Django
Java
Spring Boot
PROFESSIONAL EXPERIENCE
DATABASES
PostgreSQL
MySQL
Senior Full Stack Developer
MongoDB
Redis
Oracle DE
Freshworks Inc.
Mar 2022 Present
React
TypeScript
Node.js
Express.js
PostgreSQL
Redis
AWS
Docker
CLOUD DEVOPS
Kubernetes
AWS
Docker
Kubernetes
Architected and developed microservices using Node js and Express.js
Jenkins
GitHub Actions
serving 100K+ daily active users
Built responsive React applications with TypeScript ensuring type safety and
maintainable code
APIS TOOLS
Optimized PostgreSQL database queries and implemented Redis caching
REST APIs
GraphQL
reducing API response time by 60%
Socket.ic
JWT
WebRTC
Deployed applications on AWS using Docker containers and Kubernetes
Chart.js
JUnit
Swagger
orchestration
Led team of developers and mentored junior developers in best practices
Implemented CI/CD pipelines using Jenkins and GitHub Actions reducing
EDUCATION
deployment time by 50%
Master of Computer
Applications (MCA)
Cochin University of Science &
Technology
Full Stack Developer
2017 2019
Zoho Corporation
Jan 2020 Feb 2022
Vue.js
Python
Django
MySQL
MongoDB
REST APIs
GraphQL
Bachelor of Science
(Computer Science)
Developed enterprise CRM features using Vue js frontend and Python Django
University of Kerala
backend
2014 2017
Created RESTful APIs and GraphQL endpoints handling 50K+ requests per
hour
Designed and implemented database schemas in MySQL and MongoDB for
CERTIFICATIONS
optimal performance
Integrated third-party services and APIs for email marketing and analytics
AWS Certified Solutions Architect
functionality
Participated in code reviews and maintained high code quality standards
MongoDB Certified Developer
React Professional Certificate
Node.js Application Developer
Software Developer
Docker Certified Associate
UST Global
Jun 2019 Dec 2019
Kubernetes Administrator
Angular
Java
Spring Boot
Oracle DB
JUnit
Built banking applications using Angular frontend and Java Spring Boot
backend
LANGUAGES
Implemented secure user authentication and authorization using Spring
Security
Malayalam: Native
Developed unit tests using JUnit achieving 85% code coverage
English: Fluent
Hindi: Conversational
Worked with Oracle databases and optimized complex SQL queries
Tamil: Basic
FEATURED PROJECTS
Social Media Analytics
E-Learning Management
Platform
System
React Node.js MongoDB
Vue.js Python Django
Redis Chart.js AWS
PostgreSQL WebRTC
Developed comprehensive social
Built an online learning platform with
media analytics dashboard using
Vue. js frontend and Django backend
React and Chart. js for data
Integrated video conferencing using
visualization. Built scalable backend
WebRTC, implemented course
with Node.js and MongoDB,
management features, and used
implemented Redis for caching, and
PostgreSQL for data storage with
deployed on AWS with auto-scaling
automated backups.
capabilities.
Real-time Chat Application
Inventory Management API
TypeScript Socket.io Express.js
Java
Spring Boot MySQL
JWT
Docker
JUnit
Swagger
Created real-time messaging
Developed RESTful API for inventory
application using Socket io for
management using Java Spring Boot
WebSocket communication and
and MySQL Created comprehensive
TypeScript for type safety.
API documentation with Swagger,
Implemented JWT authentication,
implemented unit testing with JUnit,
built with Express js backend and
and added data validation and error
containerized using Docker for easy
handling.
deployment.

2025-06-13 13:43:12 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"Python\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Java\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"REST APIs\",\n    \"GraphQL\",\n    \"Socket.io\",\n    \"JWT\",\n    \"WebRTC\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"Swagger\",\n    \"Spring Security\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Code Review\",\n    \"Problem Solving\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Computer Applications (MCA)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect\",\n    \"MongoDB Certified Developer\",\n    \"React Professional Certificate\",\n    \"Node.js Application Developer\",\n    \"Docker Certified Associate\",\n    \"Kubernetes Administrator\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"CRM\",\n    \"Banking\",\n    \"Analytics\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Spring Boot\"\n  ],\n  \"tools\": [\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"GitHub Actions\",\n    \"Swagger\",\n    \"Chart.js\",\n    \"JUnit\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"MongoDB\",\n    \"Redis\",\n    \"Oracle DB\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Architected and developed microservices serving 100K+ daily active users\",\n    \"Optimized PostgreSQL database queries and implemented Redis caching reducing API response time by 60%\",\n    \"Implemented CI/CD pipelines reducing deployment time by 50%\"\n  ],\n  \"summary\": \"Passionate Full Stack Developer with 5+ years of experience in building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1215,"outputTokens":677,"totalTokens":1892}}
2025-06-13 13:43:12 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Vue.js",
    "Angular",
    "TypeScript",
    "JavaScript",
    "Python",
    "Node.js",
    "Express.js",
    "Django",
    "Java",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "REST APIs",
    "GraphQL",
    "Socket.io",
    "JWT",
    "WebRTC",
    "Chart.js",
    "JUnit",
    "Swagger",
    "Spring Security"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Code Review",
    "Problem Solving"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Computer Applications (MCA)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified Solutions Architect",
    "MongoDB Certified Developer",
    "React Professional Certificate",
    "Node.js Application Developer",
    "Docker Certified Associate",
    "Kubernetes Administrator"
  ],
  "industries": [
    "Software Development",
    "CRM",
    "Banking",
    "Analytics"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "Java"
  ],
  "frameworks": [
    "React",
    "Vue.js",
    "Angular",
    "Node.js",
    "Express.js",
    "Django",
    "Spring Boot"
  ],
  "tools": [
    "Docker",
    "Kubernetes",
    "Jenkins",
    "GitHub Actions",
    "Swagger",
    "Chart.js",
    "JUnit"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "MongoDB",
    "Redis",
    "Oracle DB"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Architected and developed microservices serving 100K+ daily active users",
    "Optimized PostgreSQL database queries and implemented Redis caching reducing API response time by 60%",
    "Implemented CI/CD pipelines reducing deployment time by 50%"
  ],
  "summary": "Passionate Full Stack Developer with 5+ years of experience in building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily."
}
```
2025-06-13 13:43:12 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Kavya Nair - Full Stack Developer.pdf
2025-06-13 13:43:12 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Processed candidate: Kavya Nair - Full Stack Developer.pdf with ID: a3e54454-1128-4dda-aa4d-85e26a85bacf
2025-06-13 13:43:12 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Kavya Nair - Full Stack Developer.pdf (ID: a3e54454-1128-4dda-aa4d-85e26a85bacf) in 19638ms
2025-06-13 13:43:12 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:43:12 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Kavya Nair - Full Stack Developer.pdf, success=true, extractedData={experienceLevel=SENIOR (truncated)...]
2025-06-13 13:43:12 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:43:16 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:43:16 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:43:16 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Processing resume upload: Mei Chen - Marketing Analyst.pdf
2025-06-13 13:43:25 [http-nio-8081-exec-5] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/3b3078b9-b0fb-4b84-9b09-c3b6639fdad3-Mei Chen - Marketing Analyst.pdf
2025-06-13 13:43:38 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/3b3078b9-b0fb-4b84-9b09-c3b6639fdad3-Mei Chen - Marketing Analyst.pdf
2025-06-13 13:43:38 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Mei Chen
Marketing Analyst & Growth Strategist
mei.chen@email.com
+65 9876 5432
linkedin .com/in/meichen
Singapore
PROFESSIONAL SUMMARY
Core Skills
Data Analytics
95%
Data-driven Marketing Analyst with 6+ years of experience in
SQL & Python
90%
digital marketing analytics and customer insights across Asia-
Tableau & Power BI
88%
Pacific markets. Expert in transforming complex data into
actionable marketing strategies that drove 45% increase in ROI
Google Analytics
92%
and 35% growth in customer acquisition. Specialized in cross-
cultural marketing campaigns and multilingual market analysis.
A/B Testing
85%
Languages
PROFESSIONAL EXPERIENCE
Mandarin
English
Native
Fluent
Senior Marketing Analyst
Hindi
Shopee Singapore
Jan 2022 Present
Malay
Conversational
Basic
Analyzed user behavior data from 8 Southeast Asian markets with
100M+ active users
Developed attribution models improving campaign ROI
Education
measurement accuracy by 50%
Led A/B testing initiatives across mobile and web platforms with
28% conversion improvement
Master of Science in
Marketing Analytics
Created automated dashboards reducing manual reporting time by
National University of
75%
Singapore
2016 2018
Managed marketing analytics for flash sales generating S$50M+
revenue
Bachelor of Business
Administration
Nanyang Technological
University
Marketing Data Analyst
2012 2016
Grab Holdings
Mar 2020 Dec 2021
Performed cohort analysis for ride-hailing and food delivery
services across 6 countries
Certifications
Built predictive models for customer lifetime value with 89%
accuracy
Google Analytics 4 Certified
Optimized marketing spend allocation reducing CAC by 30%
across all verticals
Facebook Blueprint Certified
Conducted market research for new service launches in emerging
markets
Tableau Desktop Specialist
AWS Cloud Practitioner
Junior Marketing Analyst
Google Ads Certified
ByteDance (TikTok)
Jun 2018 Feb 2020
Analyzed viral content patterns and user engagement metrics for
HubSpot Marketing Analytics
APAC region
Created weekly performance reports for marketing campaigns
across 12 markets
Supported influencer marketing ROI analysis and campaign
optimization
Assisted in competitive analysis and market positioning strategies

2025-06-13 13:43:44 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Data Analytics\",\n    \"SQL\",\n    \"Python\",\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\",\n    \"A/B Testing\",\n    \"Predictive Modeling\",\n    \"Marketing Spend Allocation\",\n    \"Market Research\"\n  ],\n  \"soft_skills\": [\n    \"Cross-cultural Marketing\",\n    \"Multilingual Market Analysis\",\n    \"Campaign Optimization\",\n    \"Market Positioning\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Science in Marketing Analytics\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"Google Analytics 4 Certified\",\n    \"Facebook Blueprint Certified\",\n    \"Tableau Desktop Specialist\",\n    \"AWS Cloud Practitioner\",\n    \"Google Ads Certified\",\n    \"HubSpot Marketing Analytics\"\n  ],\n  \"industries\": [\n    \"Digital Marketing\",\n    \"E-commerce\",\n    \"Ride-hailing\",\n    \"Food Delivery\",\n    \"Social Media\"\n  ],\n  \"programming_languages\": [\n    \"SQL\",\n    \"Python\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Drove 45% increase in ROI and 35% growth in customer acquisition\",\n    \"Improved campaign ROI measurement accuracy by 50%\",\n    \"Achieved 28% conversion improvement through A/B testing\"\n  ],\n  \"summary\": \"Data-driven Marketing Analyst with over 6 years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":751,"outputTokens":471,"totalTokens":1222}}
2025-06-13 13:43:44 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Data Analytics",
    "SQL",
    "Python",
    "Tableau",
    "Power BI",
    "Google Analytics",
    "A/B Testing",
    "Predictive Modeling",
    "Marketing Spend Allocation",
    "Market Research"
  ],
  "soft_skills": [
    "Cross-cultural Marketing",
    "Multilingual Market Analysis",
    "Campaign Optimization",
    "Market Positioning"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Science in Marketing Analytics",
  "years_of_experience": 6,
  "certifications": [
    "Google Analytics 4 Certified",
    "Facebook Blueprint Certified",
    "Tableau Desktop Specialist",
    "AWS Cloud Practitioner",
    "Google Ads Certified",
    "HubSpot Marketing Analytics"
  ],
  "industries": [
    "Digital Marketing",
    "E-commerce",
    "Ride-hailing",
    "Food Delivery",
    "Social Media"
  ],
  "programming_languages": [
    "SQL",
    "Python"
  ],
  "frameworks": [],
  "tools": [
    "Tableau",
    "Power BI",
    "Google Analytics"
  ],
  "databases": [],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Drove 45% increase in ROI and 35% growth in customer acquisition",
    "Improved campaign ROI measurement accuracy by 50%",
    "Achieved 28% conversion improvement through A/B testing"
  ],
  "summary": "Data-driven Marketing Analyst with over 6 years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis."
}
```
2025-06-13 13:43:44 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Mei Chen - Marketing Analyst.pdf
2025-06-13 13:43:44 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Processed candidate: Mei Chen - Marketing Analyst.pdf with ID: dc98521c-1fcb-44af-bf51-a03e53ffc071
2025-06-13 13:43:44 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Mei Chen - Marketing Analyst.pdf (ID: dc98521c-1fcb-44af-bf51-a03e53ffc071) in 27537ms
2025-06-13 13:43:44 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:43:44 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Mei Chen - Marketing Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, ski (truncated)...]
2025-06-13 13:43:44 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:43:45 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:43:45 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:43:45 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Processing resume upload: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 13:43:49 [http-nio-8081-exec-2] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/3a95fde2-b809-4b44-9a06-e1bc0806b48c-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 13:43:57 [http-nio-8081-exec-2] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/3a95fde2-b809-4b44-9a06-e1bc0806b48c-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 13:43:57 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
PROFESSIONAL SUMMARY
Results-oriented Sales & Marketing professional with 7+
years of experience in the Indian market, specializing in
digital marketing strategies and B2B sales. Proven track
Priya Sharma
record of increasing revenue by 40% and expanding
market presence across Tier 1 and Tier 2 cities. Expert in
Sales & Marketing Professional
managing multi-channel campaigns and building long-term
client relationships in competitive markets.
Contact
priya.sharma@email.com
PROFESSIONAL EXPERIENCE
+91 98765 43210
Senior Marketing Manager
linkedin.com/in/priyasharma
Tata Digital Solutions
Jan 2021 Present
Mumbai, Maharashtra, India
Led digital marketing initiatives for pan-India market expansion,
Core Skills
reaching 15+ states
Managed ₹50 lakh annual marketing budget with 35% ROI
Lead Generation
improvement
Developed localized campaigns for regional markets increasing
Digital Marketing
engagement by 60%
Built strategic partnerships with 25+ B2B clients across various
CRM Management
industries
Campaign Strategy
Implemented CRM system reducing sales cycle time by 30%
Analytics
Marketing Executive
Languages
Reliance Industries Ltd
Mar 2019 Dec 2020
Executed social media strategies achieving 2M+ followers across
Hindi (Native)
platforms
English (Fluent)
Coordinated trade shows and exhibitions in Mumbai, Delhi, and
Bangalore
Marathi (Native)
Managed vendor relationships and negotiated contracts saving
₹15 lakh annually
Certifications
Created content marketing strategy increasing website traffic by
150%
Google Ads Certified Professional
HubSpot Inbound Marketing
Salesforce Administrator
Sales Associate
Digital Marketing Institute
Wipro Technologies
Jun 2017 Feb 2019
Achieved 125% of sales targets consistently across Western
India region
Built client database of 200+ prospects through cold calling and
networking
Participated in 10+ industry conferences and generated 50+
qualified leads
EDUCATION
Master of Business Administration (Marketing)
Indian Institute of Management, Ahmedabad
2015 2017
Bachelor of Commerce
University of Mumbai
2012 2015

2025-06-13 13:44:01 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Lead Generation\",\n    \"Digital Marketing\",\n    \"CRM Management\",\n    \"Campaign Strategy\",\n    \"Analytics\"\n  ],\n  \"soft_skills\": [\n    \"Client Relationship Management\",\n    \"Strategic Partnerships\",\n    \"Negotiation\",\n    \"Content Creation\",\n    \"Budget Management\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Marketing)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"Google Ads Certified Professional\",\n    \"HubSpot Inbound Marketing\",\n    \"Salesforce Administrator\",\n    \"Digital Marketing Institute\"\n  ],\n  \"industries\": [\n    \"Digital Solutions\",\n    \"Reliance Industries\",\n    \"Information Technology\"\n  ],\n  \"programming_languages\": [],\n  \"frameworks\": [],\n  \"tools\": [\n    \"CRM system\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.\",\n    \"Managed ₹50 lakh annual marketing budget with 35% ROI improvement.\",\n    \"Executed social media strategies achieving 2M+ followers across platforms.\"\n  ],\n  \"summary\": \"Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market. Specializes in digital marketing strategies and B2B sales, with a proven track record of increasing revenue and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":722,"outputTokens":395,"totalTokens":1117}}
2025-06-13 13:44:01 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Lead Generation",
    "Digital Marketing",
    "CRM Management",
    "Campaign Strategy",
    "Analytics"
  ],
  "soft_skills": [
    "Client Relationship Management",
    "Strategic Partnerships",
    "Negotiation",
    "Content Creation",
    "Budget Management"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Marketing)",
  "years_of_experience": 7,
  "certifications": [
    "Google Ads Certified Professional",
    "HubSpot Inbound Marketing",
    "Salesforce Administrator",
    "Digital Marketing Institute"
  ],
  "industries": [
    "Digital Solutions",
    "Reliance Industries",
    "Information Technology"
  ],
  "programming_languages": [],
  "frameworks": [],
  "tools": [
    "CRM system"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.",
    "Managed ₹50 lakh annual marketing budget with 35% ROI improvement.",
    "Executed social media strategies achieving 2M+ followers across platforms."
  ],
  "summary": "Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market. Specializes in digital marketing strategies and B2B sales, with a proven track record of increasing revenue and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships."
}
```
2025-06-13 13:44:01 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 13:44:01 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Processed candidate: Priya Sharma - Sales & Marketing Professional.pdf with ID: b9a9f31e-6ba3-42e6-a0da-d629e41db8af
2025-06-13 13:44:01 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Priya Sharma - Sales & Marketing Professional.pdf (ID: b9a9f31e-6ba3-42e6-a0da-d629e41db8af) in 15922ms
2025-06-13 13:44:01 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:44:01 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Priya Sharma - Sales & Marketing Professional.pdf, success=true, extractedData={experience (truncated)...]
2025-06-13 13:44:01 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:44:05 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:44:05 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:44:05 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Processing resume upload: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 13:44:10 [http-nio-8081-exec-6] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/d32e227b-fd35-4e2d-a510-7f1729067ced-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 13:44:16 [http-nio-8081-exec-6] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/d32e227b-fd35-4e2d-a510-7f1729067ced-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 13:44:16 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Rajesh Kumar
Demand Planning Specialist
rajesh kumar@email.com
+91 98765 54321
linkedin.com/in/rajeshkumar
T
Pune, Maharashtra, India
Professional Summary
Strategic Demand Planning professional with 8+ years of experience in supply chain
optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting,
inventory management, and S&OP processes with proven track record of improving forecast
accuracy by 45% and reducing inventory costs by ₹2.5 crores annually. Skilled in implementing
demand planning solutions for multi-location operations across India.
Professional Experience
O
Senior Demand Planning Manager
Apr 202 Present
Hindustan Unilever Limited
Lead demand planning for 800+ SKUs across North and West India regions
Improved forecast accuracy from 72% to 91% using advanced analytics and ML models
Reduced excess inventory by ₹1.8 crores through enhanced demand sensing
Led S&OP implementation across 8 manufacturing locations
Managed cross-functional teams of 15+ members across supply chain functions
Implemented SAP IBP resulting in 40% reduction in planning cycle time
Demand Planner
Jun 2019 Mar 2021
ITC Limited
Managed demand planning for cigarettes and FMCG portfolio worth ₹500 crores
Developed statistical models for seasonal demand patterns using R and Python
Collaborated with marketing teams for promotional planning and new product launches
Reduced stockout incidents by 35% through improved demand sensing
Created automated dashboards using Power BI for executive reporting
Supply Chain Analyst
Jul 2017 May 2019
Mahindra & Mahindra
Supported inventory optimization for automotive spare parts across 200+ dealers
Performed root cause analysis on forecast variances and implemented corrections
Created Excel-based planning tools reducing manual effort by 60%
Assisted in vendor collaboration initiatives improving supplier fill rates
Core Competencies
Planning & Forecasting
Technology & Tools
Statistical Forecasting
Demand Sensing
SAP IBP/APO
Oracle Demantra
Power BI
S&OP
Inventory Optimization
Advanced Excel
Python
R Programming
Collaborative Planning
Industry Knowledge
FMCG
Automotive
Manufacturing
Retail
Multi- location Ops
Education & Certifications
Master of Business Administration (Operations)
Indian Institute of Management, Kozhikode
2015 2017
Bachelor of Engineering (Mechanical)
Pune University
2011 2015
Certifications
APICS SCOR Certified CPIM Certified SAP IBP Certification Six Sigma Green Belt

2025-06-13 13:44:20 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Statistical Forecasting\",\n    \"Demand Sensing\",\n    \"Inventory Optimization\",\n    \"Advanced Excel\",\n    \"Python\",\n    \"R Programming\"\n  ],\n  \"soft_skills\": [\n    \"Collaborative Planning\",\n    \"Industry Knowledge\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Operations)\",\n  \"years_of_experience\": 8,\n  \"certifications\": [\n    \"APICS SCOR Certified\",\n    \"CPIM Certified\",\n    \"SAP IBP Certification\",\n    \"Six Sigma Green Belt\"\n  ],\n  \"industries\": [\n    \"FMCG\",\n    \"Automotive\",\n    \"Manufacturing\",\n    \"Retail\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R Programming\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"SAP IBP/APO\",\n    \"Oracle Demantra\",\n    \"Power BI\",\n    \"Advanced Excel\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Improved forecast accuracy from 72% to 91% using advanced analytics and ML models\",\n    \"Reduced excess inventory by ₹1.8 crores through enhanced demand sensing\",\n    \"Reduced stockout incidents by 35% through improved demand sensing\"\n  ],\n  \"summary\": \"Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with proven track record of improving forecast accuracy by 45% and reducing inventory costs by ₹2.5 crores annually.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":775,"outputTokens":427,"totalTokens":1202}}
2025-06-13 13:44:20 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Statistical Forecasting",
    "Demand Sensing",
    "Inventory Optimization",
    "Advanced Excel",
    "Python",
    "R Programming"
  ],
  "soft_skills": [
    "Collaborative Planning",
    "Industry Knowledge"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Operations)",
  "years_of_experience": 8,
  "certifications": [
    "APICS SCOR Certified",
    "CPIM Certified",
    "SAP IBP Certification",
    "Six Sigma Green Belt"
  ],
  "industries": [
    "FMCG",
    "Automotive",
    "Manufacturing",
    "Retail"
  ],
  "programming_languages": [
    "Python",
    "R Programming"
  ],
  "frameworks": [],
  "tools": [
    "SAP IBP/APO",
    "Oracle Demantra",
    "Power BI",
    "Advanced Excel"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Improved forecast accuracy from 72% to 91% using advanced analytics and ML models",
    "Reduced excess inventory by ₹1.8 crores through enhanced demand sensing",
    "Reduced stockout incidents by 35% through improved demand sensing"
  ],
  "summary": "Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with proven track record of improving forecast accuracy by 45% and reducing inventory costs by ₹2.5 crores annually."
}
```
2025-06-13 13:44:20 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 13:44:20 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Processed candidate: Rajesh Kumar - Demand Planning Specialist.pdf with ID: 180c4865-917f-4bde-8dcc-bcc051b980fe
2025-06-13 13:44:20 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rajesh Kumar - Demand Planning Specialist.pdf (ID: 180c4865-917f-4bde-8dcc-bcc051b980fe) in 15951ms
2025-06-13 13:44:20 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:44:20 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rajesh Kumar - Demand Planning Specialist.pdf, success=true, extractedData={experienceLeve (truncated)...]
2025-06-13 13:44:21 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:44:22 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:44:22 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:44:22 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Processing resume upload: Rohit Gupta - Angular Developer.pdf
2025-06-13 13:44:26 [http-nio-8081-exec-1] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/a2ee1b17-c639-46b1-92b3-edfd21d4de0f-Rohit Gupta - Angular Developer.pdf
2025-06-13 13:44:31 [http-nio-8081-exec-1] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/a2ee1b17-c639-46b1-92b3-edfd21d4de0f-Rohit Gupta - Angular Developer.pdf
2025-06-13 13:44:31 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
hit Gupta
per & Frontend Specialist
+91 99876 54321
A linkedin.com/in/rohitgupta
github.com/rohitgupta
Delhi. India
I
PROFESSIONAL SUMMARY
TECHNICAL
EXPERTISE
Experienced Angular Developer with 4+ years of
ANGULAR FRAMEWORK
expertise in building dynamic, responsive web
applications using Angular framework and
Angular
Angular 1
TypeScript. Proficient in creating scalable frontend
Angular
Angular CLI
solutions with RxJS, NgRx state management, and
Angula Router
modern UI libraries. Strong background in integrating
RESTful APIs, implementing unit testing with Jasmine
and Karma, and optimizing application performance.
CORE TECHNOLOGIES
Passionate about clean code, user experience, and
TypeScript
JavaScript
staying updated with latest Angular trends and best
practices.
HTML5 CSS3
STATE MANAGEMENT
T
PROFESSIONAL EXPERIENCE
NgRx RxJ
Observable
Reactive Programming
Senior Angular Developer
HCL Technologies
Feb 2022 Present
UI LIBRARIES
Angular
TypeScript
RxJS
NgRx
ingula Material
Bootstra
Angular Material
Jasmine Karma REST APIs
Chart.j
PrimeNG
. Developed enterprise banking applications using Angular
15+ and TypeScript with 99 9% uptime
.
Implemented state management using NgR> for complex
TESTING APIS
application state handling
Jasmine
Karma
. Built reusable components using Angular Material and
custom UI libraries
REST
Integrated RESTful APIs and handled asynchronous
WebSocke
Socket.ic
operations using Rx1S observables
Achieved 95% code coverage through comprehensive unit
testing with Jasmine and Karma
TOOLS OTHERS
Optimized application performance resulting 40% faster
page load times
VS Code
Mentored junior developers Angular best practices
Webpack
and code review processes
EDUCATION
Angular Developer
Tech Mahindra
Jun 2021 2022
Bachelor of Technology
Angular 12
TypeScript
Bootstrap
Chart.js
(Computer Science)
HTTP Client
Forms
Delhi Technological University
2016-2020
. Built responsive dashboard applications using Angular 12
and Bootstrap framework
.
Created interactive data visualizations using Chart.js and
Angular integration
CERTIFICATIONS
Implemented reactive forms and template-driven forms
for data collection
Angular Certified Developer
Consumed REST APIs using Angular HTTP Client and
handled error scenarios
TypeScript Professional
Collaborated with UX/UI teams to implement pixel perfect
designs
NgRx State Management
Participated agile development cycles with daily
standups and sprint planning
Rx1S Reactive Programming
Frontend Web Development
Frontend Developer
Angular Testing with Jasmine
Cognizant Technology
Aug 2020 May
Solutions
2021
LANGUAGES
Angular
JavaScript
HTML5
CSS3
SCSS
Gi
Hindi: Native
English: Fluent
.
Developed customer facing web applications using
Angular 10 and modern JavaScript
Punjabi: Conversational
Created responsive layouts using HTML5, CSS3, and SCSS
preprocessor
INTERESTS
Implemented routing and navigation using Angular Router
Worked with version control using Git and collaborated in
Frontend Architectur Angular
team environments
Updates Open Source Contributing
Fixed bugs and implemented feature enhancements
. Tech Blogging UI/UX Design
based on client requirements
FEATURED PROJECTS
Banking Dashboard
E-Commerce Admin
System
Panel
Angular
NgRx
Angular 12
Angular Material
TypeScript
Bootstrap
Chart.js
RxJS
REST APIs
Forms
Developed comprehensive
Built admin panel e
banking dashboard using
commerce management
Angular with NgRx for
using Angular 12 and
state management
TypeScript Implemented
Integrated Angular Material
Bootstrap responsive
components consistent
design integrated REST
UI and Chart.j for financial
APIs data operations,
data visualization Used
and created complex forms
RxJS handling complex
for product and inventory
asynchronous operations
management
and real-time updates.
Task Management
Real-time Chat
Application
Interface
Angular
Jasmine
Angula Socket.ig
Karma
HTTP Client
SCSS WebSocket
Local Storage
Reactive Forms
Created task management
Developed real-time chat
app using Angular 10 with
application using Angular 14
local storage data
and Socket.ic WebSocket
persistence. Implemented
communication Styled with
comprehensive unit testing
SCSS custom
with Jasmine and Karma.
animations impleme nted
used HTTP Client for API
reactive forms message
integration and built drag
input. and handled real time
and-drop functionality for
message updates efficiently
task organization

2025-06-13 13:44:37 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Angular\",\n    \"Angular 1\",\n    \"TypeScript\",\n    \"RxJS\",\n    \"NgRx\",\n    \"Angular Router\",\n    \"Angular CLI\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"Chart.js\",\n    \"PrimeNG\",\n    \"Jasmine\",\n    \"Karma\",\n    \"REST APIs\",\n    \"WebSocket\",\n    \"Socket.io\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\",\n    \"Git\",\n    \"VS Code\",\n    \"Webpack\",\n    \"HTTP Client\",\n    \"Forms\",\n    \"Local Storage\",\n    \"Reactive Forms\"\n  ],\n  \"soft_skills\": [\n    \"Mentoring\",\n    \"Collaboration\",\n    \"Agile development\",\n    \"Team environments\"\n  ],\n  \"experience_level\": \"MID\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 4,\n  \"certifications\": [\n    \"Angular Certified Developer\",\n    \"TypeScript Professional\",\n    \"NgRx State Management\",\n    \"RxJS Reactive Programming\",\n    \"Frontend Web Development\",\n    \"Angular Testing with Jasmine\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"TypeScript\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\"\n  ],\n  \"frameworks\": [\n    \"Angular\",\n    \"Angular 1\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"Chart.js\",\n    \"PrimeNG\"\n  ],\n  \"tools\": [\n    \"VS Code\",\n    \"Webpack\",\n    \"Git\",\n    \"Jasmine\",\n    \"Karma\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime.\",\n    \"Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma.\",\n    \"Optimized application performance resulting in 40% faster page load times.\"\n  ],\n  \"summary\": \"Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular, TypeScript, RxJS, and NgRx. Passionate about clean code, user experience, and staying updated with the latest Angular trends.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1267,"outputTokens":625,"totalTokens":1892}}
2025-06-13 13:44:37 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Angular",
    "Angular 1",
    "TypeScript",
    "RxJS",
    "NgRx",
    "Angular Router",
    "Angular CLI",
    "Angular Material",
    "Bootstrap",
    "Chart.js",
    "PrimeNG",
    "Jasmine",
    "Karma",
    "REST APIs",
    "WebSocket",
    "Socket.io",
    "HTML5",
    "CSS3",
    "SCSS",
    "Git",
    "VS Code",
    "Webpack",
    "HTTP Client",
    "Forms",
    "Local Storage",
    "Reactive Forms"
  ],
  "soft_skills": [
    "Mentoring",
    "Collaboration",
    "Agile development",
    "Team environments"
  ],
  "experience_level": "MID",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 4,
  "certifications": [
    "Angular Certified Developer",
    "TypeScript Professional",
    "NgRx State Management",
    "RxJS Reactive Programming",
    "Frontend Web Development",
    "Angular Testing with Jasmine"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "TypeScript",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS"
  ],
  "frameworks": [
    "Angular",
    "Angular 1",
    "Angular Material",
    "Bootstrap",
    "Chart.js",
    "PrimeNG"
  ],
  "tools": [
    "VS Code",
    "Webpack",
    "Git",
    "Jasmine",
    "Karma"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime.",
    "Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma.",
    "Optimized application performance resulting in 40% faster page load times."
  ],
  "summary": "Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular, TypeScript, RxJS, and NgRx. Passionate about clean code, user experience, and staying updated with the latest Angular trends."
}
```
2025-06-13 13:44:37 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rohit Gupta - Angular Developer.pdf
2025-06-13 13:44:37 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Processed candidate: Rohit Gupta - Angular Developer.pdf with ID: 834f9e86-2869-4150-893f-4c1d462b6468
2025-06-13 13:44:37 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rohit Gupta - Angular Developer.pdf (ID: 834f9e86-2869-4150-893f-4c1d462b6468) in 15038ms
2025-06-13 13:44:37 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:44:37 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rohit Gupta - Angular Developer.pdf, success=true, extractedData={experienceLevel=MID, ski (truncated)...]
2025-06-13 13:44:37 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:44:38 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 13:44:38 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 13:44:38 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 13:44:38 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:44:38 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@2b5eec1d, com.hackathon.hr.model.Candidate@b2e6e84, com.hackathon. (truncated)...]
2025-06-13 13:44:38 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:47:11 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 13:47:11 [http-nio-8081-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 13:47:11 [http-nio-8081-exec-9] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 13:47:11 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 13:47:11 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 13:47:11 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 13:47:11 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:47:11 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 13:47:11 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 13:47:11 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 13:47:12 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 13:47:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 13:47:12 [http-nio-8081-exec-8] DEBUG c.h.hr.controller.HRController - Index page loaded with 10 candidates and 10 jobs
2025-06-13 13:47:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 13:47:13 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:47:13 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 13:47:13 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 13:47:13 [http-nio-8081-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 13:47:13 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 13:47:13 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/candidates.js", parameters={}
2025-06-13 13:47:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 13:47:13 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/upload.js", parameters={}
2025-06-13 13:47:13 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:47:13 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 13:47:13 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/matching.js", parameters={}
2025-06-13 13:47:13 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 13:47:13 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:47:13 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:47:13 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:47:13 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:47:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 13:47:13 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 13:47:13 [http-nio-8081-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 13:47:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 13:47:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 13:47:13 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 13:47:13 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:47:13 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 13:47:13 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 13:47:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 13:47:13 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 13:47:13 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 13:47:13 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 13:47:13 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:47:13 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@5a785ef9, com.hackathon.hr.model.JobRequirement@24867e73, com (truncated)...]
2025-06-13 13:47:13 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 13:47:13 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 13:47:13 [http-nio-8081-exec-4] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 13:47:13 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:47:13 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:47:13 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@2b5eec1d, com.hackathon.hr.model.Candidate@b2e6e84, com.hackathon. (truncated)...]
2025-06-13 13:47:13 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:47:13 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 13:47:13 [http-nio-8081-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 13:47:13 [http-nio-8081-exec-9] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 13:47:13 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 13:47:13 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 13:47:13 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 13:47:13 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:47:13 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 13:47:13 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 13:47:13 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 13:50:14 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 13:50:14 [http-nio-8081-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 13:50:14 [http-nio-8081-exec-5] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 13:50:14 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 13:50:14 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 13:50:14 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 13:50:14 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:50:14 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 13:50:14 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 13:50:14 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 13:51:26 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:51:26 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:51:26 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Processing resume upload: Aarav Sharma - Junior Developer.pdf
2025-06-13 13:51:38 [http-nio-8081-exec-6] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/9c6c1235-5e65-497f-8d34-ca0727f52933-Aarav Sharma - Junior Developer.pdf
2025-06-13 13:51:45 [http-nio-8081-exec-6] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/9c6c1235-5e65-497f-8d34-ca0727f52933-Aarav Sharma - Junior Developer.pdf
2025-06-13 13:51:45 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Aarav Sharma
Junior Software Developer
aarav.sharma@email.com
+91 98765 43210
linkedin.com/in/aaravsharma
github .com/aaravsharma
Jaipur, Rajasthan, India
Professional Summary
Technical Skills
Enthusiastic Junior Software Developer with 2+ years
FRONTEND
of experience in web development using modern
HTML5
CSS3
JavaScript
React
technologies. Passionate about creating clean,
efficient code and building user-friendly applications.
Bootstrap
Strong foundation in JavaScript, React, and Node is
BACKEND
with hands-on experience in full-stack development
Node.j
Express
PHP
REST APIs
projects. Eager to contribute to innovative software
solutions and grow within a dynamic development
DATABASES
team.
MongoDB
MySQL
TOOLS TECHNOLOGIES
Git GitHub
VS Code
Postman
Professional Experience
JWT
APIS INTEGRATIONS
Junior Software Developer
TechStart Solutions Pvt Ltd
Jun 2022 Present
Stripe API
Local Storage
JavaScript React Node.js MongoDB Express.js Git
Education
Developed responsive web applications using React and
JavaScript ES6+
Bachelor of Computer
Built REST APIs using Node js and Express js serving
10,000+ daily requests
Applications (BCA)
University of Rajasthan
Implemented user authentication and authorization using
2019 - 2022
JWT tokens
Collaborated with senior developers using Git for version
control and code reviews
Certifications
Optimized database queries in MongoDB reducing
.
response time by 25%
JavaScript Fundamentals freeCodeCamp
.
React Developer Course Udemy
Participated in agile development cycles with daily
.
Node js Certification Coursera
standups and sprint planning
.
Git Version Control Codecademy
Languages
Hindi: Native
Web Development Intern
English: Fluent
Digital Innovators
Jan 2022 May 2022
Rajasthani: Native
HTML5 CSS3 JavaScript Bootstrap MySQL
Created static websites using HTML5, CSS3, and
Bootstrap framework
Implemented interactive features using vanilla JavaScript
Assisted in maintaining MySQL databases and writing
basic SQL queries
Fixed UI bugs and improved cross-browser compatibility
Learned modern development practices and coding
standards
Key Projects
E-Commerce Shopping Platform
React
Node.j
Express
MongoDB
JWT
Stripe API
Built full-stack e-commerce application with React frontend
and Node js backend Implemented user authentication using
JWT. integrated Stripe payment gateway, and created admin
dashboard for inventory management. Used MongoDB for
data storage and Express js for API development.
Task Management System
JavaScript
React
Local Storage
CSS3
Bootstrap
Developed a responsive task management application using
React and JavaScript. Features include task creation, editing,
deletion. and status tracking. Implemented local storage for
data persistence and used Bootstrap for responsive design
across devices.
Restaurant Website
HTML5
CSS3
JavaScript
MySQL
PHP
Created dynamic restaurant website with online reservation
system. Used HTML5 and CSS3 for layout and styling,
JavaScript for interactive features, and PHP with MySQL for
backend functionality including reservation management and
menu display.

2025-06-13 13:51:51 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"HTML5\",\n    \"CSS3\",\n    \"JavaScript\",\n    \"React\",\n    \"Bootstrap\",\n    \"Node.js\",\n    \"Express\",\n    \"PHP\",\n    \"REST APIs\",\n    \"MongoDB\",\n    \"MySQL\",\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\",\n    \"JWT\",\n    \"Stripe API\",\n    \"Local Storage\",\n    \"JavaScript ES6+\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Communication\",\n    \"Problem-solving\",\n    \"Adaptability\"\n  ],\n  \"experience_level\": \"ENTRY\",\n  \"education\": \"Bachelor of Computer Applications (BCA)\",\n  \"years_of_experience\": 2,\n  \"certifications\": [\n    \"JavaScript Fundamentals - freeCodeCamp\",\n    \"React Developer Course - Udemy\",\n    \"Node.js Certification - Coursera\",\n    \"Git Version Control - Codecademy\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"Web Development\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"Node.js\",\n    \"PHP\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Bootstrap\",\n    \"Express\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Built REST APIs using Node.js and Express.js serving 10,000+ daily requests\",\n    \"Optimized database queries in MongoDB reducing response time by 25%\",\n    \"Implemented user authentication and authorization using JWT tokens\"\n  ],\n  \"summary\": \"Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":920,"outputTokens":537,"totalTokens":1457}}
2025-06-13 13:51:51 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "HTML5",
    "CSS3",
    "JavaScript",
    "React",
    "Bootstrap",
    "Node.js",
    "Express",
    "PHP",
    "REST APIs",
    "MongoDB",
    "MySQL",
    "Git",
    "GitHub",
    "VS Code",
    "Postman",
    "JWT",
    "Stripe API",
    "Local Storage",
    "JavaScript ES6+"
  ],
  "soft_skills": [
    "Collaboration",
    "Communication",
    "Problem-solving",
    "Adaptability"
  ],
  "experience_level": "ENTRY",
  "education": "Bachelor of Computer Applications (BCA)",
  "years_of_experience": 2,
  "certifications": [
    "JavaScript Fundamentals - freeCodeCamp",
    "React Developer Course - Udemy",
    "Node.js Certification - Coursera",
    "Git Version Control - Codecademy"
  ],
  "industries": [
    "Software Development",
    "Web Development"
  ],
  "programming_languages": [
    "JavaScript",
    "Node.js",
    "PHP"
  ],
  "frameworks": [
    "React",
    "Bootstrap",
    "Express"
  ],
  "tools": [
    "Git",
    "GitHub",
    "VS Code",
    "Postman"
  ],
  "databases": [
    "MongoDB",
    "MySQL"
  ],
  "cloud_platforms": [],
  "key_achievements": [
    "Built REST APIs using Node.js and Express.js serving 10,000+ daily requests",
    "Optimized database queries in MongoDB reducing response time by 25%",
    "Implemented user authentication and authorization using JWT tokens"
  ],
  "summary": "Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects."
}
```
2025-06-13 13:51:51 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Aarav Sharma - Junior Developer.pdf
2025-06-13 13:51:51 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Processed candidate: Aarav Sharma - Junior Developer.pdf with ID: 48a731ff-347a-453f-8aaa-9492f74126b6
2025-06-13 13:51:51 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Aarav Sharma - Junior Developer.pdf (ID: 48a731ff-347a-453f-8aaa-9492f74126b6) in 25580ms
2025-06-13 13:51:51 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:51:51 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Aarav Sharma - Junior Developer.pdf, success=true, extractedData={experienceLevel=ENTRY, s (truncated)...]
2025-06-13 13:51:52 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:51:52 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:51:53 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:51:53 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Processing resume upload: Anjali Patel - Data Analyst.pdf
2025-06-13 13:51:55 [http-nio-8081-exec-1] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/9ec36032-29c5-434e-85cd-0fd3d573f48b-Anjali Patel - Data Analyst.pdf
2025-06-13 13:52:02 [http-nio-8081-exec-1] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/9ec36032-29c5-434e-85cd-0fd3d573f48b-Anjali Patel - Data Analyst.pdf
2025-06-13 13:52:02 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Pater
S Intelligence Specialist
anjali.patel@email.com
+91 97845 62310
linkedin.com/in/anjalipate
Bangalore, Karnataka, India
Professional Summary
Technical Skills
Innovative Data Analyst with 6+ years of experience in
transforming complex datasets into strategic business
Programming
insights for Indian tech startups and MNCs. Expert in
Python
R
SQL
Java
Scala
machine learning, statistical modeling, and data
visualization with proven track record of improving
business efficiency by 50% and reducing costs by
Databases
₹30 lakh annually through data-driven
recommendations.
MySQL
PostgreSQL
MongoDB
Cassandra
Snowflake
Professional Experience
Analytics & ML
Senior Data Analyst
Pandas
NumPy
Scikit-learn
TensorFlow
Flipkart Group
Feb 2022 Present
Statistical Modeling
Developed ML models for customer behavior analysis
processing 10M+ transactions daily
Created automated dashboards reducing reporting time by
Visualization
70% for 15+ stakeholders
Led data quality initiatives improving accuracy by 95%
Tableau
Power B
matplotlib
seaborn
across e-commerce platform
D3.js
Implemented A/B testing framework increasing conversion
rates by 28%
Built recommendation engines improving customer
engagement by 35%
Cloud Platforms
AWS
Azure
GCP
Spark
Hadoop
Data Analyst
Infosys Limited
Jun 2020 Jan 2022
Analyzed financial data for global banking clients using
Python and SQL
Developed predictive models for fraud detection with 92%
Key Projects
accuracy
Created Power BI dashboards for C-level executives and
stakeholders
E-commerce Customer Segmentation
Optimized database queries improving performance by
Built ML clustering model using K-means and RFM
45%
analysis to segment 5M+ customers, enabling
personalized marketing campaigns with 40% higher
conversion rates.
Junior Data Analyst
Tata Consultancy Services
Jul 2018 May 2020
Real-time Fraud Detection System
Supported market research analysis for retail and
Developed ensemble learning model combining
healthcare clients
Random Forest and XGBoost achieving 94% accuracy
Developed Excel-based models for financial forecasting
in detecting fraudulent transactions for fintech
and budgeting
application.
Assisted in data migration projects and quality assurance
testing
Supply Chain Optimization Dashboard
Created interactive Tableau dashboard tracking 50+
KPIs across inventory, logistics, and vendor
performance, reducing operational costs by ₹25 lakh
annually.
Education
Master of Technology (Computer Science)
Indian Institute of Technology, Bombay
Certifications
2016 2018
AWS Certified Data Analytics Specialty (2024)
Bachelor of Engineering (Information
Technology)
Google Professional Data Engineer (2023)
Gujarat Technological University
2012 2016
Microsoft Azure Data Scientist Associate (2023)
Tableau Desktop Certified Professional (2022)
Google Analytics Individual Qualification (2022)
Languages
Hindi (Native)
English (Fluent)
Gujarati (Native)
Tamil (Conversational)

2025-06-13 13:52:09 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Machine Learning\",\n    \"Statistical Modeling\",\n    \"Data Visualization\",\n    \"Data Quality\",\n    \"A/B Testing\",\n    \"Recommendation Engines\",\n    \"Predictive Modeling\",\n    \"Fraud Detection\",\n    \"Database Optimization\",\n    \"Ensemble Learning\",\n    \"Financial Forecasting\",\n    \"Budgeting\",\n    \"Data Migration\",\n    \"Quality Assurance\"\n  ],\n  \"soft_skills\": [\n    \"Innovative\",\n    \"Analytical\",\n    \"Leadership\",\n    \"Communication\",\n    \"Problem-solving\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Technology (Computer Science)\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"AWS Certified Data Analytics Specialty (2024)\",\n    \"Google Professional Data Engineer (2023)\",\n    \"Microsoft Azure Data Scientist Associate (2023)\",\n    \"Tableau Desktop Certified Professional (2022)\",\n    \"Google Analytics Individual Qualification (2022)\"\n  ],\n  \"industries\": [\n    \"Tech Startups\",\n    \"E-commerce\",\n    \"Global Banking\",\n    \"Retail\",\n    \"Healthcare\",\n    \"Fintech\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R\",\n    \"SQL\",\n    \"Java\",\n    \"Scala\"\n  ],\n  \"frameworks\": [\n    \"Pandas\",\n    \"NumPy\",\n    \"Scikit-learn\",\n    \"TensorFlow\",\n    \"Spark\",\n    \"Hadoop\"\n  ],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"matplotlib\",\n    \"seaborn\",\n    \"D3.js\",\n    \"Excel\"\n  ],\n  \"databases\": [\n    \"MySQL\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"Cassandra\",\n    \"Snowflake\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\",\n    \"GCP\"\n  ],\n  \"key_achievements\": [\n    \"Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations\",\n    \"Increased conversion rates by 28% through A/B testing implementation\",\n    \"Reduced operational costs by ₹25 lakh annually with supply chain optimization dashboard\"\n  ],\n  \"summary\": \"Innovative Data Analyst with 6+ years of experience transforming complex datasets into strategic business insights. Proven expertise in machine learning, statistical modeling, and data visualization. Demonstrated success in improving business efficiency and reducing costs through data-driven solutions.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":934,"outputTokens":660,"totalTokens":1594}}
2025-06-13 13:52:09 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Machine Learning",
    "Statistical Modeling",
    "Data Visualization",
    "Data Quality",
    "A/B Testing",
    "Recommendation Engines",
    "Predictive Modeling",
    "Fraud Detection",
    "Database Optimization",
    "Ensemble Learning",
    "Financial Forecasting",
    "Budgeting",
    "Data Migration",
    "Quality Assurance"
  ],
  "soft_skills": [
    "Innovative",
    "Analytical",
    "Leadership",
    "Communication",
    "Problem-solving"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Technology (Computer Science)",
  "years_of_experience": 6,
  "certifications": [
    "AWS Certified Data Analytics Specialty (2024)",
    "Google Professional Data Engineer (2023)",
    "Microsoft Azure Data Scientist Associate (2023)",
    "Tableau Desktop Certified Professional (2022)",
    "Google Analytics Individual Qualification (2022)"
  ],
  "industries": [
    "Tech Startups",
    "E-commerce",
    "Global Banking",
    "Retail",
    "Healthcare",
    "Fintech"
  ],
  "programming_languages": [
    "Python",
    "R",
    "SQL",
    "Java",
    "Scala"
  ],
  "frameworks": [
    "Pandas",
    "NumPy",
    "Scikit-learn",
    "TensorFlow",
    "Spark",
    "Hadoop"
  ],
  "tools": [
    "Tableau",
    "Power BI",
    "matplotlib",
    "seaborn",
    "D3.js",
    "Excel"
  ],
  "databases": [
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Cassandra",
    "Snowflake"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure",
    "GCP"
  ],
  "key_achievements": [
    "Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations",
    "Increased conversion rates by 28% through A/B testing implementation",
    "Reduced operational costs by ₹25 lakh annually with supply chain optimization dashboard"
  ],
  "summary": "Innovative Data Analyst with 6+ years of experience transforming complex datasets into strategic business insights. Proven expertise in machine learning, statistical modeling, and data visualization. Demonstrated success in improving business efficiency and reducing costs through data-driven solutions."
}
```
2025-06-13 13:52:09 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Anjali Patel - Data Analyst.pdf
2025-06-13 13:52:09 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Processed candidate: Anjali Patel - Data Analyst.pdf with ID: 53da34cc-ead4-442c-8192-d6c986389cbe
2025-06-13 13:52:09 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Anjali Patel - Data Analyst.pdf (ID: 53da34cc-ead4-442c-8192-d6c986389cbe) in 16337ms
2025-06-13 13:52:09 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:52:09 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Anjali Patel - Data Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, skil (truncated)...]
2025-06-13 13:52:09 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:52:10 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:52:10 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:52:10 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Processing resume upload: Arjun Singh - Software Developer.pdf
2025-06-13 13:52:14 [http-nio-8081-exec-3] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/1f72bc37-25ea-4a64-99ed-b9ab6421f234-Arjun Singh - Software Developer.pdf
2025-06-13 13:52:20 [http-nio-8081-exec-3] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/1f72bc37-25ea-4a64-99ed-b9ab6421f234-Arjun Singh - Software Developer.pdf
2025-06-13 13:52:20 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Professional Summary
Experienced Full Stack Software Developer with 7+ years of
expertise in building scalable web applications and
Arjun Singh
microservices for Indian tech companies and global clients.
Proficient in modern JavaScript frameworks, cloud
Full Stack Developer
technologies, and agile methodologies. Strong track record of
leading development teams and delivering high-quality
arjun.singh@email.com
software solutions that improved system performance by 60%
+91 94567 89012
and reduced deployment time by 45%.
linkedin.com/in/arjunsingh
github.com/arjunsingh
Professional Experience
T
Hyderabad, Telangana, India
Senior Software Developer
TECHNICAL SKILLS
Zomato Limited
Mar 2022 Present
Frontend
React Node.js TypeScript MongoDB Redis AWS Docker
PostgreSQL
Led development of real-time order tracking system serving
Redis
200K+ daily orders
- Built microservices architecture reducing API response time by
55%
LANGUAGES
- Implemented automated testing pipeline achieving 90% code
Hindi
Native
coverage
English
Fluent
- Mentored 4 junior developers and conducted code reviews
Punjabi
Native
Optimized database queries reducing server costs by ₹8 lakh
monthly
Telugu
Conversational
Software Developer
TOOLS & PLATFORMS
PayTM (One97 Communications)
Jan 2020 Feb 2022
Git Docker . Kubernetes Jenkins AWS
Azure Jira Slack vs Code Intelli]
Vue.js
Express.js
MySQL
Python
Django
Jenkins
IDEA Postman Webpack
- Developed payment gateway integration handling 100 crore+
daily transactions
- Created fraud detection algorithms reducing fraudulent
transactions by 40%
- Built responsive wallet interface used by 50M+ active users
- Implemented CI/CD pipelines reducing deployment time from 4
hours to 30 minutes
Junior Software Developer
Mindtree Limited
Jul 2018 Dec 2019
Angular Spring Boot PostgreSQU HTML5 CSS3
- Developed e-commerce modules for US retail client using Angular
and Spring Boot
- Created responsive UI components improving user experience by
35%
T Participated in agile development with 2-week sprint cycles
1 Fixed 200+ bugs and implemented 50+ feature enhancements
Key Projects
Food Delivery
Cryptocurrency
Platform
Trading Bot
Built end-to-end food
Developed automated
delivery platform with real-
trading bot using Python
time tracking, payment
and machine learning
integration, and restaurant
algorithms achieving 15%
management system using
monthly returns in
MERN stack.
backtesting.
React
Node.js
Python TensorFlow
MongoDB
Redis
Education
Bachelor of Technology (Computer Science
Engineering)
Indian Institute of Technology, Hyderabad
2014 2018
Certifications & Achievements
AWS Certified Solutions Architect Associate (2024)
Google Cloud Professional Developer (2023)
MongoDB Certified Developer (2022)
Scrum Master Certified (2021)
Winner Smart India Hackathon 2017 (Government of India)
Open Source Contributor 1000+ GitHub contributions

2025-06-13 13:52:27 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Node.js\",\n    \"TypeScript\",\n    \"MongoDB\",\n    \"Redis\",\n    \"AWS\",\n    \"Docker\",\n    \"PostgreSQL\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"MySQL\",\n    \"Python\",\n    \"Django\",\n    \"Jenkins\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"TensorFlow\",\n    \"Git\",\n    \"Kubernetes\",\n    \"Azure\",\n    \"Jira\",\n    \"Slack\",\n    \"VS Code\",\n    \"IntelliJ\",\n    \"IDEA\",\n    \"Postman\",\n    \"Webpack\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Agile Methodologies\",\n    \"Problem Solving\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science Engineering)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect Associate (2024)\",\n    \"Google Cloud Professional Developer (2023)\",\n    \"MongoDB Certified Developer (2022)\",\n    \"Scrum Master Certified (2021)\",\n    \"Winner Smart India Hackathon 2017 (Government of India)\"\n  ],\n  \"industries\": [\n    \"Technology\",\n    \"E-commerce\",\n    \"Finance\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"HTML5\",\n    \"CSS3\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Node.js\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"Django\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"AWS\",\n    \"Azure\",\n    \"Jira\",\n    \"Slack\",\n    \"VS Code\",\n    \"IntelliJ\",\n    \"IDEA\",\n    \"Postman\",\n    \"Webpack\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"Redis\",\n    \"PostgreSQL\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\"\n  ],\n  \"key_achievements\": [\n    \"Improved system performance by 60% and reduced deployment time by 45%.\",\n    \"Reduced API response time by 55% through microservices architecture.\",\n    \"Achieved 90% code coverage with automated testing pipeline.\"\n  ],\n  \"summary\": \"Experienced Full Stack Software Developer with 7+ years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Strong track record of leading development teams and delivering high-quality software solutions.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":937,"outputTokens":760,"totalTokens":1697}}
2025-06-13 13:52:27 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Node.js",
    "TypeScript",
    "MongoDB",
    "Redis",
    "AWS",
    "Docker",
    "PostgreSQL",
    "Vue.js",
    "Express.js",
    "MySQL",
    "Python",
    "Django",
    "Jenkins",
    "Angular",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "TensorFlow",
    "Git",
    "Kubernetes",
    "Azure",
    "Jira",
    "Slack",
    "VS Code",
    "IntelliJ",
    "IDEA",
    "Postman",
    "Webpack"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Agile Methodologies",
    "Problem Solving"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science Engineering)",
  "years_of_experience": 7,
  "certifications": [
    "AWS Certified Solutions Architect Associate (2024)",
    "Google Cloud Professional Developer (2023)",
    "MongoDB Certified Developer (2022)",
    "Scrum Master Certified (2021)",
    "Winner Smart India Hackathon 2017 (Government of India)"
  ],
  "industries": [
    "Technology",
    "E-commerce",
    "Finance"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "HTML5",
    "CSS3"
  ],
  "frameworks": [
    "React",
    "Node.js",
    "Vue.js",
    "Express.js",
    "Angular",
    "Spring Boot",
    "Django"
  ],
  "tools": [
    "Git",
    "Docker",
    "Kubernetes",
    "Jenkins",
    "AWS",
    "Azure",
    "Jira",
    "Slack",
    "VS Code",
    "IntelliJ",
    "IDEA",
    "Postman",
    "Webpack"
  ],
  "databases": [
    "MongoDB",
    "Redis",
    "PostgreSQL",
    "MySQL"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure"
  ],
  "key_achievements": [
    "Improved system performance by 60% and reduced deployment time by 45%.",
    "Reduced API response time by 55% through microservices architecture.",
    "Achieved 90% code coverage with automated testing pipeline."
  ],
  "summary": "Experienced Full Stack Software Developer with 7+ years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Strong track record of leading development teams and delivering high-quality software solutions."
}
```
2025-06-13 13:52:27 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Arjun Singh - Software Developer.pdf
2025-06-13 13:52:27 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Processed candidate: Arjun Singh - Software Developer.pdf with ID: efd7fe67-f34f-4b91-ba6e-e45f784f88d8
2025-06-13 13:52:27 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Arjun Singh - Software Developer.pdf (ID: efd7fe67-f34f-4b91-ba6e-e45f784f88d8) in 17226ms
2025-06-13 13:52:27 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:52:27 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Arjun Singh - Software Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, (truncated)...]
2025-06-13 13:52:27 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:52:28 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 13:52:28 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 13:52:28 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Processing resume upload: Deepika Reddy - Java Developer.pdf
2025-06-13 13:52:33 [http-nio-8081-exec-4] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/3a4353c8-4b05-4607-9d73-036a0b652c74-Deepika Reddy - Java Developer.pdf
2025-06-13 13:52:44 [http-nio-8081-exec-4] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/3a4353c8-4b05-4607-9d73-036a0b652c74-Deepika Reddy - Java Developer.pdf
2025-06-13 13:52:44 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Deepika Reddy
Java Developer & Backend Engineer
dccpika.reddy@email .com
H
+91 98712 34567
- linkedin com/1 in/deepikareddy
github.com/deepikareddy
T
Hyderabad, Telangana, India
PROFESSIONAL SUMMARY
TECHNICAL
SKILLS
Dedicated Java Developer with 5+ years of experience in
designing and developing enterprise level applications
CORE JAVA
using Java Spring Framework and microservices
lava I'
Java 11
architecture Expertise in building scalable backend
systems, RESTful APIs, and database integration with
lava OOP Concepts
strong knowledge of software design patterns and best
practices Proven track record of optimizing application
Multithreading
performance and delivering high-quality code in agile
environments
FRAMEWORKS
PROFESSIONAL EXPERIENCE
Spring Boot
Spring MVC
Spring Security
Senior Java Developer
Hibernato
JPA
Accenture Solutions
Jan 2022 Present
Java 17
Spring Boot
Spring Security
Microservices
DATABASES
PostgreSQL
Redis
Docker
Kafka
JUnit
PostgreSQI
MySQI
Developed microservices architecture using Java 17 and Spring
Oracle DB
Redis
Boot serving 500K+ daily transactions
Implemented secure authentication and authorization using
JDBC
Spring Security and JWT tokens
Designed and optimized PostgreSQI database schemas reducing
query execution time by 50%
WEB
Built event driven systems using Apache Kafka for real-time
TECHNOLOGIES
data processing
RESTAI
Implemented Redis caching strategies improving application
response 40%
Microservice
Servlets
Containerized applications using Docker and deployed on
Kubernetes clusters
JSP
SON
Achieved 90% code coverage through compreher sive unit
testing with JUnit and Mockito
TOOLS DEVOPS
Docker Kafka
Java Developer
Mayen Gi
Tomcat
Capgemini India
Mar 2020 Dec 2021
Java 11
Spring MVC
libernato
MySQI
RESTAPI
TESTING
Maven
Git
Unit
Mockito
Buil enterprise web applications using Java 11. Spring MVC.
and Hibernate ORM
Integration Testing
Developed RESTful APIs for frontend consumption and third-
party integrations
Unit Testing
Implemented database operations using Hibernate with MySQL
backend
Used Mayen for project management and dependency resolution
EDUCATION
Collaborated with cross-functional teams using Git for version
control
Participated code reviews and maintained high coding
Bachelor Technology
standards
(Computer Science)
Jawaharlal Nehru
Technological University
2015-2019
Associate Software Engineer
Wipro Technologies
Jul 2019 - Fcb 2020
CERTIFICATIONS
Juya8
Servlets
JSP
JDBC
Oracle
Tomcat
Oracle Certified Professional Java
Developed web applications using Java Servlets, and ISP
SE
technologies
Implemented database connectivity using JDBC with Oracle
Spring Professional Certification
database
Deployed applications on Apache Tomcat server
AWS Certified Developer
Fixed bugs and implemented feature enhancements based on
Associate
client requirements
Learned enterprise development practices and coding standards
Docker Certified Associate
Apache Kafka Developer
FEATURED PROJECTS
Microservice Architecture
LANGUAGES
Banking
E-Commerce Order
Microservices
Management
Platform
Telugu: Native
Java II
Spring MVC
Hindi: Fluent
Java 17
Spring Boot
libernate
MySQL
English: Fluent
PostgreSQ1
Redis
Tamil: Basic
RESTAPI
Kafka
Docker
Built order management
system using Java and
KEY
Architected prehensive
banki platform using
Spring MVC framework
ACHIEVEMENTS
microservices with Java 17
Implemented Hibernate for
and Spring Boot Implemented
ORM mapping with MySQL
database created REST APIs
PostgreSQL data
. performance improvement
persistence Redis caching
for order processing and
database queries
and Kalka for event streaming
integrated payment gateway
90% coverage
testing
Containerized services using
services
Led team of developers
500K daily transactions handled
Docker scalable
Zero production bugs in last months
deployment
Employee
Inventory Tracking
Management stem
API
Java 8
Servlets
Spring Boot
JSP
JDBC
Spring Security
JUnit
Oracle DB
Mockito
Mayen
Developed employee
Created REST for
management application using
inventory management using
Java with Servlets JSP
Spring Spring
for interface Used JDBC
Security authentication
for database operations with
Implemented comprehensive
Oracle backend implemented
testing with JUnit and
CRU D operations and
Mockito managed project
employee reporting features
dependencies with Mayen
build tool

2025-06-13 13:52:50 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Java 11\",\n    \"Java OOP Concepts\",\n    \"Multithreading\",\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\",\n    \"RESTful APIs\",\n    \"Microservices\",\n    \"Servlets\",\n    \"JSP\",\n    \"JDBC\",\n    \"JSON\",\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Integration Testing\",\n    \"Unit Testing\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\"\n  ],\n  \"soft_skills\": [\n    \"Team collaboration\",\n    \"Code reviews\",\n    \"High coding standards\",\n    \"Problem-solving\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"Oracle Certified Professional Java SE\",\n    \"Spring Professional Certification\",\n    \"AWS Certified Developer Associate\",\n    \"Docker Certified Associate\",\n    \"Apache Kafka Developer\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\"\n  ],\n  \"tools\": [\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\",\n    \"Tomcat\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"Oracle DB\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions\",\n    \"Designed and optimized PostgreSQL database schemas reducing query execution time by 50%\",\n    \"Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito\"\n  ],\n  \"summary\": \"Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1286,"outputTokens":647,"totalTokens":1933}}
2025-06-13 13:52:50 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Java 11",
    "Java OOP Concepts",
    "Multithreading",
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA",
    "RESTful APIs",
    "Microservices",
    "Servlets",
    "JSP",
    "JDBC",
    "JSON",
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Integration Testing",
    "Unit Testing",
    "Docker",
    "Kafka",
    "Kubernetes"
  ],
  "soft_skills": [
    "Team collaboration",
    "Code reviews",
    "High coding standards",
    "Problem-solving"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 5,
  "certifications": [
    "Oracle Certified Professional Java SE",
    "Spring Professional Certification",
    "AWS Certified Developer Associate",
    "Docker Certified Associate",
    "Apache Kafka Developer"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "Java"
  ],
  "frameworks": [
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA"
  ],
  "tools": [
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Docker",
    "Kafka",
    "Kubernetes",
    "Tomcat"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "Oracle DB",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions",
    "Designed and optimized PostgreSQL database schemas reducing query execution time by 50%",
    "Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito"
  ],
  "summary": "Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments."
}
```
2025-06-13 13:52:50 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Deepika Reddy - Java Developer.pdf
2025-06-13 13:52:50 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Processed candidate: Deepika Reddy - Java Developer.pdf with ID: 6936515b-8759-448d-bd30-97ebb00b1205
2025-06-13 13:52:50 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Deepika Reddy - Java Developer.pdf (ID: 6936515b-8759-448d-bd30-97ebb00b1205) in 21852ms
2025-06-13 13:52:50 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:52:50 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Deepika Reddy - Java Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, s (truncated)...]
2025-06-13 13:52:50 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:52:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 13:52:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 13:52:51 [http-nio-8081-exec-9] DEBUG c.h.hr.controller.HRController - Retrieved 14 candidates
2025-06-13 13:52:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:52:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@b2e6e84, com.hackathon.hr.model.Candidate@68a7476f, com.hackathon. (truncated)...]
2025-06-13 13:52:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:55:00 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 13:55:00 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 13:55:00 [http-nio-8081-exec-7] DEBUG c.h.hr.controller.HRController - Retrieved 14 candidates
2025-06-13 13:55:00 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 13:55:00 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@b2e6e84, com.hackathon.hr.model.Candidate@68a7476f, com.hackathon. (truncated)...]
2025-06-13 13:55:00 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 13:59:15 [RMI TCP Connection(30)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 13:59:15 [RMI TCP Connection(30)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 13:59:15 [RMI TCP Connection(30)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 14:00:17 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 73798 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 14:00:17 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 14:00:17 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 14:00:17 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 14:00:17 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 14:00:19 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 14:00:19 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 14:00:19 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 14:00:19 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 14:00:19 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1828 ms
2025-06-13 14:00:21 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 14:00:21 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 14:00:21 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 14:00:21 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 14:00:21 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2025-06-13 14:00:21 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 14:00:21 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 14:00:22 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 14:00:22 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 14:00:22 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.819 seconds (JVM running for 6.179)
2025-06-13 14:00:29 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 14:00:29 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 14:00:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 14:00:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 14:00:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 14:00:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@33879d5f
2025-06-13 14:00:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@64263ebe
2025-06-13 14:00:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 14:00:29 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-13 14:00:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 14:00:29 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 14:00:29 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 14:00:29 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 14:00:29 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 14:00:30 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7db22bf6
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@52b9bce5
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1c140fb8
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 14:00:30 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 14:00:30 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:00:30 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 14:00:30 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 14:00:30 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 14:00:30 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 14:00:30 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 14:00:30 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:00:30 [http-nio-8081-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:00:30 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:00:30 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:00:30 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:00:30 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:00:30 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:00:30 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:00:30 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:00:30 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:00:30 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:00:30 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 14:00:30 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 14:00:30 [http-nio-8081-exec-4] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 14:00:30 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 14:00:30 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:00:30 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@63dc3f23, com.hackathon.hr.model.JobRequirement@bafefba, com. (truncated)...]
2025-06-13 14:00:30 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 14:00:30 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 14:00:30 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:00:30 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 14:00:30 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:00:31 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:00:31 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 14:00:31 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:00:31 [http-nio-8081-exec-6] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:00:31 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:00:31 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:00:31 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:00:31 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:00:31 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:00:31 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:00:31 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:00:49 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 14:00:49 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 14:00:49 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Processing resume upload: Aarav Sharma - Junior Developer.pdf
2025-06-13 14:01:00 [http-nio-8081-exec-7] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/ae029e8f-2803-44f5-9ca7-6b7c88ee6f26-Aarav Sharma - Junior Developer.pdf
2025-06-13 14:01:09 [http-nio-8081-exec-7] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/ae029e8f-2803-44f5-9ca7-6b7c88ee6f26-Aarav Sharma - Junior Developer.pdf
2025-06-13 14:01:09 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Aarav Sharma
Junior Software Developer
aarav.sharma@email.com
+91 98765 43210
linkedin.com/in/aaravsharma
github .com/aaravsharma
Jaipur, Rajasthan, India
Professional Summary
Technical Skills
Enthusiastic Junior Software Developer with 2+ years
FRONTEND
of experience in web development using modern
HTML5
CSS3
JavaScript
React
technologies. Passionate about creating clean,
efficient code and building user-friendly applications.
Bootstrap
Strong foundation in JavaScript, React, and Node is
BACKEND
with hands-on experience in full-stack development
Node.j
Express
PHP
REST APIs
projects. Eager to contribute to innovative software
solutions and grow within a dynamic development
DATABASES
team.
MongoDB
MySQL
TOOLS TECHNOLOGIES
Git GitHub
VS Code
Postman
Professional Experience
JWT
APIS INTEGRATIONS
Junior Software Developer
TechStart Solutions Pvt Ltd
Jun 2022 Present
Stripe API
Local Storage
JavaScript React Node.js MongoDB Express.js Git
Education
Developed responsive web applications using React and
JavaScript ES6+
Bachelor of Computer
Built REST APIs using Node js and Express js serving
10,000+ daily requests
Applications (BCA)
University of Rajasthan
Implemented user authentication and authorization using
2019 - 2022
JWT tokens
Collaborated with senior developers using Git for version
control and code reviews
Certifications
Optimized database queries in MongoDB reducing
.
response time by 25%
JavaScript Fundamentals freeCodeCamp
.
React Developer Course Udemy
Participated in agile development cycles with daily
.
Node js Certification Coursera
standups and sprint planning
.
Git Version Control Codecademy
Languages
Hindi: Native
Web Development Intern
English: Fluent
Digital Innovators
Jan 2022 May 2022
Rajasthani: Native
HTML5 CSS3 JavaScript Bootstrap MySQL
Created static websites using HTML5, CSS3, and
Bootstrap framework
Implemented interactive features using vanilla JavaScript
Assisted in maintaining MySQL databases and writing
basic SQL queries
Fixed UI bugs and improved cross-browser compatibility
Learned modern development practices and coding
standards
Key Projects
E-Commerce Shopping Platform
React
Node.j
Express
MongoDB
JWT
Stripe API
Built full-stack e-commerce application with React frontend
and Node js backend Implemented user authentication using
JWT. integrated Stripe payment gateway, and created admin
dashboard for inventory management. Used MongoDB for
data storage and Express js for API development.
Task Management System
JavaScript
React
Local Storage
CSS3
Bootstrap
Developed a responsive task management application using
React and JavaScript. Features include task creation, editing,
deletion. and status tracking. Implemented local storage for
data persistence and used Bootstrap for responsive design
across devices.
Restaurant Website
HTML5
CSS3
JavaScript
MySQL
PHP
Created dynamic restaurant website with online reservation
system. Used HTML5 and CSS3 for layout and styling,
JavaScript for interactive features, and PHP with MySQL for
backend functionality including reservation management and
menu display.

2025-06-13 14:01:14 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"HTML5\",\n    \"CSS3\",\n    \"JavaScript\",\n    \"React\",\n    \"Bootstrap\",\n    \"Node.js\",\n    \"Express.js\",\n    \"PHP\",\n    \"REST APIs\",\n    \"MongoDB\",\n    \"MySQL\",\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\",\n    \"JWT\",\n    \"Stripe API\",\n    \"Local Storage\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Communication\",\n    \"Problem-solving\",\n    \"Agile development\"\n  ],\n  \"experience_level\": \"ENTRY\",\n  \"education\": \"Bachelor of Computer Applications (BCA)\",\n  \"years_of_experience\": 2,\n  \"certifications\": [\n    \"JavaScript Fundamentals - freeCodeCamp\",\n    \"React Developer Course - Udemy\",\n    \"Node.js Certification - Coursera\",\n    \"Git Version Control - Codecademy\"\n  ],\n  \"industries\": [\n    \"Web Development\",\n    \"Software Solutions\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"PHP\",\n    \"Node.js\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Bootstrap\",\n    \"Express.js\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Built REST APIs using Node.js and Express.js serving 10,000+ daily requests\",\n    \"Optimized database queries in MongoDB reducing response time by 25%\",\n    \"Implemented user authentication and authorization using JWT tokens\"\n  ],\n  \"summary\": \"Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":920,"outputTokens":535,"totalTokens":1455}}
2025-06-13 14:01:14 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "HTML5",
    "CSS3",
    "JavaScript",
    "React",
    "Bootstrap",
    "Node.js",
    "Express.js",
    "PHP",
    "REST APIs",
    "MongoDB",
    "MySQL",
    "Git",
    "GitHub",
    "VS Code",
    "Postman",
    "JWT",
    "Stripe API",
    "Local Storage"
  ],
  "soft_skills": [
    "Collaboration",
    "Communication",
    "Problem-solving",
    "Agile development"
  ],
  "experience_level": "ENTRY",
  "education": "Bachelor of Computer Applications (BCA)",
  "years_of_experience": 2,
  "certifications": [
    "JavaScript Fundamentals - freeCodeCamp",
    "React Developer Course - Udemy",
    "Node.js Certification - Coursera",
    "Git Version Control - Codecademy"
  ],
  "industries": [
    "Web Development",
    "Software Solutions"
  ],
  "programming_languages": [
    "JavaScript",
    "PHP",
    "Node.js"
  ],
  "frameworks": [
    "React",
    "Bootstrap",
    "Express.js"
  ],
  "tools": [
    "Git",
    "GitHub",
    "VS Code",
    "Postman"
  ],
  "databases": [
    "MongoDB",
    "MySQL"
  ],
  "cloud_platforms": [],
  "key_achievements": [
    "Built REST APIs using Node.js and Express.js serving 10,000+ daily requests",
    "Optimized database queries in MongoDB reducing response time by 25%",
    "Implemented user authentication and authorization using JWT tokens"
  ],
  "summary": "Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects."
}
```
2025-06-13 14:01:14 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Aarav Sharma - Junior Developer.pdf
2025-06-13 14:01:14 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Processed candidate: Aarav Sharma - Junior Developer.pdf with ID: c4d909c8-6e34-4c91-83ba-94fdfcae5850
2025-06-13 14:01:14 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Aarav Sharma - Junior Developer.pdf (ID: c4d909c8-6e34-4c91-83ba-94fdfcae5850) in 25105ms
2025-06-13 14:01:14 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:01:14 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Aarav Sharma - Junior Developer.pdf, success=true, extractedData={experienceLevel=ENTRY, s (truncated)...]
2025-06-13 14:01:14 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:01:14 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 14:01:14 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 14:01:14 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Processing resume upload: Anjali Patel - Data Analyst.pdf
2025-06-13 14:01:16 [http-nio-8081-exec-8] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/9060ade6-84ac-4056-9e5a-680900143e9a-Anjali Patel - Data Analyst.pdf
2025-06-13 14:01:24 [http-nio-8081-exec-8] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/9060ade6-84ac-4056-9e5a-680900143e9a-Anjali Patel - Data Analyst.pdf
2025-06-13 14:01:24 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Pater
S Intelligence Specialist
anjali.patel@email.com
+91 97845 62310
linkedin.com/in/anjalipate
Bangalore, Karnataka, India
Professional Summary
Technical Skills
Innovative Data Analyst with 6+ years of experience in
transforming complex datasets into strategic business
Programming
insights for Indian tech startups and MNCs. Expert in
Python
R
SQL
Java
Scala
machine learning, statistical modeling, and data
visualization with proven track record of improving
business efficiency by 50% and reducing costs by
Databases
₹30 lakh annually through data-driven
recommendations.
MySQL
PostgreSQL
MongoDB
Cassandra
Snowflake
Professional Experience
Analytics & ML
Senior Data Analyst
Pandas
NumPy
Scikit-learn
TensorFlow
Flipkart Group
Feb 2022 Present
Statistical Modeling
Developed ML models for customer behavior analysis
processing 10M+ transactions daily
Created automated dashboards reducing reporting time by
Visualization
70% for 15+ stakeholders
Led data quality initiatives improving accuracy by 95%
Tableau
Power B
matplotlib
seaborn
across e-commerce platform
D3.js
Implemented A/B testing framework increasing conversion
rates by 28%
Built recommendation engines improving customer
engagement by 35%
Cloud Platforms
AWS
Azure
GCP
Spark
Hadoop
Data Analyst
Infosys Limited
Jun 2020 Jan 2022
Analyzed financial data for global banking clients using
Python and SQL
Developed predictive models for fraud detection with 92%
Key Projects
accuracy
Created Power BI dashboards for C-level executives and
stakeholders
E-commerce Customer Segmentation
Optimized database queries improving performance by
Built ML clustering model using K-means and RFM
45%
analysis to segment 5M+ customers, enabling
personalized marketing campaigns with 40% higher
conversion rates.
Junior Data Analyst
Tata Consultancy Services
Jul 2018 May 2020
Real-time Fraud Detection System
Supported market research analysis for retail and
Developed ensemble learning model combining
healthcare clients
Random Forest and XGBoost achieving 94% accuracy
Developed Excel-based models for financial forecasting
in detecting fraudulent transactions for fintech
and budgeting
application.
Assisted in data migration projects and quality assurance
testing
Supply Chain Optimization Dashboard
Created interactive Tableau dashboard tracking 50+
KPIs across inventory, logistics, and vendor
performance, reducing operational costs by ₹25 lakh
annually.
Education
Master of Technology (Computer Science)
Indian Institute of Technology, Bombay
Certifications
2016 2018
AWS Certified Data Analytics Specialty (2024)
Bachelor of Engineering (Information
Technology)
Google Professional Data Engineer (2023)
Gujarat Technological University
2012 2016
Microsoft Azure Data Scientist Associate (2023)
Tableau Desktop Certified Professional (2022)
Google Analytics Individual Qualification (2022)
Languages
Hindi (Native)
English (Fluent)
Gujarati (Native)
Tamil (Conversational)

2025-06-13 14:01:31 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Machine Learning\",\n    \"Statistical Modeling\",\n    \"Data Visualization\",\n    \"Data Quality Initiatives\",\n    \"A/B Testing\",\n    \"Recommendation Engines\",\n    \"Predictive Modeling\",\n    \"Database Query Optimization\",\n    \"Financial Forecasting\",\n    \"Budgeting\",\n    \"Data Migration\",\n    \"Quality Assurance Testing\"\n  ],\n  \"soft_skills\": [\n    \"Innovative\",\n    \"Analytical\",\n    \"Leadership\",\n    \"Communication\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Technology (Computer Science)\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"AWS Certified Data Analytics Specialty (2024)\",\n    \"Google Professional Data Engineer (2023)\",\n    \"Microsoft Azure Data Scientist Associate (2023)\",\n    \"Tableau Desktop Certified Professional (2022)\",\n    \"Google Analytics Individual Qualification (2022)\"\n  ],\n  \"industries\": [\n    \"E-commerce\",\n    \"Finance\",\n    \"Retail\",\n    \"Healthcare\",\n    \"Fintech\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R\",\n    \"SQL\",\n    \"Java\",\n    \"Scala\"\n  ],\n  \"frameworks\": [\n    \"Pandas\",\n    \"NumPy\",\n    \"Scikit-learn\",\n    \"TensorFlow\",\n    \"Spark\",\n    \"Hadoop\"\n  ],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"matplotlib\",\n    \"seaborn\",\n    \"D3.js\",\n    \"Excel\"\n  ],\n  \"databases\": [\n    \"MySQL\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"Cassandra\",\n    \"Snowflake\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\",\n    \"GCP\"\n  ],\n  \"key_achievements\": [\n    \"Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.\",\n    \"Increased conversion rates by 28% through the implementation of an A/B testing framework.\",\n    \"Reduced operational costs by ₹25 lakh annually by creating an interactive Tableau dashboard tracking 50+ KPIs.\"\n  ],\n  \"summary\": \"Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs through data-driven recommendations.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":934,"outputTokens":657,"totalTokens":1591}}
2025-06-13 14:01:31 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Machine Learning",
    "Statistical Modeling",
    "Data Visualization",
    "Data Quality Initiatives",
    "A/B Testing",
    "Recommendation Engines",
    "Predictive Modeling",
    "Database Query Optimization",
    "Financial Forecasting",
    "Budgeting",
    "Data Migration",
    "Quality Assurance Testing"
  ],
  "soft_skills": [
    "Innovative",
    "Analytical",
    "Leadership",
    "Communication"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Technology (Computer Science)",
  "years_of_experience": 6,
  "certifications": [
    "AWS Certified Data Analytics Specialty (2024)",
    "Google Professional Data Engineer (2023)",
    "Microsoft Azure Data Scientist Associate (2023)",
    "Tableau Desktop Certified Professional (2022)",
    "Google Analytics Individual Qualification (2022)"
  ],
  "industries": [
    "E-commerce",
    "Finance",
    "Retail",
    "Healthcare",
    "Fintech"
  ],
  "programming_languages": [
    "Python",
    "R",
    "SQL",
    "Java",
    "Scala"
  ],
  "frameworks": [
    "Pandas",
    "NumPy",
    "Scikit-learn",
    "TensorFlow",
    "Spark",
    "Hadoop"
  ],
  "tools": [
    "Tableau",
    "Power BI",
    "matplotlib",
    "seaborn",
    "D3.js",
    "Excel"
  ],
  "databases": [
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Cassandra",
    "Snowflake"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure",
    "GCP"
  ],
  "key_achievements": [
    "Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.",
    "Increased conversion rates by 28% through the implementation of an A/B testing framework.",
    "Reduced operational costs by ₹25 lakh annually by creating an interactive Tableau dashboard tracking 50+ KPIs."
  ],
  "summary": "Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs through data-driven recommendations."
}
```
2025-06-13 14:01:31 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Anjali Patel - Data Analyst.pdf
2025-06-13 14:01:31 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Processed candidate: Anjali Patel - Data Analyst.pdf with ID: 8307d335-a58d-436b-8882-245ac84ab373
2025-06-13 14:01:31 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Anjali Patel - Data Analyst.pdf (ID: 8307d335-a58d-436b-8882-245ac84ab373) in 16369ms
2025-06-13 14:01:31 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:01:31 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Anjali Patel - Data Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, skil (truncated)...]
2025-06-13 14:01:31 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:01:33 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 14:01:33 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 14:01:33 [http-nio-8081-exec-10] DEBUG c.h.hr.controller.HRController - Retrieved 2 candidates
2025-06-13 14:01:33 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:01:33 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@6d67b34a, com.hackathon.hr.model.Candidate@63a05096]]
2025-06-13 14:01:33 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:01:55 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:01:55 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:01:55 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 1 (Junior Frontend Developer)
2025-06-13 14:01:55 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 98.0 for candidate Aarav Sharma - Junior Developer.pdf and job Junior Frontend Developer
2025-06-13 14:01:55 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Anjali Patel - Data Analyst.pdf and job Junior Frontend Developer
2025-06-13 14:01:55 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Found 2 matches for job: Junior Frontend Developer
2025-06-13 14:01:55 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Found 2 matches for job ID: 1 in 15ms
2025-06-13 14:01:55 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:01:55 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=1, success=true, totalCandidates=2, jobTitle=Junior Frontend Developer, matchCount=2, matches (truncated)...]
2025-06-13 14:01:55 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:02:05 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:02:05 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:02:05 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 3 (Senior Full Stack Developer)
2025-06-13 14:02:05 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 40.0 for candidate Aarav Sharma - Junior Developer.pdf and job Senior Full Stack Developer
2025-06-13 14:02:05 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Anjali Patel - Data Analyst.pdf and job Senior Full Stack Developer
2025-06-13 14:02:05 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Found 2 matches for job: Senior Full Stack Developer
2025-06-13 14:02:05 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Found 2 matches for job ID: 3 in 9ms
2025-06-13 14:02:05 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:02:05 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=3, success=true, totalCandidates=2, jobTitle=Senior Full Stack Developer, matchCount=2, match (truncated)...]
2025-06-13 14:02:05 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:02:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:02:13 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:02:13 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 4 (Java Backend Developer)
2025-06-13 14:02:13 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 32.0 for candidate Aarav Sharma - Junior Developer.pdf and job Java Backend Developer
2025-06-13 14:02:13 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Anjali Patel - Data Analyst.pdf and job Java Backend Developer
2025-06-13 14:02:13 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Found 2 matches for job: Java Backend Developer
2025-06-13 14:02:13 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Found 2 matches for job ID: 4 in 7ms
2025-06-13 14:02:13 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:02:13 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=4, success=true, totalCandidates=2, jobTitle=Java Backend Developer, matchCount=2, matches=[c (truncated)...]
2025-06-13 14:02:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:02:19 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:02:19 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:02:19 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 9 (Demand Planning Manager - Supply Chain)
2025-06-13 14:02:19 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 14:02:19 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Anjali Patel - Data Analyst.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 14:02:19 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Found 2 matches for job: Demand Planning Manager - Supply Chain
2025-06-13 14:02:19 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Found 2 matches for job ID: 9 in 1ms
2025-06-13 14:02:19 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:02:19 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=9, success=true, totalCandidates=2, jobTitle=Demand Planning Manager - Supply Chain, matchCou (truncated)...]
2025-06-13 14:02:19 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:02:25 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:02:25 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:02:25 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 10 (Senior Angular Developer)
2025-06-13 14:02:25 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 36.888888888888886 for candidate Aarav Sharma - Junior Developer.pdf and job Senior Angular Developer
2025-06-13 14:02:25 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Anjali Patel - Data Analyst.pdf and job Senior Angular Developer
2025-06-13 14:02:25 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Found 2 matches for job: Senior Angular Developer
2025-06-13 14:02:25 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Found 2 matches for job ID: 10 in 1ms
2025-06-13 14:02:25 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:02:25 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=10, success=true, totalCandidates=2, jobTitle=Senior Angular Developer, matchCount=2, matches (truncated)...]
2025-06-13 14:02:25 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:02:32 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:02:32 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:02:32 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 5 (DevOps Engineer - Cloud Infrastructure)
2025-06-13 14:02:32 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 14:02:32 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Anjali Patel - Data Analyst.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 14:02:32 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Found 2 matches for job: DevOps Engineer - Cloud Infrastructure
2025-06-13 14:02:32 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Found 2 matches for job ID: 5 in 5ms
2025-06-13 14:02:32 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:02:32 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=5, success=true, totalCandidates=2, jobTitle=DevOps Engineer - Cloud Infrastructure, matchCou (truncated)...]
2025-06-13 14:02:32 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:02:41 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:02:41 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:02:41 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 8 (Senior Marketing Manager - Digital)
2025-06-13 14:02:41 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Senior Marketing Manager - Digital
2025-06-13 14:02:41 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Anjali Patel - Data Analyst.pdf and job Senior Marketing Manager - Digital
2025-06-13 14:02:41 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Found 2 matches for job: Senior Marketing Manager - Digital
2025-06-13 14:02:41 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Found 2 matches for job ID: 8 in 3ms
2025-06-13 14:02:41 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:02:41 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=8, success=true, totalCandidates=2, jobTitle=Senior Marketing Manager - Digital, matchCount=2 (truncated)...]
2025-06-13 14:02:42 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:03:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:03:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:03:51 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 4 (Java Backend Developer)
2025-06-13 14:03:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 32.0 for candidate Aarav Sharma - Junior Developer.pdf and job Java Backend Developer
2025-06-13 14:03:51 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Anjali Patel - Data Analyst.pdf and job Java Backend Developer
2025-06-13 14:03:51 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Found 2 matches for job: Java Backend Developer
2025-06-13 14:03:51 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Found 2 matches for job ID: 4 in 0ms
2025-06-13 14:03:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:03:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=4, success=true, totalCandidates=2, jobTitle=Java Backend Developer, matchCount=2, matches=[c (truncated)...]
2025-06-13 14:03:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:03:56 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:03:56 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:03:56 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 2 (Data Analyst - Tech & Analytics)
2025-06-13 14:03:56 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:03:56 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 46.63636363636364 for candidate Anjali Patel - Data Analyst.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:03:56 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Found 2 matches for job: Data Analyst - Tech & Analytics
2025-06-13 14:03:56 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Found 2 matches for job ID: 2 in 1ms
2025-06-13 14:03:56 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:03:56 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=2, success=true, totalCandidates=2, jobTitle=Data Analyst - Tech & Analytics, matchCount=2, m (truncated)...]
2025-06-13 14:03:56 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:04:20 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:04:20 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:04:20 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 2 (Data Analyst - Tech & Analytics)
2025-06-13 14:04:20 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:04:20 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 46.63636363636364 for candidate Anjali Patel - Data Analyst.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:04:20 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Found 2 matches for job: Data Analyst - Tech & Analytics
2025-06-13 14:04:20 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Found 2 matches for job ID: 2 in 3ms
2025-06-13 14:04:20 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:04:20 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=2, success=true, totalCandidates=2, jobTitle=Data Analyst - Tech & Analytics, matchCount=2, m (truncated)...]
2025-06-13 14:04:20 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:04:39 [RMI TCP Connection(14)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 14:04:39 [RMI TCP Connection(14)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 14:04:39 [RMI TCP Connection(14)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 14:04:49 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 73835 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 14:04:49 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 14:04:49 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 14:04:49 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 14:04:49 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 14:04:50 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 14:04:51 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 14:04:51 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 14:04:51 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 14:04:51 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1662 ms
2025-06-13 14:04:52 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 14:04:52 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 14:04:52 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 14:04:52 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 14:04:53 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2025-06-13 14:04:53 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 14:04:53 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 14:04:53 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 14:04:53 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 14:04:53 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.447 seconds (JVM running for 5.571)
2025-06-13 14:04:57 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 14:04:57 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@45dd61ca
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4cf9d9fd
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 14:04:57 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@46724bb8
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6da69a7c
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5166a66e
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 14:04:57 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:04:57 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 14:04:57 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 14:04:57 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 14:04:57 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 14:04:57 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 14:04:57 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 14:04:57 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:04:57 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:04:57 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 14:04:57 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@4fadefb5, com.hackathon.hr.model.JobRequirement@1d3a0bbc, com (truncated)...]
2025-06-13 14:04:57 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:04:58 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:05:09 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 14:05:09 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 14:05:09 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Processing resume upload: Aarav Sharma - Junior Developer.pdf
2025-06-13 14:05:21 [http-nio-8081-exec-4] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/49a063f1-59b3-46db-84f7-3144a69c91fe-Aarav Sharma - Junior Developer.pdf
2025-06-13 14:05:27 [http-nio-8081-exec-4] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/49a063f1-59b3-46db-84f7-3144a69c91fe-Aarav Sharma - Junior Developer.pdf
2025-06-13 14:05:27 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Aarav Sharma
Junior Software Developer
aarav.sharma@email.com
+91 98765 43210
linkedin.com/in/aaravsharma
github .com/aaravsharma
Jaipur, Rajasthan, India
Professional Summary
Technical Skills
Enthusiastic Junior Software Developer with 2+ years
FRONTEND
of experience in web development using modern
HTML5
CSS3
JavaScript
React
technologies. Passionate about creating clean,
efficient code and building user-friendly applications.
Bootstrap
Strong foundation in JavaScript, React, and Node is
BACKEND
with hands-on experience in full-stack development
Node.j
Express
PHP
REST APIs
projects. Eager to contribute to innovative software
solutions and grow within a dynamic development
DATABASES
team.
MongoDB
MySQL
TOOLS TECHNOLOGIES
Git GitHub
VS Code
Postman
Professional Experience
JWT
APIS INTEGRATIONS
Junior Software Developer
TechStart Solutions Pvt Ltd
Jun 2022 Present
Stripe API
Local Storage
JavaScript React Node.js MongoDB Express.js Git
Education
Developed responsive web applications using React and
JavaScript ES6+
Bachelor of Computer
Built REST APIs using Node js and Express js serving
10,000+ daily requests
Applications (BCA)
University of Rajasthan
Implemented user authentication and authorization using
2019 - 2022
JWT tokens
Collaborated with senior developers using Git for version
control and code reviews
Certifications
Optimized database queries in MongoDB reducing
.
response time by 25%
JavaScript Fundamentals freeCodeCamp
.
React Developer Course Udemy
Participated in agile development cycles with daily
.
Node js Certification Coursera
standups and sprint planning
.
Git Version Control Codecademy
Languages
Hindi: Native
Web Development Intern
English: Fluent
Digital Innovators
Jan 2022 May 2022
Rajasthani: Native
HTML5 CSS3 JavaScript Bootstrap MySQL
Created static websites using HTML5, CSS3, and
Bootstrap framework
Implemented interactive features using vanilla JavaScript
Assisted in maintaining MySQL databases and writing
basic SQL queries
Fixed UI bugs and improved cross-browser compatibility
Learned modern development practices and coding
standards
Key Projects
E-Commerce Shopping Platform
React
Node.j
Express
MongoDB
JWT
Stripe API
Built full-stack e-commerce application with React frontend
and Node js backend Implemented user authentication using
JWT. integrated Stripe payment gateway, and created admin
dashboard for inventory management. Used MongoDB for
data storage and Express js for API development.
Task Management System
JavaScript
React
Local Storage
CSS3
Bootstrap
Developed a responsive task management application using
React and JavaScript. Features include task creation, editing,
deletion. and status tracking. Implemented local storage for
data persistence and used Bootstrap for responsive design
across devices.
Restaurant Website
HTML5
CSS3
JavaScript
MySQL
PHP
Created dynamic restaurant website with online reservation
system. Used HTML5 and CSS3 for layout and styling,
JavaScript for interactive features, and PHP with MySQL for
backend functionality including reservation management and
menu display.

2025-06-13 14:05:32 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"HTML5\",\n    \"CSS3\",\n    \"JavaScript\",\n    \"React\",\n    \"Bootstrap\",\n    \"Node.js\",\n    \"Express\",\n    \"PHP\",\n    \"REST APIs\",\n    \"JWT\",\n    \"Stripe API\",\n    \"Local Storage\",\n    \"JavaScript ES6+\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Communication\",\n    \"Problem-solving\"\n  ],\n  \"experience_level\": \"ENTRY\",\n  \"education\": \"Bachelor of Computer Applications (BCA)\",\n  \"years_of_experience\": 2,\n  \"certifications\": [\n    \"JavaScript Fundamentals - freeCodeCamp\",\n    \"React Developer Course - Udemy\",\n    \"Node.js Certification - Coursera\",\n    \"Git Version Control - Codecademy\"\n  ],\n  \"industries\": [\n    \"Software Development\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"Node.js\",\n    \"PHP\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Bootstrap\",\n    \"Express\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Built REST APIs using Node.js and Express.js serving 10,000+ daily requests\",\n    \"Optimized database queries in MongoDB reducing response time by 25%\",\n    \"Implemented user authentication and authorization using JWT tokens\"\n  ],\n  \"summary\": \"Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":920,"outputTokens":492,"totalTokens":1412}}
2025-06-13 14:05:32 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "HTML5",
    "CSS3",
    "JavaScript",
    "React",
    "Bootstrap",
    "Node.js",
    "Express",
    "PHP",
    "REST APIs",
    "JWT",
    "Stripe API",
    "Local Storage",
    "JavaScript ES6+"
  ],
  "soft_skills": [
    "Collaboration",
    "Communication",
    "Problem-solving"
  ],
  "experience_level": "ENTRY",
  "education": "Bachelor of Computer Applications (BCA)",
  "years_of_experience": 2,
  "certifications": [
    "JavaScript Fundamentals - freeCodeCamp",
    "React Developer Course - Udemy",
    "Node.js Certification - Coursera",
    "Git Version Control - Codecademy"
  ],
  "industries": [
    "Software Development"
  ],
  "programming_languages": [
    "JavaScript",
    "Node.js",
    "PHP"
  ],
  "frameworks": [
    "React",
    "Bootstrap",
    "Express"
  ],
  "tools": [
    "Git",
    "GitHub",
    "VS Code",
    "Postman"
  ],
  "databases": [
    "MongoDB",
    "MySQL"
  ],
  "cloud_platforms": [],
  "key_achievements": [
    "Built REST APIs using Node.js and Express.js serving 10,000+ daily requests",
    "Optimized database queries in MongoDB reducing response time by 25%",
    "Implemented user authentication and authorization using JWT tokens"
  ],
  "summary": "Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects."
}
```
2025-06-13 14:05:32 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Aarav Sharma - Junior Developer.pdf
2025-06-13 14:05:32 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Processed candidate: Aarav Sharma - Junior Developer.pdf with ID: aa2acb08-bb4b-4c0e-8ccb-3b08a5d2693d
2025-06-13 14:05:32 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Aarav Sharma - Junior Developer.pdf (ID: aa2acb08-bb4b-4c0e-8ccb-3b08a5d2693d) in 23464ms
2025-06-13 14:05:33 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:05:33 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Aarav Sharma - Junior Developer.pdf, success=true, extractedData={experienceLevel=ENTRY, s (truncated)...]
2025-06-13 14:05:33 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:05:33 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 14:05:33 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 14:05:33 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Processing resume upload: Anjali Patel - Data Analyst.pdf
2025-06-13 14:05:38 [http-nio-8081-exec-5] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/eac3824b-093b-4717-a756-bd16673b6308-Anjali Patel - Data Analyst.pdf
2025-06-13 14:05:46 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/eac3824b-093b-4717-a756-bd16673b6308-Anjali Patel - Data Analyst.pdf
2025-06-13 14:05:46 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Pater
S Intelligence Specialist
anjali.patel@email.com
+91 97845 62310
linkedin.com/in/anjalipate
Bangalore, Karnataka, India
Professional Summary
Technical Skills
Innovative Data Analyst with 6+ years of experience in
transforming complex datasets into strategic business
Programming
insights for Indian tech startups and MNCs. Expert in
Python
R
SQL
Java
Scala
machine learning, statistical modeling, and data
visualization with proven track record of improving
business efficiency by 50% and reducing costs by
Databases
₹30 lakh annually through data-driven
recommendations.
MySQL
PostgreSQL
MongoDB
Cassandra
Snowflake
Professional Experience
Analytics & ML
Senior Data Analyst
Pandas
NumPy
Scikit-learn
TensorFlow
Flipkart Group
Feb 2022 Present
Statistical Modeling
Developed ML models for customer behavior analysis
processing 10M+ transactions daily
Created automated dashboards reducing reporting time by
Visualization
70% for 15+ stakeholders
Led data quality initiatives improving accuracy by 95%
Tableau
Power B
matplotlib
seaborn
across e-commerce platform
D3.js
Implemented A/B testing framework increasing conversion
rates by 28%
Built recommendation engines improving customer
engagement by 35%
Cloud Platforms
AWS
Azure
GCP
Spark
Hadoop
Data Analyst
Infosys Limited
Jun 2020 Jan 2022
Analyzed financial data for global banking clients using
Python and SQL
Developed predictive models for fraud detection with 92%
Key Projects
accuracy
Created Power BI dashboards for C-level executives and
stakeholders
E-commerce Customer Segmentation
Optimized database queries improving performance by
Built ML clustering model using K-means and RFM
45%
analysis to segment 5M+ customers, enabling
personalized marketing campaigns with 40% higher
conversion rates.
Junior Data Analyst
Tata Consultancy Services
Jul 2018 May 2020
Real-time Fraud Detection System
Supported market research analysis for retail and
Developed ensemble learning model combining
healthcare clients
Random Forest and XGBoost achieving 94% accuracy
Developed Excel-based models for financial forecasting
in detecting fraudulent transactions for fintech
and budgeting
application.
Assisted in data migration projects and quality assurance
testing
Supply Chain Optimization Dashboard
Created interactive Tableau dashboard tracking 50+
KPIs across inventory, logistics, and vendor
performance, reducing operational costs by ₹25 lakh
annually.
Education
Master of Technology (Computer Science)
Indian Institute of Technology, Bombay
Certifications
2016 2018
AWS Certified Data Analytics Specialty (2024)
Bachelor of Engineering (Information
Technology)
Google Professional Data Engineer (2023)
Gujarat Technological University
2012 2016
Microsoft Azure Data Scientist Associate (2023)
Tableau Desktop Certified Professional (2022)
Google Analytics Individual Qualification (2022)
Languages
Hindi (Native)
English (Fluent)
Gujarati (Native)
Tamil (Conversational)

2025-06-13 14:05:52 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Machine Learning\",\n    \"Statistical Modeling\",\n    \"Data Visualization\",\n    \"Data Quality Initiatives\",\n    \"A/B Testing\",\n    \"Recommendation Engines\",\n    \"Predictive Modeling\",\n    \"Fraud Detection\",\n    \"Database Query Optimization\",\n    \"Customer Segmentation\",\n    \"Real-time Fraud Detection\",\n    \"Supply Chain Optimization\"\n  ],\n  \"soft_skills\": [\n    \"Innovative\",\n    \"Analytical\",\n    \"Leadership\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Technology (Computer Science)\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"AWS Certified Data Analytics Specialty\",\n    \"Google Professional Data Engineer\",\n    \"Microsoft Azure Data Scientist Associate\",\n    \"Tableau Desktop Certified Professional\",\n    \"Google Analytics Individual Qualification\"\n  ],\n  \"industries\": [\n    \"Tech Startups\",\n    \"MNCs\",\n    \"E-commerce\",\n    \"Global Banking\",\n    \"Retail\",\n    \"Healthcare\",\n    \"Fintech\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R\",\n    \"SQL\",\n    \"Java\",\n    \"Scala\"\n  ],\n  \"frameworks\": [\n    \"Pandas\",\n    \"NumPy\",\n    \"Scikit-learn\",\n    \"TensorFlow\",\n    \"Spark\",\n    \"Hadoop\"\n  ],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"matplotlib\",\n    \"seaborn\",\n    \"D3.js\",\n    \"Excel\"\n  ],\n  \"databases\": [\n    \"MySQL\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"Cassandra\",\n    \"Snowflake\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\",\n    \"GCP\"\n  ],\n  \"key_achievements\": [\n    \"Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.\",\n    \"Increased conversion rates by 28% through the implementation of an A/B testing framework.\",\n    \"Reduced operational costs by ₹25 lakh annually by creating an interactive Tableau dashboard.\"\n  ],\n  \"summary\": \"Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs through data-driven recommendations.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":934,"outputTokens":638,"totalTokens":1572}}
2025-06-13 14:05:52 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Machine Learning",
    "Statistical Modeling",
    "Data Visualization",
    "Data Quality Initiatives",
    "A/B Testing",
    "Recommendation Engines",
    "Predictive Modeling",
    "Fraud Detection",
    "Database Query Optimization",
    "Customer Segmentation",
    "Real-time Fraud Detection",
    "Supply Chain Optimization"
  ],
  "soft_skills": [
    "Innovative",
    "Analytical",
    "Leadership"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Technology (Computer Science)",
  "years_of_experience": 6,
  "certifications": [
    "AWS Certified Data Analytics Specialty",
    "Google Professional Data Engineer",
    "Microsoft Azure Data Scientist Associate",
    "Tableau Desktop Certified Professional",
    "Google Analytics Individual Qualification"
  ],
  "industries": [
    "Tech Startups",
    "MNCs",
    "E-commerce",
    "Global Banking",
    "Retail",
    "Healthcare",
    "Fintech"
  ],
  "programming_languages": [
    "Python",
    "R",
    "SQL",
    "Java",
    "Scala"
  ],
  "frameworks": [
    "Pandas",
    "NumPy",
    "Scikit-learn",
    "TensorFlow",
    "Spark",
    "Hadoop"
  ],
  "tools": [
    "Tableau",
    "Power BI",
    "matplotlib",
    "seaborn",
    "D3.js",
    "Excel"
  ],
  "databases": [
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Cassandra",
    "Snowflake"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure",
    "GCP"
  ],
  "key_achievements": [
    "Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.",
    "Increased conversion rates by 28% through the implementation of an A/B testing framework.",
    "Reduced operational costs by ₹25 lakh annually by creating an interactive Tableau dashboard."
  ],
  "summary": "Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs through data-driven recommendations."
}
```
2025-06-13 14:05:52 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Anjali Patel - Data Analyst.pdf
2025-06-13 14:05:52 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Processed candidate: Anjali Patel - Data Analyst.pdf with ID: 6e46ea18-95c4-4b2d-adcd-66f0c8c8db3a
2025-06-13 14:05:52 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Anjali Patel - Data Analyst.pdf (ID: 6e46ea18-95c4-4b2d-adcd-66f0c8c8db3a) in 19892ms
2025-06-13 14:05:52 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:05:52 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Anjali Patel - Data Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, skil (truncated)...]
2025-06-13 14:05:52 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:05:52 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 14:05:53 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 14:05:53 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Processing resume upload: Arjun Singh - Software Developer.pdf
2025-06-13 14:05:57 [http-nio-8081-exec-6] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/f3dc161b-9997-4629-b2cb-46d8d9643da3-Arjun Singh - Software Developer.pdf
2025-06-13 14:06:00 [http-nio-8081-exec-6] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/f3dc161b-9997-4629-b2cb-46d8d9643da3-Arjun Singh - Software Developer.pdf
2025-06-13 14:06:00 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Professional Summary
Experienced Full Stack Software Developer with 7+ years of
expertise in building scalable web applications and
Arjun Singh
microservices for Indian tech companies and global clients.
Proficient in modern JavaScript frameworks, cloud
Full Stack Developer
technologies, and agile methodologies. Strong track record of
leading development teams and delivering high-quality
arjun.singh@email.com
software solutions that improved system performance by 60%
+91 94567 89012
and reduced deployment time by 45%.
linkedin.com/in/arjunsingh
github.com/arjunsingh
Professional Experience
T
Hyderabad, Telangana, India
Senior Software Developer
TECHNICAL SKILLS
Zomato Limited
Mar 2022 Present
Frontend
React Node.js TypeScript MongoDB Redis AWS Docker
PostgreSQL
Led development of real-time order tracking system serving
Redis
200K+ daily orders
- Built microservices architecture reducing API response time by
55%
LANGUAGES
- Implemented automated testing pipeline achieving 90% code
Hindi
Native
coverage
English
Fluent
- Mentored 4 junior developers and conducted code reviews
Punjabi
Native
Optimized database queries reducing server costs by ₹8 lakh
monthly
Telugu
Conversational
Software Developer
TOOLS & PLATFORMS
PayTM (One97 Communications)
Jan 2020 Feb 2022
Git Docker . Kubernetes Jenkins AWS
Azure Jira Slack vs Code Intelli]
Vue.js
Express.js
MySQL
Python
Django
Jenkins
IDEA Postman Webpack
- Developed payment gateway integration handling 100 crore+
daily transactions
- Created fraud detection algorithms reducing fraudulent
transactions by 40%
- Built responsive wallet interface used by 50M+ active users
- Implemented CI/CD pipelines reducing deployment time from 4
hours to 30 minutes
Junior Software Developer
Mindtree Limited
Jul 2018 Dec 2019
Angular Spring Boot PostgreSQU HTML5 CSS3
- Developed e-commerce modules for US retail client using Angular
and Spring Boot
- Created responsive UI components improving user experience by
35%
T Participated in agile development with 2-week sprint cycles
1 Fixed 200+ bugs and implemented 50+ feature enhancements
Key Projects
Food Delivery
Cryptocurrency
Platform
Trading Bot
Built end-to-end food
Developed automated
delivery platform with real-
trading bot using Python
time tracking, payment
and machine learning
integration, and restaurant
algorithms achieving 15%
management system using
monthly returns in
MERN stack.
backtesting.
React
Node.js
Python TensorFlow
MongoDB
Redis
Education
Bachelor of Technology (Computer Science
Engineering)
Indian Institute of Technology, Hyderabad
2014 2018
Certifications & Achievements
AWS Certified Solutions Architect Associate (2024)
Google Cloud Professional Developer (2023)
MongoDB Certified Developer (2022)
Scrum Master Certified (2021)
Winner Smart India Hackathon 2017 (Government of India)
Open Source Contributor 1000+ GitHub contributions

2025-06-13 14:06:08 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Node.js\",\n    \"TypeScript\",\n    \"MongoDB\",\n    \"Redis\",\n    \"AWS\",\n    \"Docker\",\n    \"PostgreSQL\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"MySQL\",\n    \"Python\",\n    \"Django\",\n    \"Jenkins\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"TensorFlow\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentorship\",\n    \"Team Collaboration\",\n    \"Agile Methodologies\",\n    \"Problem Solving\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science Engineering)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect Associate (2024)\",\n    \"Google Cloud Professional Developer (2023)\",\n    \"MongoDB Certified Developer (2022)\",\n    \"Scrum Master Certified (2021)\"\n  ],\n  \"industries\": [\n    \"Technology\",\n    \"E-commerce\",\n    \"Finance\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"HTML5\",\n    \"CSS3\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Node.js\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"Django\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"AWS\",\n    \"Azure\",\n    \"Jira\",\n    \"Slack\",\n    \"VS Code\",\n    \"IntelliJ IDEA\",\n    \"Postman\",\n    \"Webpack\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"Redis\",\n    \"PostgreSQL\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\"\n  ],\n  \"key_achievements\": [\n    \"Improved system performance by 60% and reduced deployment time by 45%\",\n    \"Reduced API response time by 55% through microservices architecture\",\n    \"Reduced fraudulent transactions by 40% with fraud detection algorithms\"\n  ],\n  \"summary\": \"Experienced Full Stack Software Developer with 7+ years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Strong track record of leading development teams and delivering high-quality software solutions.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":937,"outputTokens":676,"totalTokens":1613}}
2025-06-13 14:06:08 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Node.js",
    "TypeScript",
    "MongoDB",
    "Redis",
    "AWS",
    "Docker",
    "PostgreSQL",
    "Vue.js",
    "Express.js",
    "MySQL",
    "Python",
    "Django",
    "Jenkins",
    "Angular",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "TensorFlow"
  ],
  "soft_skills": [
    "Leadership",
    "Mentorship",
    "Team Collaboration",
    "Agile Methodologies",
    "Problem Solving"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science Engineering)",
  "years_of_experience": 7,
  "certifications": [
    "AWS Certified Solutions Architect Associate (2024)",
    "Google Cloud Professional Developer (2023)",
    "MongoDB Certified Developer (2022)",
    "Scrum Master Certified (2021)"
  ],
  "industries": [
    "Technology",
    "E-commerce",
    "Finance"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "HTML5",
    "CSS3"
  ],
  "frameworks": [
    "React",
    "Node.js",
    "Vue.js",
    "Express.js",
    "Angular",
    "Spring Boot",
    "Django"
  ],
  "tools": [
    "Git",
    "Docker",
    "Kubernetes",
    "Jenkins",
    "AWS",
    "Azure",
    "Jira",
    "Slack",
    "VS Code",
    "IntelliJ IDEA",
    "Postman",
    "Webpack"
  ],
  "databases": [
    "MongoDB",
    "Redis",
    "PostgreSQL",
    "MySQL"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure"
  ],
  "key_achievements": [
    "Improved system performance by 60% and reduced deployment time by 45%",
    "Reduced API response time by 55% through microservices architecture",
    "Reduced fraudulent transactions by 40% with fraud detection algorithms"
  ],
  "summary": "Experienced Full Stack Software Developer with 7+ years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Strong track record of leading development teams and delivering high-quality software solutions."
}
```
2025-06-13 14:06:08 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Arjun Singh - Software Developer.pdf
2025-06-13 14:06:08 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Processed candidate: Arjun Singh - Software Developer.pdf with ID: a8187f30-0446-4e69-ba98-426937746303
2025-06-13 14:06:08 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Arjun Singh - Software Developer.pdf (ID: a8187f30-0446-4e69-ba98-426937746303) in 15479ms
2025-06-13 14:06:08 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:06:08 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Arjun Singh - Software Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, (truncated)...]
2025-06-13 14:06:08 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:06:08 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 14:06:08 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 14:06:08 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Processing resume upload: Deepika Reddy - Java Developer.pdf
2025-06-13 14:06:10 [http-nio-8081-exec-8] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/ecc59d9b-4177-4f0b-9526-99fce6fbe057-Deepika Reddy - Java Developer.pdf
2025-06-13 14:06:22 [http-nio-8081-exec-8] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/ecc59d9b-4177-4f0b-9526-99fce6fbe057-Deepika Reddy - Java Developer.pdf
2025-06-13 14:06:22 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Deepika Reddy
Java Developer & Backend Engineer
dccpika.reddy@email .com
H
+91 98712 34567
- linkedin com/1 in/deepikareddy
github.com/deepikareddy
T
Hyderabad, Telangana, India
PROFESSIONAL SUMMARY
TECHNICAL
SKILLS
Dedicated Java Developer with 5+ years of experience in
designing and developing enterprise level applications
CORE JAVA
using Java Spring Framework and microservices
lava I'
Java 11
architecture Expertise in building scalable backend
systems, RESTful APIs, and database integration with
lava OOP Concepts
strong knowledge of software design patterns and best
practices Proven track record of optimizing application
Multithreading
performance and delivering high-quality code in agile
environments
FRAMEWORKS
PROFESSIONAL EXPERIENCE
Spring Boot
Spring MVC
Spring Security
Senior Java Developer
Hibernato
JPA
Accenture Solutions
Jan 2022 Present
Java 17
Spring Boot
Spring Security
Microservices
DATABASES
PostgreSQL
Redis
Docker
Kafka
JUnit
PostgreSQI
MySQI
Developed microservices architecture using Java 17 and Spring
Oracle DB
Redis
Boot serving 500K+ daily transactions
Implemented secure authentication and authorization using
JDBC
Spring Security and JWT tokens
Designed and optimized PostgreSQI database schemas reducing
query execution time by 50%
WEB
Built event driven systems using Apache Kafka for real-time
TECHNOLOGIES
data processing
RESTAI
Implemented Redis caching strategies improving application
response 40%
Microservice
Servlets
Containerized applications using Docker and deployed on
Kubernetes clusters
JSP
SON
Achieved 90% code coverage through compreher sive unit
testing with JUnit and Mockito
TOOLS DEVOPS
Docker Kafka
Java Developer
Mayen Gi
Tomcat
Capgemini India
Mar 2020 Dec 2021
Java 11
Spring MVC
libernato
MySQI
RESTAPI
TESTING
Maven
Git
Unit
Mockito
Buil enterprise web applications using Java 11. Spring MVC.
and Hibernate ORM
Integration Testing
Developed RESTful APIs for frontend consumption and third-
party integrations
Unit Testing
Implemented database operations using Hibernate with MySQL
backend
Used Mayen for project management and dependency resolution
EDUCATION
Collaborated with cross-functional teams using Git for version
control
Participated code reviews and maintained high coding
Bachelor Technology
standards
(Computer Science)
Jawaharlal Nehru
Technological University
2015-2019
Associate Software Engineer
Wipro Technologies
Jul 2019 - Fcb 2020
CERTIFICATIONS
Juya8
Servlets
JSP
JDBC
Oracle
Tomcat
Oracle Certified Professional Java
Developed web applications using Java Servlets, and ISP
SE
technologies
Implemented database connectivity using JDBC with Oracle
Spring Professional Certification
database
Deployed applications on Apache Tomcat server
AWS Certified Developer
Fixed bugs and implemented feature enhancements based on
Associate
client requirements
Learned enterprise development practices and coding standards
Docker Certified Associate
Apache Kafka Developer
FEATURED PROJECTS
Microservice Architecture
LANGUAGES
Banking
E-Commerce Order
Microservices
Management
Platform
Telugu: Native
Java II
Spring MVC
Hindi: Fluent
Java 17
Spring Boot
libernate
MySQL
English: Fluent
PostgreSQ1
Redis
Tamil: Basic
RESTAPI
Kafka
Docker
Built order management
system using Java and
KEY
Architected prehensive
banki platform using
Spring MVC framework
ACHIEVEMENTS
microservices with Java 17
Implemented Hibernate for
and Spring Boot Implemented
ORM mapping with MySQL
database created REST APIs
PostgreSQL data
. performance improvement
persistence Redis caching
for order processing and
database queries
and Kalka for event streaming
integrated payment gateway
90% coverage
testing
Containerized services using
services
Led team of developers
500K daily transactions handled
Docker scalable
Zero production bugs in last months
deployment
Employee
Inventory Tracking
Management stem
API
Java 8
Servlets
Spring Boot
JSP
JDBC
Spring Security
JUnit
Oracle DB
Mockito
Mayen
Developed employee
Created REST for
management application using
inventory management using
Java with Servlets JSP
Spring Spring
for interface Used JDBC
Security authentication
for database operations with
Implemented comprehensive
Oracle backend implemented
testing with JUnit and
CRU D operations and
Mockito managed project
employee reporting features
dependencies with Mayen
build tool

2025-06-13 14:06:28 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Java 11\",\n    \"Java OOP Concepts\",\n    \"Multithreading\",\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\",\n    \"RESTful APIs\",\n    \"Servlets\",\n    \"JSP\",\n    \"JDBC\",\n    \"JSON\",\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Integration Testing\",\n    \"Unit Testing\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\"\n  ],\n  \"soft_skills\": [\n    \"Team Collaboration\",\n    \"Code Reviews\",\n    \"Problem Solving\",\n    \"High Coding Standards\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"Oracle Certified Professional Java SE\",\n    \"Spring Professional Certification\",\n    \"AWS Certified Developer Associate\",\n    \"Docker Certified Associate\",\n    \"Apache Kafka Developer\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\"\n  ],\n  \"tools\": [\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\",\n    \"Tomcat\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"Oracle DB\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Kubernetes\"\n  ],\n  \"key_achievements\": [\n    \"Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions\",\n    \"Designed and optimized PostgreSQL database schemas reducing query execution time by 50%\",\n    \"Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito\"\n  ],\n  \"summary\": \"Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1286,"outputTokens":647,"totalTokens":1933}}
2025-06-13 14:06:28 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Java 11",
    "Java OOP Concepts",
    "Multithreading",
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA",
    "RESTful APIs",
    "Servlets",
    "JSP",
    "JDBC",
    "JSON",
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Integration Testing",
    "Unit Testing",
    "Docker",
    "Kafka",
    "Kubernetes"
  ],
  "soft_skills": [
    "Team Collaboration",
    "Code Reviews",
    "Problem Solving",
    "High Coding Standards"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 5,
  "certifications": [
    "Oracle Certified Professional Java SE",
    "Spring Professional Certification",
    "AWS Certified Developer Associate",
    "Docker Certified Associate",
    "Apache Kafka Developer"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "Java"
  ],
  "frameworks": [
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA"
  ],
  "tools": [
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Docker",
    "Kafka",
    "Kubernetes",
    "Tomcat"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "Oracle DB",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS",
    "Kubernetes"
  ],
  "key_achievements": [
    "Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions",
    "Designed and optimized PostgreSQL database schemas reducing query execution time by 50%",
    "Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito"
  ],
  "summary": "Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments."
}
```
2025-06-13 14:06:28 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Deepika Reddy - Java Developer.pdf
2025-06-13 14:06:28 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Processed candidate: Deepika Reddy - Java Developer.pdf with ID: df4d6e97-8d39-411b-bd07-a4aa852aca9a
2025-06-13 14:06:28 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Deepika Reddy - Java Developer.pdf (ID: df4d6e97-8d39-411b-bd07-a4aa852aca9a) in 19868ms
2025-06-13 14:06:28 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:06:28 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Deepika Reddy - Java Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, s (truncated)...]
2025-06-13 14:06:28 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:06:28 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 14:06:28 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 14:06:28 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Processing resume upload: Karan Singh - DevOps Engineer.pdf
2025-06-13 14:06:37 [http-nio-8081-exec-9] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/a2e7cb4a-90e6-4aa4-a87a-77457f09f648-Karan Singh - DevOps Engineer.pdf
2025-06-13 14:06:50 [http-nio-8081-exec-9] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/a2e7cb4a-90e6-4aa4-a87a-77457f09f648-Karan Singh - DevOps Engineer.pdf
2025-06-13 14:06:50 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
karan.singh@email.com
+91 97531 86420
Karan Singh
DevOps Engineer & Cloud Architect
linkedin.com/in/karansingh
STATUS: ACTIVE UPTIME: 5+ YEARS I DEPLOYMENTS: 1000+
in github.com/karansingh
o
Gurgaon, Haryana, India
$ cat professional_summary.txt
TECHNICAL ARSENAL
CLOUD PLATFORMS
Experienced DevOps Engineer with 5+ years of expertise in automating
AWS EC2
AWS EKS
AWS RDS
AWS
deployment pipelines, managing cloud infrastructure. and orchestrating
AWS CloudWatch
AWS CodePipeline
AWS CLI
containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD
automation with strong background in Infrastructure as Code and monitoring
solutions Proven track record of reducing deployment time by 80% and
CONTAINERIZATION
improving system reliability to 99.9% uptime through robust DevOps practices.
Docker
Kubernetes
Docker Swarm
Helm
Container Registry
$ grep -r "experience" /career/history
CI/CD TOOLS
[PROCESS]
Jenkins
GitLab
GitHub Actions
Git
Maven
Senior DevOps Engineer
SonarQub
Paytm (One97 Communications)
Jan 2022 Present
AWS
Kubernetes
Docker
Jenkins
Terraform
Ansible
Prometheus
Grafana
ELK Stack
INFRASTRUCTURE AS CODE
Architected AWS cloud infrastructure using Terraform managing 100+ EC2 instances
Terraform
Ansible
CloudFormation
YAML
JSON
and RDS clusters
Implemented Kubernetes orchestration for microservices serving 50M+ daily
transactions
MONITORING LOGGING
Built Jenkins CI/CD pipelines reducing deployment time from 4 hours to 30 minutes
Prometheus
Grafana
ELK Stack
Alertmanager
Elasticsearch
Kibana
Configured monitoring stack using Prometheus and Grafana achieving 99.9% uptime SLA
Automated infrastructure provisioning using Ansible playbooks saving 20 hours/week
Implemented ELK Stack for centralized logging and real-time log analysis
SYSTEM ADMINISTRATION
Managed Docker container registry and optimized image sizes by 60%
Linux
Shell Scripting
Nainx
Apache
Tomcat
Redis
[PROCESS]
# PERFORMANCE METRICS
DevOps Engineer
Nagarro Software
Mar 2021 Dec 2021
99.9%
80%
AWS EC2
Docker Swarm
GitLab CI
CloudFormation
Nginx
Redis
SYSTEMUPTIME
DEPLOY TIME REDUCTION
Deployed applications on AWS EC2 using Docker Swarm for container orchestration
1000+
100+
Created GitLab CT pipelines for automated testing and deployment processes
DEPLOYMENTS
EC2 INSTANCES
Implemented infrastructure using AWS CloudFormation templates
Configured Nginx load balancers for high availability and traffic distribution
# SYSTEM CONFIGURATION
Set up Redis clusters for caching and session management
Optimized application performance resulting in 40% faster response times
Bachelor of Technology (Information
Technology)
Guru Gobind Singh Indraprastha University
2016 2020
[PROCESS]
Junior DevOps Engineer
# SECURITY CERTIFICATES
Mindtree Limited
Jun 2020 Feb 2021
Linux
Shell Scripting
Git
Mayer
Tomcat
AWS Certified DevOps Engineer Professional
Managed Linux servers and wrote Shell scripts for automation tasks
Certified Kubernetes Administrator (CKA)
Implemented Git workflows and branching strategies for development teams
Docker Certified Associate
Configured Mayen build processes for Java applications
Terraform Associate Certification
Deployed applications on Apache Tomcat servers
Learned infrastructure management and deployment best practices
Jenkins Certified Engineer
AWS Solutions Architect Associate
Prometheus Certified Associate
$ ls -la /projects/featured
LANGUAGE SUPPORT
[PROJECT]
[PROJECT]
Microservices Platform
CI/CD Automation Pipeline
Hindi: Native
Kubernetes
Docker
AWS EKS
Terraform
Jenkins
GitLab
Docker
English: Fluent
Helm
AWS CodePipeline
SonarQube
Punjabi: Native
Urdu: Conversational
Built scalable microservices platform on
Implemented end-to-end CI/CD pipeline
AWS EKS using Kubernetes and Docker.
using Jenkins and GitLab CI with Docker
Automated infrastructure deployment with
containerization. Integrated AWS
ADDITIONAL MODULES
Terraform and managed application
CodePipeline for cloud-native deployments
deployments using Helm charts for
and SonarQube for code quality analysis.
Microservices Architecture
consistent and reliable releases.
Site Reliability Engineering
cloud Security Best Practices
Disaster Recovery Planning
Cost Optimization Strategies
Agile DevOps Methodologies
[PROJECT]
[PROJECT]
Infrastructure Monitoring
Infrastructure as Code
SYSTEM STATUS
Prometheus
Grafana
ELK Stack
Terraform
Ansible
CloudFormation
AWS CloudWatch
Alertmanager
Shell Scripting
AWS CLI
OPERATIONAL: All systems running
MONITORING: Active 24/7
BACKUP: Automated daily
Set up comprehensive monitoring solution
Automated infrastructure provisioning
SECURITY Enhanced protection
PERFORMANCE: Optimized
using Prometheus and Grafana with ELK
using Terraform and Ansible with AWS
Stack for log aggregation. Configured AWS
CloudFormation. Created Shell scripts and
CloudWatch and Alertmanager for proactive
AWS CLI automation for infrastructure
incident management
management and deployment processes.

2025-06-13 14:07:02 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"AWS EC2\", \"AWS EKS\", \"AWS RDS\", \"AWS CloudWatch\", \"AWS CodePipeline\", \"AWS CLI\", \"Docker\", \"Kubernetes\", \"Docker Swarm\", \"Helm\", \"Container Registry\", \"Jenkins\", \"GitLab\", \"GitHub Actions\", \"Git\", \"Maven\", \"SonarQub\", \"Terraform\", \"Ansible\", \"Prometheus\", \"Grafana\", \"ELK Stack\", \"Alertmanager\", \"Elasticsearch\", \"Kibana\", \"Linux\", \"Shell Scripting\", \"Nginx\", \"Apache\", \"Tomcat\", \"Redis\", \"CloudFormation\", \"YAML\", \"JSON\"\n  ],\n  \"soft_skills\": [\n    \"Problem-solving\", \"Automation\", \"Optimization\", \"Team Collaboration\", \"Project Management\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Information Technology)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified DevOps Engineer Professional\",\n    \"Certified Kubernetes Administrator (CKA)\",\n    \"Docker Certified Associate\",\n    \"Terraform Associate Certification\",\n    \"Jenkins Certified Engineer\",\n    \"AWS Solutions Architect Associate\",\n    \"Prometheus Certified Associate\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Financial Technology\",\n    \"Software Development\"\n  ],\n  \"programming_languages\": [\n    \"Shell Scripting\"\n  ],\n  \"frameworks\": [\n    \"Kubernetes\",\n    \"Docker Swarm\",\n    \"Helm\"\n  ],\n  \"tools\": [\n    \"Jenkins\",\n    \"GitLab\",\n    \"GitHub Actions\",\n    \"Git\",\n    \"Maven\",\n    \"SonarQub\",\n    \"Terraform\",\n    \"Ansible\",\n    \"Prometheus\",\n    \"Grafana\",\n    \"ELK Stack\",\n    \"Alertmanager\",\n    \"Elasticsearch\",\n    \"Kibana\",\n    \"Nginx\",\n    \"Apache\",\n    \"Tomcat\",\n    \"Redis\",\n    \"AWS CLI\"\n  ],\n  \"databases\": [\n    \"AWS RDS\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Reduced deployment time by 80%\",\n    \"Improved system reliability to 99.9% uptime\",\n    \"Managed AWS cloud infrastructure with 100+ EC2 instances and RDS clusters\"\n  ],\n  \"summary\": \"Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment time and enhancing system reliability.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1431,"outputTokens":699,"totalTokens":2130}}
2025-06-13 14:07:02 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "AWS EC2", "AWS EKS", "AWS RDS", "AWS CloudWatch", "AWS CodePipeline", "AWS CLI", "Docker", "Kubernetes", "Docker Swarm", "Helm", "Container Registry", "Jenkins", "GitLab", "GitHub Actions", "Git", "Maven", "SonarQub", "Terraform", "Ansible", "Prometheus", "Grafana", "ELK Stack", "Alertmanager", "Elasticsearch", "Kibana", "Linux", "Shell Scripting", "Nginx", "Apache", "Tomcat", "Redis", "CloudFormation", "YAML", "JSON"
  ],
  "soft_skills": [
    "Problem-solving", "Automation", "Optimization", "Team Collaboration", "Project Management"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Information Technology)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified DevOps Engineer Professional",
    "Certified Kubernetes Administrator (CKA)",
    "Docker Certified Associate",
    "Terraform Associate Certification",
    "Jenkins Certified Engineer",
    "AWS Solutions Architect Associate",
    "Prometheus Certified Associate"
  ],
  "industries": [
    "IT Services",
    "Financial Technology",
    "Software Development"
  ],
  "programming_languages": [
    "Shell Scripting"
  ],
  "frameworks": [
    "Kubernetes",
    "Docker Swarm",
    "Helm"
  ],
  "tools": [
    "Jenkins",
    "GitLab",
    "GitHub Actions",
    "Git",
    "Maven",
    "SonarQub",
    "Terraform",
    "Ansible",
    "Prometheus",
    "Grafana",
    "ELK Stack",
    "Alertmanager",
    "Elasticsearch",
    "Kibana",
    "Nginx",
    "Apache",
    "Tomcat",
    "Redis",
    "AWS CLI"
  ],
  "databases": [
    "AWS RDS",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Reduced deployment time by 80%",
    "Improved system reliability to 99.9% uptime",
    "Managed AWS cloud infrastructure with 100+ EC2 instances and RDS clusters"
  ],
  "summary": "Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment time and enhancing system reliability."
}
```
2025-06-13 14:07:02 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Karan Singh - DevOps Engineer.pdf
2025-06-13 14:07:02 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Processed candidate: Karan Singh - DevOps Engineer.pdf with ID: cde9da72-01a4-440b-9545-b5e37314d05c
2025-06-13 14:07:02 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Karan Singh - DevOps Engineer.pdf (ID: cde9da72-01a4-440b-9545-b5e37314d05c) in 33588ms
2025-06-13 14:07:02 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:07:02 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Karan Singh - DevOps Engineer.pdf, success=true, extractedData={experienceLevel=SENIOR, sk (truncated)...]
2025-06-13 14:07:02 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:07:02 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 14:07:02 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 14:07:02 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Processing resume upload: Kavya Nair - Full Stack Developer.pdf
2025-06-13 14:07:04 [http-nio-8081-exec-10] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/f00773a4-d710-44b9-88c0-9de1a4d008d0-Kavya Nair - Full Stack Developer.pdf
2025-06-13 14:07:13 [http-nio-8081-exec-10] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/f00773a4-d710-44b9-88c0-9de1a4d008d0-Kavya Nair - Full Stack Developer.pdf
2025-06-13 14:07:13 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
+91 98765 12345
Full Stack Developer
linkedin com/in/kavyanair
"Building scalable web solutions with modern technologies'
github.com/kavyanair
9
Kochi. Kerala India
PROFESSIONAL SUMMARY
TECHNICAL
ARSENAL
Passionate Full Stack Developer with 5+ years of experience
FRONTEND
building robust web applications using modern JavaScript
React
Vue.js
Angular
frameworks and cloud technologies. Expertise in React, Node.js,
TypeScript
JavaScript
Python, and AWS with a strong focus on creating scalable,
HTML5
CSS3
maintainable solutions. Proven track record of leading development
teams and delivering high-quality software that serves 100K+ users
daily.
BACKEND
Node.js
Express.js
Python
Django
Java
Spring Boot
PROFESSIONAL EXPERIENCE
DATABASES
PostgreSQL
MySQL
Senior Full Stack Developer
MongoDB
Redis
Oracle DE
Freshworks Inc.
Mar 2022 Present
React
TypeScript
Node.js
Express.js
PostgreSQL
Redis
AWS
Docker
CLOUD DEVOPS
Kubernetes
AWS
Docker
Kubernetes
Architected and developed microservices using Node js and Express.js
Jenkins
GitHub Actions
serving 100K+ daily active users
Built responsive React applications with TypeScript ensuring type safety and
maintainable code
APIS TOOLS
Optimized PostgreSQL database queries and implemented Redis caching
REST APIs
GraphQL
reducing API response time by 60%
Socket.ic
JWT
WebRTC
Deployed applications on AWS using Docker containers and Kubernetes
Chart.js
JUnit
Swagger
orchestration
Led team of developers and mentored junior developers in best practices
Implemented CI/CD pipelines using Jenkins and GitHub Actions reducing
EDUCATION
deployment time by 50%
Master of Computer
Applications (MCA)
Cochin University of Science &
Technology
Full Stack Developer
2017 2019
Zoho Corporation
Jan 2020 Feb 2022
Vue.js
Python
Django
MySQL
MongoDB
REST APIs
GraphQL
Bachelor of Science
(Computer Science)
Developed enterprise CRM features using Vue js frontend and Python Django
University of Kerala
backend
2014 2017
Created RESTful APIs and GraphQL endpoints handling 50K+ requests per
hour
Designed and implemented database schemas in MySQL and MongoDB for
CERTIFICATIONS
optimal performance
Integrated third-party services and APIs for email marketing and analytics
AWS Certified Solutions Architect
functionality
Participated in code reviews and maintained high code quality standards
MongoDB Certified Developer
React Professional Certificate
Node.js Application Developer
Software Developer
Docker Certified Associate
UST Global
Jun 2019 Dec 2019
Kubernetes Administrator
Angular
Java
Spring Boot
Oracle DB
JUnit
Built banking applications using Angular frontend and Java Spring Boot
backend
LANGUAGES
Implemented secure user authentication and authorization using Spring
Security
Malayalam: Native
Developed unit tests using JUnit achieving 85% code coverage
English: Fluent
Hindi: Conversational
Worked with Oracle databases and optimized complex SQL queries
Tamil: Basic
FEATURED PROJECTS
Social Media Analytics
E-Learning Management
Platform
System
React Node.js MongoDB
Vue.js Python Django
Redis Chart.js AWS
PostgreSQL WebRTC
Developed comprehensive social
Built an online learning platform with
media analytics dashboard using
Vue. js frontend and Django backend
React and Chart. js for data
Integrated video conferencing using
visualization. Built scalable backend
WebRTC, implemented course
with Node.js and MongoDB,
management features, and used
implemented Redis for caching, and
PostgreSQL for data storage with
deployed on AWS with auto-scaling
automated backups.
capabilities.
Real-time Chat Application
Inventory Management API
TypeScript Socket.io Express.js
Java
Spring Boot MySQL
JWT
Docker
JUnit
Swagger
Created real-time messaging
Developed RESTful API for inventory
application using Socket io for
management using Java Spring Boot
WebSocket communication and
and MySQL Created comprehensive
TypeScript for type safety.
API documentation with Swagger,
Implemented JWT authentication,
implemented unit testing with JUnit,
built with Express js backend and
and added data validation and error
containerized using Docker for easy
handling.
deployment.

2025-06-13 14:07:20 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"Python\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Java\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"REST APIs\",\n    \"GraphQL\",\n    \"Socket.io\",\n    \"JWT\",\n    \"WebRTC\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"Swagger\",\n    \"Oracle DB\",\n    \"Spring Security\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Code Quality Standards\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Computer Applications (MCA)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect\",\n    \"MongoDB Certified Developer\",\n    \"React Professional Certificate\",\n    \"Node.js Application Developer\",\n    \"Docker Certified Associate\",\n    \"Kubernetes Administrator\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"CRM\",\n    \"Banking\",\n    \"Analytics\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Spring Boot\"\n  ],\n  \"tools\": [\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"GitHub Actions\",\n    \"Swagger\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"WebRTC\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"MongoDB\",\n    \"Redis\",\n    \"Oracle DB\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Architected and developed microservices serving 100K+ daily active users\",\n    \"Optimized PostgreSQL database queries reducing API response time by 60%\",\n    \"Implemented CI/CD pipelines reducing deployment time by 50%\"\n  ],\n  \"summary\": \"Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1215,"outputTokens":679,"totalTokens":1894}}
2025-06-13 14:07:20 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Vue.js",
    "Angular",
    "TypeScript",
    "JavaScript",
    "Python",
    "Node.js",
    "Express.js",
    "Django",
    "Java",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "REST APIs",
    "GraphQL",
    "Socket.io",
    "JWT",
    "WebRTC",
    "Chart.js",
    "JUnit",
    "Swagger",
    "Oracle DB",
    "Spring Security"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Code Quality Standards"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Computer Applications (MCA)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified Solutions Architect",
    "MongoDB Certified Developer",
    "React Professional Certificate",
    "Node.js Application Developer",
    "Docker Certified Associate",
    "Kubernetes Administrator"
  ],
  "industries": [
    "Software Development",
    "CRM",
    "Banking",
    "Analytics"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "Java"
  ],
  "frameworks": [
    "React",
    "Vue.js",
    "Angular",
    "Node.js",
    "Express.js",
    "Django",
    "Spring Boot"
  ],
  "tools": [
    "Docker",
    "Kubernetes",
    "Jenkins",
    "GitHub Actions",
    "Swagger",
    "Chart.js",
    "JUnit",
    "WebRTC"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "MongoDB",
    "Redis",
    "Oracle DB"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Architected and developed microservices serving 100K+ daily active users",
    "Optimized PostgreSQL database queries reducing API response time by 60%",
    "Implemented CI/CD pipelines reducing deployment time by 50%"
  ],
  "summary": "Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily."
}
```
2025-06-13 14:07:20 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Kavya Nair - Full Stack Developer.pdf
2025-06-13 14:07:20 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Processed candidate: Kavya Nair - Full Stack Developer.pdf with ID: fbb31fa3-491a-4350-b3ca-67fe7e39ed5b
2025-06-13 14:07:20 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Kavya Nair - Full Stack Developer.pdf (ID: fbb31fa3-491a-4350-b3ca-67fe7e39ed5b) in 17973ms
2025-06-13 14:07:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:07:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Kavya Nair - Full Stack Developer.pdf, success=true, extractedData={experienceLevel=SENIOR (truncated)...]
2025-06-13 14:07:20 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:07:20 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 14:07:20 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 14:07:20 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Processing resume upload: Mei Chen - Marketing Analyst.pdf
2025-06-13 14:07:24 [http-nio-8081-exec-1] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/851f6691-3356-45d0-88df-dde46ae4bf94-Mei Chen - Marketing Analyst.pdf
2025-06-13 14:07:36 [http-nio-8081-exec-1] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/851f6691-3356-45d0-88df-dde46ae4bf94-Mei Chen - Marketing Analyst.pdf
2025-06-13 14:07:36 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Mei Chen
Marketing Analyst & Growth Strategist
mei.chen@email.com
+65 9876 5432
linkedin .com/in/meichen
Singapore
PROFESSIONAL SUMMARY
Core Skills
Data Analytics
95%
Data-driven Marketing Analyst with 6+ years of experience in
SQL & Python
90%
digital marketing analytics and customer insights across Asia-
Tableau & Power BI
88%
Pacific markets. Expert in transforming complex data into
actionable marketing strategies that drove 45% increase in ROI
Google Analytics
92%
and 35% growth in customer acquisition. Specialized in cross-
cultural marketing campaigns and multilingual market analysis.
A/B Testing
85%
Languages
PROFESSIONAL EXPERIENCE
Mandarin
English
Native
Fluent
Senior Marketing Analyst
Hindi
Shopee Singapore
Jan 2022 Present
Malay
Conversational
Basic
Analyzed user behavior data from 8 Southeast Asian markets with
100M+ active users
Developed attribution models improving campaign ROI
Education
measurement accuracy by 50%
Led A/B testing initiatives across mobile and web platforms with
28% conversion improvement
Master of Science in
Marketing Analytics
Created automated dashboards reducing manual reporting time by
National University of
75%
Singapore
2016 2018
Managed marketing analytics for flash sales generating S$50M+
revenue
Bachelor of Business
Administration
Nanyang Technological
University
Marketing Data Analyst
2012 2016
Grab Holdings
Mar 2020 Dec 2021
Performed cohort analysis for ride-hailing and food delivery
services across 6 countries
Certifications
Built predictive models for customer lifetime value with 89%
accuracy
Google Analytics 4 Certified
Optimized marketing spend allocation reducing CAC by 30%
across all verticals
Facebook Blueprint Certified
Conducted market research for new service launches in emerging
markets
Tableau Desktop Specialist
AWS Cloud Practitioner
Junior Marketing Analyst
Google Ads Certified
ByteDance (TikTok)
Jun 2018 Feb 2020
Analyzed viral content patterns and user engagement metrics for
HubSpot Marketing Analytics
APAC region
Created weekly performance reports for marketing campaigns
across 12 markets
Supported influencer marketing ROI analysis and campaign
optimization
Assisted in competitive analysis and market positioning strategies

2025-06-13 14:07:43 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Data Analytics\",\n    \"SQL\",\n    \"Python\",\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\",\n    \"A/B Testing\",\n    \"Predictive Modeling\",\n    \"Marketing Spend Allocation\",\n    \"Market Research\",\n    \"Attribution Modeling\",\n    \"Dashboard Creation\",\n    \"Cohort Analysis\"\n  ],\n  \"soft_skills\": [\n    \"Cross-cultural Marketing\",\n    \"Multilingual Market Analysis\",\n    \"Campaign Optimization\",\n    \"Market Positioning Strategies\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Science in Marketing Analytics\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"Google Analytics 4 Certified\",\n    \"Facebook Blueprint Certified\",\n    \"Tableau Desktop Specialist\",\n    \"AWS Cloud Practitioner\",\n    \"Google Ads Certified\",\n    \"HubSpot Marketing Analytics\"\n  ],\n  \"industries\": [\n    \"Digital Marketing\",\n    \"E-commerce\",\n    \"Ride-hailing\",\n    \"Food Delivery\",\n    \"Social Media\"\n  ],\n  \"programming_languages\": [\n    \"SQL\",\n    \"Python\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\"\n  ],\n  \"databases\": [\n    \"SQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Drove 45% increase in ROI and 35% growth in customer acquisition\",\n    \"Improved campaign ROI measurement accuracy by 50%\",\n    \"Achieved 28% conversion improvement through A/B testing\"\n  ],\n  \"summary\": \"Data-driven Marketing Analyst with over 6 years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":751,"outputTokens":503,"totalTokens":1254}}
2025-06-13 14:07:43 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Data Analytics",
    "SQL",
    "Python",
    "Tableau",
    "Power BI",
    "Google Analytics",
    "A/B Testing",
    "Predictive Modeling",
    "Marketing Spend Allocation",
    "Market Research",
    "Attribution Modeling",
    "Dashboard Creation",
    "Cohort Analysis"
  ],
  "soft_skills": [
    "Cross-cultural Marketing",
    "Multilingual Market Analysis",
    "Campaign Optimization",
    "Market Positioning Strategies"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Science in Marketing Analytics",
  "years_of_experience": 6,
  "certifications": [
    "Google Analytics 4 Certified",
    "Facebook Blueprint Certified",
    "Tableau Desktop Specialist",
    "AWS Cloud Practitioner",
    "Google Ads Certified",
    "HubSpot Marketing Analytics"
  ],
  "industries": [
    "Digital Marketing",
    "E-commerce",
    "Ride-hailing",
    "Food Delivery",
    "Social Media"
  ],
  "programming_languages": [
    "SQL",
    "Python"
  ],
  "frameworks": [],
  "tools": [
    "Tableau",
    "Power BI",
    "Google Analytics"
  ],
  "databases": [
    "SQL"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Drove 45% increase in ROI and 35% growth in customer acquisition",
    "Improved campaign ROI measurement accuracy by 50%",
    "Achieved 28% conversion improvement through A/B testing"
  ],
  "summary": "Data-driven Marketing Analyst with over 6 years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis."
}
```
2025-06-13 14:07:43 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Mei Chen - Marketing Analyst.pdf
2025-06-13 14:07:43 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Processed candidate: Mei Chen - Marketing Analyst.pdf with ID: 9a219b5e-500a-432d-8d84-138942196e01
2025-06-13 14:07:43 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Mei Chen - Marketing Analyst.pdf (ID: 9a219b5e-500a-432d-8d84-138942196e01) in 23657ms
2025-06-13 14:07:43 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:07:43 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Mei Chen - Marketing Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, ski (truncated)...]
2025-06-13 14:07:43 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:07:43 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 14:07:43 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 14:07:43 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Processing resume upload: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 14:07:46 [http-nio-8081-exec-3] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/a0ef8aa8-bffe-4c81-b6c9-2fe9fcc51d12-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 14:07:52 [http-nio-8081-exec-3] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/a0ef8aa8-bffe-4c81-b6c9-2fe9fcc51d12-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 14:07:52 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
PROFESSIONAL SUMMARY
Results-oriented Sales & Marketing professional with 7+
years of experience in the Indian market, specializing in
digital marketing strategies and B2B sales. Proven track
Priya Sharma
record of increasing revenue by 40% and expanding
market presence across Tier 1 and Tier 2 cities. Expert in
Sales & Marketing Professional
managing multi-channel campaigns and building long-term
client relationships in competitive markets.
Contact
priya.sharma@email.com
PROFESSIONAL EXPERIENCE
+91 98765 43210
Senior Marketing Manager
linkedin.com/in/priyasharma
Tata Digital Solutions
Jan 2021 Present
Mumbai, Maharashtra, India
Led digital marketing initiatives for pan-India market expansion,
Core Skills
reaching 15+ states
Managed ₹50 lakh annual marketing budget with 35% ROI
Lead Generation
improvement
Developed localized campaigns for regional markets increasing
Digital Marketing
engagement by 60%
Built strategic partnerships with 25+ B2B clients across various
CRM Management
industries
Campaign Strategy
Implemented CRM system reducing sales cycle time by 30%
Analytics
Marketing Executive
Languages
Reliance Industries Ltd
Mar 2019 Dec 2020
Executed social media strategies achieving 2M+ followers across
Hindi (Native)
platforms
English (Fluent)
Coordinated trade shows and exhibitions in Mumbai, Delhi, and
Bangalore
Marathi (Native)
Managed vendor relationships and negotiated contracts saving
₹15 lakh annually
Certifications
Created content marketing strategy increasing website traffic by
150%
Google Ads Certified Professional
HubSpot Inbound Marketing
Salesforce Administrator
Sales Associate
Digital Marketing Institute
Wipro Technologies
Jun 2017 Feb 2019
Achieved 125% of sales targets consistently across Western
India region
Built client database of 200+ prospects through cold calling and
networking
Participated in 10+ industry conferences and generated 50+
qualified leads
EDUCATION
Master of Business Administration (Marketing)
Indian Institute of Management, Ahmedabad
2015 2017
Bachelor of Commerce
University of Mumbai
2012 2015

2025-06-13 14:07:56 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Lead Generation\",\n    \"Digital Marketing\",\n    \"CRM Management\",\n    \"Campaign Strategy\",\n    \"Analytics\"\n  ],\n  \"soft_skills\": [\n    \"Client Relationship Management\",\n    \"Strategic Partnerships\",\n    \"Negotiation\",\n    \"Content Creation\",\n    \"Budget Management\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Marketing)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"Google Ads Certified Professional\",\n    \"HubSpot Inbound Marketing\",\n    \"Salesforce Administrator\",\n    \"Digital Marketing Institute\"\n  ],\n  \"industries\": [\n    \"Digital Solutions\",\n    \"Reliance Industries\",\n    \"Information Technology\"\n  ],\n  \"programming_languages\": [],\n  \"frameworks\": [],\n  \"tools\": [\n    \"CRM system\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.\",\n    \"Managed ₹50 lakh annual marketing budget with 35% ROI improvement.\",\n    \"Executed social media strategies achieving 2M+ followers across platforms.\"\n  ],\n  \"summary\": \"Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market, specializing in digital marketing strategies and B2B sales. Proven track record of increasing revenue and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":722,"outputTokens":392,"totalTokens":1114}}
2025-06-13 14:07:56 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Lead Generation",
    "Digital Marketing",
    "CRM Management",
    "Campaign Strategy",
    "Analytics"
  ],
  "soft_skills": [
    "Client Relationship Management",
    "Strategic Partnerships",
    "Negotiation",
    "Content Creation",
    "Budget Management"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Marketing)",
  "years_of_experience": 7,
  "certifications": [
    "Google Ads Certified Professional",
    "HubSpot Inbound Marketing",
    "Salesforce Administrator",
    "Digital Marketing Institute"
  ],
  "industries": [
    "Digital Solutions",
    "Reliance Industries",
    "Information Technology"
  ],
  "programming_languages": [],
  "frameworks": [],
  "tools": [
    "CRM system"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.",
    "Managed ₹50 lakh annual marketing budget with 35% ROI improvement.",
    "Executed social media strategies achieving 2M+ followers across platforms."
  ],
  "summary": "Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market, specializing in digital marketing strategies and B2B sales. Proven track record of increasing revenue and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships."
}
```
2025-06-13 14:07:56 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 14:07:56 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Processed candidate: Priya Sharma - Sales & Marketing Professional.pdf with ID: 3e761deb-5a8b-4f4b-8e15-dbc4e55fb721
2025-06-13 14:07:56 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Priya Sharma - Sales & Marketing Professional.pdf (ID: 3e761deb-5a8b-4f4b-8e15-dbc4e55fb721) in 13112ms
2025-06-13 14:07:56 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:07:56 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Priya Sharma - Sales & Marketing Professional.pdf, success=true, extractedData={experience (truncated)...]
2025-06-13 14:07:56 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:07:56 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 14:07:56 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 14:07:56 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Processing resume upload: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 14:08:01 [http-nio-8081-exec-2] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/b46c987d-2e80-419f-aa77-3e7dee1a24d4-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 14:08:07 [http-nio-8081-exec-2] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/b46c987d-2e80-419f-aa77-3e7dee1a24d4-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 14:08:07 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Rajesh Kumar
Demand Planning Specialist
rajesh kumar@email.com
+91 98765 54321
linkedin.com/in/rajeshkumar
T
Pune, Maharashtra, India
Professional Summary
Strategic Demand Planning professional with 8+ years of experience in supply chain
optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting,
inventory management, and S&OP processes with proven track record of improving forecast
accuracy by 45% and reducing inventory costs by ₹2.5 crores annually. Skilled in implementing
demand planning solutions for multi-location operations across India.
Professional Experience
O
Senior Demand Planning Manager
Apr 202 Present
Hindustan Unilever Limited
Lead demand planning for 800+ SKUs across North and West India regions
Improved forecast accuracy from 72% to 91% using advanced analytics and ML models
Reduced excess inventory by ₹1.8 crores through enhanced demand sensing
Led S&OP implementation across 8 manufacturing locations
Managed cross-functional teams of 15+ members across supply chain functions
Implemented SAP IBP resulting in 40% reduction in planning cycle time
Demand Planner
Jun 2019 Mar 2021
ITC Limited
Managed demand planning for cigarettes and FMCG portfolio worth ₹500 crores
Developed statistical models for seasonal demand patterns using R and Python
Collaborated with marketing teams for promotional planning and new product launches
Reduced stockout incidents by 35% through improved demand sensing
Created automated dashboards using Power BI for executive reporting
Supply Chain Analyst
Jul 2017 May 2019
Mahindra & Mahindra
Supported inventory optimization for automotive spare parts across 200+ dealers
Performed root cause analysis on forecast variances and implemented corrections
Created Excel-based planning tools reducing manual effort by 60%
Assisted in vendor collaboration initiatives improving supplier fill rates
Core Competencies
Planning & Forecasting
Technology & Tools
Statistical Forecasting
Demand Sensing
SAP IBP/APO
Oracle Demantra
Power BI
S&OP
Inventory Optimization
Advanced Excel
Python
R Programming
Collaborative Planning
Industry Knowledge
FMCG
Automotive
Manufacturing
Retail
Multi- location Ops
Education & Certifications
Master of Business Administration (Operations)
Indian Institute of Management, Kozhikode
2015 2017
Bachelor of Engineering (Mechanical)
Pune University
2011 2015
Certifications
APICS SCOR Certified CPIM Certified SAP IBP Certification Six Sigma Green Belt

2025-06-13 14:08:13 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Statistical Forecasting\",\n    \"Demand Sensing\",\n    \"Inventory Optimization\",\n    \"Advanced Excel\",\n    \"Python\",\n    \"R Programming\",\n    \"SAP IBP/APO\",\n    \"Oracle Demantra\",\n    \"Power BI\"\n  ],\n  \"soft_skills\": [\n    \"Collaborative Planning\",\n    \"Team Management\",\n    \"Vendor Collaboration\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Operations)\",\n  \"years_of_experience\": 8,\n  \"certifications\": [\n    \"APICS SCOR Certified\",\n    \"CPIM Certified\",\n    \"SAP IBP Certification\",\n    \"Six Sigma Green Belt\"\n  ],\n  \"industries\": [\n    \"FMCG\",\n    \"Automotive\",\n    \"Manufacturing\",\n    \"Retail\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R Programming\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"SAP IBP/APO\",\n    \"Oracle Demantra\",\n    \"Power BI\",\n    \"Advanced Excel\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Improved forecast accuracy by 45%\",\n    \"Reduced inventory costs by ₹2.5 crores annually\",\n    \"Reduced excess inventory by ₹1.8 crores through enhanced demand sensing\"\n  ],\n  \"summary\": \"Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with a proven track record of improving forecast accuracy and reducing inventory costs. Skilled in implementing demand planning solutions for multi-location operations across India.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":775,"outputTokens":446,"totalTokens":1221}}
2025-06-13 14:08:13 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Statistical Forecasting",
    "Demand Sensing",
    "Inventory Optimization",
    "Advanced Excel",
    "Python",
    "R Programming",
    "SAP IBP/APO",
    "Oracle Demantra",
    "Power BI"
  ],
  "soft_skills": [
    "Collaborative Planning",
    "Team Management",
    "Vendor Collaboration"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Operations)",
  "years_of_experience": 8,
  "certifications": [
    "APICS SCOR Certified",
    "CPIM Certified",
    "SAP IBP Certification",
    "Six Sigma Green Belt"
  ],
  "industries": [
    "FMCG",
    "Automotive",
    "Manufacturing",
    "Retail"
  ],
  "programming_languages": [
    "Python",
    "R Programming"
  ],
  "frameworks": [],
  "tools": [
    "SAP IBP/APO",
    "Oracle Demantra",
    "Power BI",
    "Advanced Excel"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Improved forecast accuracy by 45%",
    "Reduced inventory costs by ₹2.5 crores annually",
    "Reduced excess inventory by ₹1.8 crores through enhanced demand sensing"
  ],
  "summary": "Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with a proven track record of improving forecast accuracy and reducing inventory costs. Skilled in implementing demand planning solutions for multi-location operations across India."
}
```
2025-06-13 14:08:13 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 14:08:13 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Processed candidate: Rajesh Kumar - Demand Planning Specialist.pdf with ID: 7dd634d3-ece2-4c99-b0a5-37157e07896c
2025-06-13 14:08:13 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rajesh Kumar - Demand Planning Specialist.pdf (ID: 7dd634d3-ece2-4c99-b0a5-37157e07896c) in 16053ms
2025-06-13 14:08:13 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:08:13 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rajesh Kumar - Demand Planning Specialist.pdf, success=true, extractedData={experienceLeve (truncated)...]
2025-06-13 14:08:13 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:08:13 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 14:08:13 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 14:08:13 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Processing resume upload: Rohit Gupta - Angular Developer.pdf
2025-06-13 14:08:17 [http-nio-8081-exec-4] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/27079a16-6e58-456c-bb67-b9abd9301fc4-Rohit Gupta - Angular Developer.pdf
2025-06-13 14:08:30 [http-nio-8081-exec-4] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/27079a16-6e58-456c-bb67-b9abd9301fc4-Rohit Gupta - Angular Developer.pdf
2025-06-13 14:08:30 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
hit Gupta
per & Frontend Specialist
+91 99876 54321
A linkedin.com/in/rohitgupta
github.com/rohitgupta
Delhi. India
I
PROFESSIONAL SUMMARY
TECHNICAL
EXPERTISE
Experienced Angular Developer with 4+ years of
ANGULAR FRAMEWORK
expertise in building dynamic, responsive web
applications using Angular framework and
Angular
Angular 1
TypeScript. Proficient in creating scalable frontend
Angular
Angular CLI
solutions with RxJS, NgRx state management, and
Angula Router
modern UI libraries. Strong background in integrating
RESTful APIs, implementing unit testing with Jasmine
and Karma, and optimizing application performance.
CORE TECHNOLOGIES
Passionate about clean code, user experience, and
TypeScript
JavaScript
staying updated with latest Angular trends and best
practices.
HTML5 CSS3
STATE MANAGEMENT
T
PROFESSIONAL EXPERIENCE
NgRx RxJ
Observable
Reactive Programming
Senior Angular Developer
HCL Technologies
Feb 2022 Present
UI LIBRARIES
Angular
TypeScript
RxJS
NgRx
ingula Material
Bootstra
Angular Material
Jasmine Karma REST APIs
Chart.j
PrimeNG
. Developed enterprise banking applications using Angular
15+ and TypeScript with 99 9% uptime
.
Implemented state management using NgR> for complex
TESTING APIS
application state handling
Jasmine
Karma
. Built reusable components using Angular Material and
custom UI libraries
REST
Integrated RESTful APIs and handled asynchronous
WebSocke
Socket.ic
operations using Rx1S observables
Achieved 95% code coverage through comprehensive unit
testing with Jasmine and Karma
TOOLS OTHERS
Optimized application performance resulting 40% faster
page load times
VS Code
Mentored junior developers Angular best practices
Webpack
and code review processes
EDUCATION
Angular Developer
Tech Mahindra
Jun 2021 2022
Bachelor of Technology
Angular 12
TypeScript
Bootstrap
Chart.js
(Computer Science)
HTTP Client
Forms
Delhi Technological University
2016-2020
. Built responsive dashboard applications using Angular 12
and Bootstrap framework
.
Created interactive data visualizations using Chart.js and
Angular integration
CERTIFICATIONS
Implemented reactive forms and template-driven forms
for data collection
Angular Certified Developer
Consumed REST APIs using Angular HTTP Client and
handled error scenarios
TypeScript Professional
Collaborated with UX/UI teams to implement pixel perfect
designs
NgRx State Management
Participated agile development cycles with daily
standups and sprint planning
Rx1S Reactive Programming
Frontend Web Development
Frontend Developer
Angular Testing with Jasmine
Cognizant Technology
Aug 2020 May
Solutions
2021
LANGUAGES
Angular
JavaScript
HTML5
CSS3
SCSS
Gi
Hindi: Native
English: Fluent
.
Developed customer facing web applications using
Angular 10 and modern JavaScript
Punjabi: Conversational
Created responsive layouts using HTML5, CSS3, and SCSS
preprocessor
INTERESTS
Implemented routing and navigation using Angular Router
Worked with version control using Git and collaborated in
Frontend Architectur Angular
team environments
Updates Open Source Contributing
Fixed bugs and implemented feature enhancements
. Tech Blogging UI/UX Design
based on client requirements
FEATURED PROJECTS
Banking Dashboard
E-Commerce Admin
System
Panel
Angular
NgRx
Angular 12
Angular Material
TypeScript
Bootstrap
Chart.js
RxJS
REST APIs
Forms
Developed comprehensive
Built admin panel e
banking dashboard using
commerce management
Angular with NgRx for
using Angular 12 and
state management
TypeScript Implemented
Integrated Angular Material
Bootstrap responsive
components consistent
design integrated REST
UI and Chart.j for financial
APIs data operations,
data visualization Used
and created complex forms
RxJS handling complex
for product and inventory
asynchronous operations
management
and real-time updates.
Task Management
Real-time Chat
Application
Interface
Angular
Jasmine
Angula Socket.ig
Karma
HTTP Client
SCSS WebSocket
Local Storage
Reactive Forms
Created task management
Developed real-time chat
app using Angular 10 with
application using Angular 14
local storage data
and Socket.ic WebSocket
persistence. Implemented
communication Styled with
comprehensive unit testing
SCSS custom
with Jasmine and Karma.
animations impleme nted
used HTTP Client for API
reactive forms message
integration and built drag
input. and handled real time
and-drop functionality for
message updates efficiently
task organization

2025-06-13 14:08:36 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Angular\",\n    \"Angular 1\",\n    \"TypeScript\",\n    \"RxJS\",\n    \"NgRx\",\n    \"Angular Router\",\n    \"Angular CLI\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"Chart.js\",\n    \"PrimeNG\",\n    \"Jasmine\",\n    \"Karma\",\n    \"REST APIs\",\n    \"WebSocket\",\n    \"Socket.io\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\",\n    \"Git\",\n    \"VS Code\",\n    \"Webpack\",\n    \"HTTP Client\",\n    \"Forms\",\n    \"Local Storage\",\n    \"Reactive Forms\"\n  ],\n  \"soft_skills\": [\n    \"Mentoring\",\n    \"Collaboration\",\n    \"Agile development\",\n    \"Team environments\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 4,\n  \"certifications\": [\n    \"Angular Certified Developer\",\n    \"TypeScript Professional\",\n    \"NgRx State Management\",\n    \"RxJS Reactive Programming\",\n    \"Frontend Web Development\",\n    \"Angular Testing with Jasmine\"\n  ],\n  \"industries\": [\n    \"IT\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"TypeScript\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\"\n  ],\n  \"frameworks\": [\n    \"Angular\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"PrimeNG\"\n  ],\n  \"tools\": [\n    \"VS Code\",\n    \"Webpack\",\n    \"Git\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime.\",\n    \"Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma.\",\n    \"Optimized application performance resulting in 40% faster page load times.\"\n  ],\n  \"summary\": \"Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular, TypeScript, and modern UI libraries. Passionate about clean code, user experience, and staying updated with the latest Angular trends and best practices.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1267,"outputTokens":599,"totalTokens":1866}}
2025-06-13 14:08:36 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Angular",
    "Angular 1",
    "TypeScript",
    "RxJS",
    "NgRx",
    "Angular Router",
    "Angular CLI",
    "Angular Material",
    "Bootstrap",
    "Chart.js",
    "PrimeNG",
    "Jasmine",
    "Karma",
    "REST APIs",
    "WebSocket",
    "Socket.io",
    "HTML5",
    "CSS3",
    "SCSS",
    "Git",
    "VS Code",
    "Webpack",
    "HTTP Client",
    "Forms",
    "Local Storage",
    "Reactive Forms"
  ],
  "soft_skills": [
    "Mentoring",
    "Collaboration",
    "Agile development",
    "Team environments"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 4,
  "certifications": [
    "Angular Certified Developer",
    "TypeScript Professional",
    "NgRx State Management",
    "RxJS Reactive Programming",
    "Frontend Web Development",
    "Angular Testing with Jasmine"
  ],
  "industries": [
    "IT",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "TypeScript",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS"
  ],
  "frameworks": [
    "Angular",
    "Angular Material",
    "Bootstrap",
    "PrimeNG"
  ],
  "tools": [
    "VS Code",
    "Webpack",
    "Git"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime.",
    "Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma.",
    "Optimized application performance resulting in 40% faster page load times."
  ],
  "summary": "Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular, TypeScript, and modern UI libraries. Passionate about clean code, user experience, and staying updated with the latest Angular trends and best practices."
}
```
2025-06-13 14:08:36 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rohit Gupta - Angular Developer.pdf
2025-06-13 14:08:36 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Processed candidate: Rohit Gupta - Angular Developer.pdf with ID: 2a82eae4-f31e-4f46-969b-f5548cbc4ebb
2025-06-13 14:08:36 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rohit Gupta - Angular Developer.pdf (ID: 2a82eae4-f31e-4f46-969b-f5548cbc4ebb) in 23840ms
2025-06-13 14:08:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:08:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rohit Gupta - Angular Developer.pdf, success=true, extractedData={experienceLevel=SENIOR,  (truncated)...]
2025-06-13 14:08:36 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:08:38 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 14:08:38 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 14:08:38 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 14:08:38 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:08:38 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@6b0181b0, com.hackathon.hr.model.Candidate@27e884e8, com.hackathon (truncated)...]
2025-06-13 14:08:38 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:09:48 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 2 (Data Analyst - Tech & Analytics)
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Karan Singh - DevOps Engineer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 26.0 for candidate Aarav Sharma - Junior Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.27272727272727 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 44.63636363636364 for candidate Anjali Patel - Data Analyst.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 46.63636363636364 for candidate Kavya Nair - Full Stack Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Deepika Reddy - Java Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 57.54545454545455 for candidate Mei Chen - Marketing Analyst.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 55.90909090909091 for candidate Arjun Singh - Software Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Rohit Gupta - Angular Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 14:09:48 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Data Analyst - Tech & Analytics
2025-06-13 14:09:48 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 2 in 24ms
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=2, success=true, totalCandidates=10, jobTitle=Data Analyst - Tech & Analytics, matchCount=10, (truncated)...]
2025-06-13 14:09:48 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:09:54 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 1 (Junior Frontend Developer)
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.63636363636364 for candidate Karan Singh - DevOps Engineer.pdf and job Junior Frontend Developer
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Junior Frontend Developer
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 85.0909090909091 for candidate Aarav Sharma - Junior Developer.pdf and job Junior Frontend Developer
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Junior Frontend Developer
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Anjali Patel - Data Analyst.pdf and job Junior Frontend Developer
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 72.0909090909091 for candidate Kavya Nair - Full Stack Developer.pdf and job Junior Frontend Developer
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 46.63636363636364 for candidate Deepika Reddy - Java Developer.pdf and job Junior Frontend Developer
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Junior Frontend Developer
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 66.81818181818181 for candidate Arjun Singh - Software Developer.pdf and job Junior Frontend Developer
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 61.18181818181818 for candidate Rohit Gupta - Angular Developer.pdf and job Junior Frontend Developer
2025-06-13 14:09:54 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Junior Frontend Developer
2025-06-13 14:09:54 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 1 in 5ms
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=1, success=true, totalCandidates=10, jobTitle=Junior Frontend Developer, matchCount=10, match (truncated)...]
2025-06-13 14:09:54 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:10:01 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 3 (Senior Full Stack Developer)
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 68.0 for candidate Karan Singh - DevOps Engineer.pdf and job Senior Full Stack Developer
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Senior Full Stack Developer
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 34.0 for candidate Aarav Sharma - Junior Developer.pdf and job Senior Full Stack Developer
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Senior Full Stack Developer
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 56.0 for candidate Anjali Patel - Data Analyst.pdf and job Senior Full Stack Developer
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 74.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Senior Full Stack Developer
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 66.0 for candidate Deepika Reddy - Java Developer.pdf and job Senior Full Stack Developer
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 62.0 for candidate Mei Chen - Marketing Analyst.pdf and job Senior Full Stack Developer
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 92.0 for candidate Arjun Singh - Software Developer.pdf and job Senior Full Stack Developer
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 62.0 for candidate Rohit Gupta - Angular Developer.pdf and job Senior Full Stack Developer
2025-06-13 14:10:01 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Senior Full Stack Developer
2025-06-13 14:10:01 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 3 in 2ms
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=3, success=true, totalCandidates=10, jobTitle=Senior Full Stack Developer, matchCount=10, mat (truncated)...]
2025-06-13 14:10:01 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:10:08 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 4 (Java Backend Developer)
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 49.0 for candidate Karan Singh - DevOps Engineer.pdf and job Java Backend Developer
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Java Backend Developer
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 26.0 for candidate Aarav Sharma - Junior Developer.pdf and job Java Backend Developer
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Java Backend Developer
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Anjali Patel - Data Analyst.pdf and job Java Backend Developer
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Java Backend Developer
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 63.0 for candidate Deepika Reddy - Java Developer.pdf and job Java Backend Developer
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Java Backend Developer
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 61.0 for candidate Arjun Singh - Software Developer.pdf and job Java Backend Developer
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Rohit Gupta - Angular Developer.pdf and job Java Backend Developer
2025-06-13 14:10:08 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Java Backend Developer
2025-06-13 14:10:08 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 4 in 2ms
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=4, success=true, totalCandidates=10, jobTitle=Java Backend Developer, matchCount=10, matches= (truncated)...]
2025-06-13 14:10:08 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:10:21 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 5 (DevOps Engineer - Cloud Infrastructure)
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 77.0 for candidate Karan Singh - DevOps Engineer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 26.0 for candidate Aarav Sharma - Junior Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Anjali Patel - Data Analyst.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Kavya Nair - Full Stack Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.0 for candidate Deepika Reddy - Java Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 57.0 for candidate Arjun Singh - Software Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Rohit Gupta - Angular Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 14:10:21 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: DevOps Engineer - Cloud Infrastructure
2025-06-13 14:10:21 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 5 in 15ms
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=5, success=true, totalCandidates=10, jobTitle=DevOps Engineer - Cloud Infrastructure, matchCo (truncated)...]
2025-06-13 14:10:21 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:10:27 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 6 (Full Stack Developer - React/Django)
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Karan Singh - DevOps Engineer.pdf and job Full Stack Developer - React/Django
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Full Stack Developer - React/Django
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 34.0 for candidate Aarav Sharma - Junior Developer.pdf and job Full Stack Developer - React/Django
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Full Stack Developer - React/Django
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Anjali Patel - Data Analyst.pdf and job Full Stack Developer - React/Django
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 67.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Full Stack Developer - React/Django
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Deepika Reddy - Java Developer.pdf and job Full Stack Developer - React/Django
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 47.0 for candidate Mei Chen - Marketing Analyst.pdf and job Full Stack Developer - React/Django
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 85.0 for candidate Arjun Singh - Software Developer.pdf and job Full Stack Developer - React/Django
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 47.0 for candidate Rohit Gupta - Angular Developer.pdf and job Full Stack Developer - React/Django
2025-06-13 14:10:27 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Full Stack Developer - React/Django
2025-06-13 14:10:27 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 6 in 21ms
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=6, success=true, totalCandidates=10, jobTitle=Full Stack Developer - React/Django, matchCount (truncated)...]
2025-06-13 14:10:27 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:10:32 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 7 (Marketing Data Analyst)
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Karan Singh - DevOps Engineer.pdf and job Marketing Data Analyst
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Marketing Data Analyst
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 26.0 for candidate Aarav Sharma - Junior Developer.pdf and job Marketing Data Analyst
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Marketing Data Analyst
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 46.0 for candidate Anjali Patel - Data Analyst.pdf and job Marketing Data Analyst
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Marketing Data Analyst
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Deepika Reddy - Java Developer.pdf and job Marketing Data Analyst
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 78.0 for candidate Mei Chen - Marketing Analyst.pdf and job Marketing Data Analyst
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 50.0 for candidate Arjun Singh - Software Developer.pdf and job Marketing Data Analyst
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Rohit Gupta - Angular Developer.pdf and job Marketing Data Analyst
2025-06-13 14:10:32 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Marketing Data Analyst
2025-06-13 14:10:32 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 7 in 16ms
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=7, success=true, totalCandidates=10, jobTitle=Marketing Data Analyst, matchCount=10, matches= (truncated)...]
2025-06-13 14:10:32 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:10:37 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 8 (Senior Marketing Manager - Digital)
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Karan Singh - DevOps Engineer.pdf and job Senior Marketing Manager - Digital
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 82.85714285714286 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Senior Marketing Manager - Digital
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 26.0 for candidate Aarav Sharma - Junior Developer.pdf and job Senior Marketing Manager - Digital
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 56.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Senior Marketing Manager - Digital
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 56.0 for candidate Anjali Patel - Data Analyst.pdf and job Senior Marketing Manager - Digital
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Senior Marketing Manager - Digital
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Deepika Reddy - Java Developer.pdf and job Senior Marketing Manager - Digital
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Mei Chen - Marketing Analyst.pdf and job Senior Marketing Manager - Digital
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Arjun Singh - Software Developer.pdf and job Senior Marketing Manager - Digital
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Rohit Gupta - Angular Developer.pdf and job Senior Marketing Manager - Digital
2025-06-13 14:10:37 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Senior Marketing Manager - Digital
2025-06-13 14:10:37 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 8 in 1ms
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=8, success=true, totalCandidates=10, jobTitle=Senior Marketing Manager - Digital, matchCount= (truncated)...]
2025-06-13 14:10:37 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:10:43 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 9 (Demand Planning Manager - Supply Chain)
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Karan Singh - DevOps Engineer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 26.0 for candidate Aarav Sharma - Junior Developer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 64.88888888888889 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 56.0 for candidate Anjali Patel - Data Analyst.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 62.44444444444444 for candidate Kavya Nair - Full Stack Developer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Deepika Reddy - Java Developer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 62.44444444444444 for candidate Mei Chen - Marketing Analyst.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 64.44444444444444 for candidate Arjun Singh - Software Developer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Rohit Gupta - Angular Developer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 14:10:43 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Demand Planning Manager - Supply Chain
2025-06-13 14:10:43 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 9 in 6ms
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=9, success=true, totalCandidates=10, jobTitle=Demand Planning Manager - Supply Chain, matchCo (truncated)...]
2025-06-13 14:10:43 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 14:10:48 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 10 (Senior Angular Developer)
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Karan Singh - DevOps Engineer.pdf and job Senior Angular Developer
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Senior Angular Developer
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 34.888888888888886 for candidate Aarav Sharma - Junior Developer.pdf and job Senior Angular Developer
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Senior Angular Developer
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Anjali Patel - Data Analyst.pdf and job Senior Angular Developer
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 56.33333333333333 for candidate Kavya Nair - Full Stack Developer.pdf and job Senior Angular Developer
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Deepika Reddy - Java Developer.pdf and job Senior Angular Developer
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job Senior Angular Developer
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 53.888888888888886 for candidate Arjun Singh - Software Developer.pdf and job Senior Angular Developer
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 83.0 for candidate Rohit Gupta - Angular Developer.pdf and job Senior Angular Developer
2025-06-13 14:10:48 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Senior Angular Developer
2025-06-13 14:10:48 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 10 in 13ms
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=10, success=true, totalCandidates=10, jobTitle=Senior Angular Developer, matchCount=10, match (truncated)...]
2025-06-13 14:10:48 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:16:08 [RMI TCP Connection(19)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 14:16:08 [RMI TCP Connection(19)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 14:16:08 [RMI TCP Connection(19)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 14:16:28 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 73949 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 14:16:28 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 14:16:29 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 14:16:29 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 14:16:29 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 14:16:30 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 14:16:30 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 14:16:30 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 14:16:30 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 14:16:30 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1881 ms
2025-06-13 14:16:32 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 14:16:32 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 14:16:32 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 14:16:32 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 14:16:32 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2025-06-13 14:16:32 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 14:16:32 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 14:16:33 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 14:16:33 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 14:16:33 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.791 seconds (JVM running for 6.216)
2025-06-13 14:16:38 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 14:16:38 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4bed6c43
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6781f1d3
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 14:16:38 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2ea2d6a2
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6b6095dc
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4c5702d6
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 14:16:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:16:39 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 14:16:39 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 14:16:39 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 14:16:39 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 14:16:39 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 14:16:39 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 14:16:39 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:16:39 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:16:39 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@46c23088, com.hackathon.hr.model.JobRequirement@7c93857, com. (truncated)...]
2025-06-13 14:16:39 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 14:16:39 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:16:39 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:17:35 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 14:17:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:17:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:17:35 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:17:35 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:17:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:17:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:17:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:17:35 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:17:35 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:17:37 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 14:17:37 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 14:17:37 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 14:17:37 [http-nio-8081-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 14:17:37 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:17:37 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 14:17:37 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 14:17:37 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 14:17:37 [http-nio-8081-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:17:37 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 14:17:37 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 14:17:37 [http-nio-8081-exec-8] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:17:37 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:17:37 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:17:37 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:17:37 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:17:37 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:17:37 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:17:37 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:17:37 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:17:37 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:17:38 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 14:17:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 14:17:38 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 14:17:38 [http-nio-8081-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:17:38 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 14:17:38 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 14:17:38 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:17:38 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 14:17:38 [http-nio-8081-exec-9] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:17:38 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@46c23088, com.hackathon.hr.model.JobRequirement@7c93857, com. (truncated)...]
2025-06-13 14:17:38 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:17:38 [http-nio-8081-exec-10] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 14:17:38 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:17:38 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:17:38 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:17:38 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:17:38 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:17:38 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:17:38 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 14:17:38 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:17:38 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:17:38 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:21:54 [RMI TCP Connection(13)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 14:21:54 [RMI TCP Connection(13)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 14:21:54 [RMI TCP Connection(13)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 14:22:12 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 74019 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 14:22:12 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 14:22:12 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 14:22:12 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 14:22:12 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 14:22:14 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 14:22:14 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 14:22:14 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 14:22:14 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 14:22:14 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1908 ms
2025-06-13 14:22:16 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 14:22:16 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 14:22:16 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 14:22:16 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 14:22:16 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2025-06-13 14:22:16 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 14:22:16 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 14:22:16 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 14:22:16 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 14:22:16 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.725 seconds (JVM running for 6.042)
2025-06-13 14:22:23 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 14:22:23 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3ff9ad56
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@545e0916
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 14:22:23 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@14e9c393
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1d0ac411
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@765e09f3
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 14:22:23 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:22:24 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 14:22:24 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 14:22:24 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 14:22:24 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 14:22:24 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 14:22:24 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 14:22:24 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:22:24 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:22:24 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 14:22:24 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@5ee5cb00, com.hackathon.hr.model.JobRequirement@1427b533, com (truncated)...]
2025-06-13 14:22:24 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:22:24 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:22:27 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 14:22:27 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:22:27 [http-nio-8081-exec-4] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:22:27 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:22:27 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:22:27 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:22:27 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:22:27 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:22:27 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:22:27 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:22:30 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 14:22:30 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 14:22:30 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 14:22:30 [http-nio-8081-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 14:22:30 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:22:30 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 14:22:30 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 14:22:30 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 14:22:30 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 14:22:30 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 14:22:30 [http-nio-8081-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:22:30 [http-nio-8081-exec-8] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:22:30 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:22:30 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:22:30 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:22:30 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:22:30 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:22:30 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:22:30 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:22:30 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:22:30 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:22:31 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 14:22:31 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 14:22:31 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 14:22:31 [http-nio-8081-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:22:31 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 14:22:31 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:22:31 [http-nio-8081-exec-10] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:22:31 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 14:22:31 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:22:31 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 14:22:31 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 14:22:31 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:22:31 [http-nio-8081-exec-9] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 14:22:31 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:22:31 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:22:31 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:22:31 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:22:31 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:22:31 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@5ee5cb00, com.hackathon.hr.model.JobRequirement@1427b533, com (truncated)...]
2025-06-13 14:22:31 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:22:31 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:22:31 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:23:00 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 14:23:00 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:23:00 [http-nio-8081-exec-2] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:23:00 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:23:00 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:23:00 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:23:00 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:23:00 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:23:00 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:23:00 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:26:57 [RMI TCP Connection(14)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 14:26:57 [RMI TCP Connection(14)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 14:26:57 [RMI TCP Connection(14)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 14:27:03 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 74057 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 14:27:03 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 14:27:03 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 14:27:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 14:27:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 14:27:05 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 14:27:05 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 14:27:05 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 14:27:05 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 14:27:05 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1772 ms
2025-06-13 14:27:06 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 14:27:06 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 14:27:07 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 14:27:07 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 14:27:07 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2025-06-13 14:27:07 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 14:27:07 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 14:27:07 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 14:27:07 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 14:27:07 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.652 seconds (JVM running for 5.86)
2025-06-13 14:27:14 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 14:27:14 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@33879d5f
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@64263ebe
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 14:27:14 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:27:14 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:27:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:27:17 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 14:27:17 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 14:27:17 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 14:27:17 [http-nio-8081-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 14:27:17 [http-nio-8081-exec-2] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 14:27:18 [http-nio-8081-exec-2] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@1fa53047
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@57967162
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4d50c983
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 14:27:18 [http-nio-8081-exec-2] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 14:27:18 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:27:18 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 14:27:18 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 14:27:18 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 14:27:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 14:27:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 14:27:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:27:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:27:18 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:27:18 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:27:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:27:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:27:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:27:18 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:27:18 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:27:18 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:27:18 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:27:19 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 14:27:19 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 14:27:19 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 14:27:19 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 14:27:19 [http-nio-8081-exec-6] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 14:27:19 [http-nio-8081-exec-7] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 14:27:19 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:27:19 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:27:19 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 14:27:19 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@28319780, com.hackathon.hr.model.JobRequirement@74e9d52e, com (truncated)...]
2025-06-13 14:27:19 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:27:19 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:27:19 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 14:27:19 [http-nio-8081-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:27:19 [http-nio-8081-exec-8] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:27:19 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:27:19 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:27:19 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:27:19 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:27:19 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:27:19 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:27:19 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:30:04 [RMI TCP Connection(11)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 14:30:04 [RMI TCP Connection(11)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 14:30:04 [RMI TCP Connection(11)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 14:30:17 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 74093 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 14:30:17 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 14:30:17 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 14:30:17 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 14:30:17 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 14:30:19 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 14:30:19 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 14:30:19 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 14:30:19 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 14:30:19 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1799 ms
2025-06-13 14:30:21 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 14:30:21 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 14:30:21 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 14:30:21 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 14:30:21 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2025-06-13 14:30:21 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 14:30:21 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 14:30:21 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 14:30:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 14:30:21 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.693 seconds (JVM running for 5.953)
2025-06-13 14:30:32 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 14:30:32 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@45dd61ca
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4cf9d9fd
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 14:30:32 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@46724bb8
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6da69a7c
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5166a66e
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 14:30:32 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 14:30:33 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:30:33 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 14:30:33 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 14:30:33 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 14:30:33 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 14:30:33 [http-nio-8081-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 14:30:33 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 14:30:33 [http-nio-8081-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 14:30:33 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 14:30:33 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 14:30:33 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 14:30:33 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:30:33 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:30:33 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:30:33 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 14:30:33 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 14:30:33 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 14:30:33 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 14:30:33 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 14:30:33 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 14:30:33 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 14:30:33 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 14:30:33 [http-nio-8081-exec-6] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 14:30:33 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:30:33 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@28319780, com.hackathon.hr.model.JobRequirement@74e9d52e, com (truncated)...]
2025-06-13 14:30:33 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 14:30:33 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 14:30:33 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 14:30:33 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:09:02 [RMI TCP Connection(41)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 15:09:02 [RMI TCP Connection(41)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 15:09:02 [RMI TCP Connection(41)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 15:09:18 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 74458 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 15:09:18 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 15:09:18 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 15:09:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 15:09:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 15:09:19 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 15:09:19 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 15:09:19 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 15:09:19 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 15:09:19 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1798 ms
2025-06-13 15:09:21 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 15:09:21 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 15:09:21 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 15:09:21 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 15:09:22 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2025-06-13 15:09:22 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 15:09:22 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 15:09:22 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 15:09:22 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 15:09:22 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 4.819 seconds (JVM running for 6.155)
2025-06-13 15:09:26 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 15:09:26 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 15:09:26 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 15:09:26 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 15:09:26 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 15:09:26 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4bed6c43
2025-06-13 15:09:26 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6781f1d3
2025-06-13 15:09:26 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 15:09:26 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-13 15:09:26 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 15:09:26 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 15:09:26 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 15:09:26 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 15:09:26 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 15:09:27 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2ea2d6a2
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6b6095dc
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4c5702d6
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 15:09:27 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 15:09:27 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:09:27 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 15:09:27 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 15:09:27 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 15:09:27 [http-nio-8081-exec-2] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 15:09:27 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 15:09:27 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 15:09:27 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:09:27 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:09:27 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 15:09:27 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@4ffb16cb, com.hackathon.hr.model.JobRequirement@1f0fd1eb, com (truncated)...]
2025-06-13 15:09:27 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:09:27 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:09:37 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 15:09:37 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 15:09:37 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Processing resume upload: Aarav Sharma - Junior Developer.pdf
2025-06-13 15:09:40 [http-nio-8081-exec-4] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/af97aebc-9792-4baf-9290-7e257ac21f49-Aarav Sharma - Junior Developer.pdf
2025-06-13 15:09:47 [http-nio-8081-exec-4] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/af97aebc-9792-4baf-9290-7e257ac21f49-Aarav Sharma - Junior Developer.pdf
2025-06-13 15:09:47 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Aarav Sharma
Junior Software Developer
aarav.sharma@email.com
+91 98765 43210
linkedin.com/in/aaravsharma
github .com/aaravsharma
Jaipur, Rajasthan, India
Professional Summary
Technical Skills
Enthusiastic Junior Software Developer with 2+ years
FRONTEND
of experience in web development using modern
HTML5
CSS3
JavaScript
React
technologies. Passionate about creating clean,
efficient code and building user-friendly applications.
Bootstrap
Strong foundation in JavaScript, React, and Node is
BACKEND
with hands-on experience in full-stack development
Node.j
Express
PHP
REST APIs
projects. Eager to contribute to innovative software
solutions and grow within a dynamic development
DATABASES
team.
MongoDB
MySQL
TOOLS TECHNOLOGIES
Git GitHub
VS Code
Postman
Professional Experience
JWT
APIS INTEGRATIONS
Junior Software Developer
TechStart Solutions Pvt Ltd
Jun 2022 Present
Stripe API
Local Storage
JavaScript React Node.js MongoDB Express.js Git
Education
Developed responsive web applications using React and
JavaScript ES6+
Bachelor of Computer
Built REST APIs using Node js and Express js serving
10,000+ daily requests
Applications (BCA)
University of Rajasthan
Implemented user authentication and authorization using
2019 - 2022
JWT tokens
Collaborated with senior developers using Git for version
control and code reviews
Certifications
Optimized database queries in MongoDB reducing
.
response time by 25%
JavaScript Fundamentals freeCodeCamp
.
React Developer Course Udemy
Participated in agile development cycles with daily
.
Node js Certification Coursera
standups and sprint planning
.
Git Version Control Codecademy
Languages
Hindi: Native
Web Development Intern
English: Fluent
Digital Innovators
Jan 2022 May 2022
Rajasthani: Native
HTML5 CSS3 JavaScript Bootstrap MySQL
Created static websites using HTML5, CSS3, and
Bootstrap framework
Implemented interactive features using vanilla JavaScript
Assisted in maintaining MySQL databases and writing
basic SQL queries
Fixed UI bugs and improved cross-browser compatibility
Learned modern development practices and coding
standards
Key Projects
E-Commerce Shopping Platform
React
Node.j
Express
MongoDB
JWT
Stripe API
Built full-stack e-commerce application with React frontend
and Node js backend Implemented user authentication using
JWT. integrated Stripe payment gateway, and created admin
dashboard for inventory management. Used MongoDB for
data storage and Express js for API development.
Task Management System
JavaScript
React
Local Storage
CSS3
Bootstrap
Developed a responsive task management application using
React and JavaScript. Features include task creation, editing,
deletion. and status tracking. Implemented local storage for
data persistence and used Bootstrap for responsive design
across devices.
Restaurant Website
HTML5
CSS3
JavaScript
MySQL
PHP
Created dynamic restaurant website with online reservation
system. Used HTML5 and CSS3 for layout and styling,
JavaScript for interactive features, and PHP with MySQL for
backend functionality including reservation management and
menu display.

2025-06-13 15:10:04 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"HTML5\",\n    \"CSS3\",\n    \"JavaScript\",\n    \"React\",\n    \"Bootstrap\",\n    \"Node.js\",\n    \"Express\",\n    \"PHP\",\n    \"REST APIs\",\n    \"MongoDB\",\n    \"MySQL\",\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\",\n    \"JWT\",\n    \"Stripe API\",\n    \"Local Storage\",\n    \"JavaScript ES6+\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Communication\",\n    \"Problem-solving\"\n  ],\n  \"experience_level\": \"ENTRY\",\n  \"education\": \"Bachelor of Computer Applications (BCA)\",\n  \"years_of_experience\": 2,\n  \"certifications\": [\n    \"JavaScript Fundamentals - freeCodeCamp\",\n    \"React Developer Course - Udemy\",\n    \"Node.js Certification - Coursera\",\n    \"Git Version Control - Codecademy\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"Web Development\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"Node.js\",\n    \"PHP\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Bootstrap\",\n    \"Express\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Built REST APIs using Node.js and Express.js serving 10,000+ daily requests\",\n    \"Optimized database queries in MongoDB reducing response time by 25%\",\n    \"Implemented user authentication and authorization using JWT tokens\"\n  ],\n  \"summary\": \"Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":920,"outputTokens":531,"totalTokens":1451}}
2025-06-13 15:10:04 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "HTML5",
    "CSS3",
    "JavaScript",
    "React",
    "Bootstrap",
    "Node.js",
    "Express",
    "PHP",
    "REST APIs",
    "MongoDB",
    "MySQL",
    "Git",
    "GitHub",
    "VS Code",
    "Postman",
    "JWT",
    "Stripe API",
    "Local Storage",
    "JavaScript ES6+"
  ],
  "soft_skills": [
    "Collaboration",
    "Communication",
    "Problem-solving"
  ],
  "experience_level": "ENTRY",
  "education": "Bachelor of Computer Applications (BCA)",
  "years_of_experience": 2,
  "certifications": [
    "JavaScript Fundamentals - freeCodeCamp",
    "React Developer Course - Udemy",
    "Node.js Certification - Coursera",
    "Git Version Control - Codecademy"
  ],
  "industries": [
    "Software Development",
    "Web Development"
  ],
  "programming_languages": [
    "JavaScript",
    "Node.js",
    "PHP"
  ],
  "frameworks": [
    "React",
    "Bootstrap",
    "Express"
  ],
  "tools": [
    "Git",
    "GitHub",
    "VS Code",
    "Postman"
  ],
  "databases": [
    "MongoDB",
    "MySQL"
  ],
  "cloud_platforms": [],
  "key_achievements": [
    "Built REST APIs using Node.js and Express.js serving 10,000+ daily requests",
    "Optimized database queries in MongoDB reducing response time by 25%",
    "Implemented user authentication and authorization using JWT tokens"
  ],
  "summary": "Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects."
}
```
2025-06-13 15:10:04 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Aarav Sharma - Junior Developer.pdf
2025-06-13 15:10:04 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Processed candidate: Aarav Sharma - Junior Developer.pdf with ID: b8dbf78a-305d-4913-91ed-7a44c7ce496c
2025-06-13 15:10:04 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Aarav Sharma - Junior Developer.pdf (ID: b8dbf78a-305d-4913-91ed-7a44c7ce496c) in 27338ms
2025-06-13 15:10:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:10:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Aarav Sharma - Junior Developer.pdf, success=true, extractedData={experienceLevel=ENTRY, s (truncated)...]
2025-06-13 15:10:04 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:10:04 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 15:10:04 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 15:10:04 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Processing resume upload: Anjali Patel - Data Analyst.pdf
2025-06-13 15:10:06 [http-nio-8081-exec-5] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/e662da81-8410-476d-9757-11957f18070f-Anjali Patel - Data Analyst.pdf
2025-06-13 15:10:14 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/e662da81-8410-476d-9757-11957f18070f-Anjali Patel - Data Analyst.pdf
2025-06-13 15:10:14 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Pater
S Intelligence Specialist
anjali.patel@email.com
+91 97845 62310
linkedin.com/in/anjalipate
Bangalore, Karnataka, India
Professional Summary
Technical Skills
Innovative Data Analyst with 6+ years of experience in
transforming complex datasets into strategic business
Programming
insights for Indian tech startups and MNCs. Expert in
Python
R
SQL
Java
Scala
machine learning, statistical modeling, and data
visualization with proven track record of improving
business efficiency by 50% and reducing costs by
Databases
₹30 lakh annually through data-driven
recommendations.
MySQL
PostgreSQL
MongoDB
Cassandra
Snowflake
Professional Experience
Analytics & ML
Senior Data Analyst
Pandas
NumPy
Scikit-learn
TensorFlow
Flipkart Group
Feb 2022 Present
Statistical Modeling
Developed ML models for customer behavior analysis
processing 10M+ transactions daily
Created automated dashboards reducing reporting time by
Visualization
70% for 15+ stakeholders
Led data quality initiatives improving accuracy by 95%
Tableau
Power B
matplotlib
seaborn
across e-commerce platform
D3.js
Implemented A/B testing framework increasing conversion
rates by 28%
Built recommendation engines improving customer
engagement by 35%
Cloud Platforms
AWS
Azure
GCP
Spark
Hadoop
Data Analyst
Infosys Limited
Jun 2020 Jan 2022
Analyzed financial data for global banking clients using
Python and SQL
Developed predictive models for fraud detection with 92%
Key Projects
accuracy
Created Power BI dashboards for C-level executives and
stakeholders
E-commerce Customer Segmentation
Optimized database queries improving performance by
Built ML clustering model using K-means and RFM
45%
analysis to segment 5M+ customers, enabling
personalized marketing campaigns with 40% higher
conversion rates.
Junior Data Analyst
Tata Consultancy Services
Jul 2018 May 2020
Real-time Fraud Detection System
Supported market research analysis for retail and
Developed ensemble learning model combining
healthcare clients
Random Forest and XGBoost achieving 94% accuracy
Developed Excel-based models for financial forecasting
in detecting fraudulent transactions for fintech
and budgeting
application.
Assisted in data migration projects and quality assurance
testing
Supply Chain Optimization Dashboard
Created interactive Tableau dashboard tracking 50+
KPIs across inventory, logistics, and vendor
performance, reducing operational costs by ₹25 lakh
annually.
Education
Master of Technology (Computer Science)
Indian Institute of Technology, Bombay
Certifications
2016 2018
AWS Certified Data Analytics Specialty (2024)
Bachelor of Engineering (Information
Technology)
Google Professional Data Engineer (2023)
Gujarat Technological University
2012 2016
Microsoft Azure Data Scientist Associate (2023)
Tableau Desktop Certified Professional (2022)
Google Analytics Individual Qualification (2022)
Languages
Hindi (Native)
English (Fluent)
Gujarati (Native)
Tamil (Conversational)

2025-06-13 15:10:20 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Machine Learning\",\n    \"Statistical Modeling\",\n    \"Data Visualization\",\n    \"Data Quality Initiatives\",\n    \"A/B Testing Framework\",\n    \"Recommendation Engines\",\n    \"Predictive Modeling\",\n    \"Database Query Optimization\",\n    \"Financial Forecasting\",\n    \"Budgeting\",\n    \"Data Migration\",\n    \"Quality Assurance Testing\"\n  ],\n  \"soft_skills\": [\n    \"Innovative\",\n    \"Analytical\",\n    \"Leadership\",\n    \"Communication\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Technology (Computer Science)\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"AWS Certified Data Analytics Specialty (2024)\",\n    \"Google Professional Data Engineer (2023)\",\n    \"Microsoft Azure Data Scientist Associate (2023)\",\n    \"Tableau Desktop Certified Professional (2022)\",\n    \"Google Analytics Individual Qualification (2022)\"\n  ],\n  \"industries\": [\n    \"Tech Startups\",\n    \"MNCs\",\n    \"E-commerce\",\n    \"Global Banking\",\n    \"Retail\",\n    \"Healthcare\",\n    \"Fintech\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R\",\n    \"SQL\",\n    \"Java\",\n    \"Scala\"\n  ],\n  \"frameworks\": [\n    \"Pandas\",\n    \"NumPy\",\n    \"Scikit-learn\",\n    \"TensorFlow\",\n    \"Spark\",\n    \"Hadoop\"\n  ],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"matplotlib\",\n    \"seaborn\",\n    \"D3.js\",\n    \"Excel\"\n  ],\n  \"databases\": [\n    \"MySQL\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"Cassandra\",\n    \"Snowflake\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\",\n    \"GCP\"\n  ],\n  \"key_achievements\": [\n    \"Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.\",\n    \"Increased conversion rates by 28% by implementing an A/B testing framework.\",\n    \"Achieved 94% accuracy in detecting fraudulent transactions using an ensemble learning model.\"\n  ],\n  \"summary\": \"Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":934,"outputTokens":657,"totalTokens":1591}}
2025-06-13 15:10:20 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Machine Learning",
    "Statistical Modeling",
    "Data Visualization",
    "Data Quality Initiatives",
    "A/B Testing Framework",
    "Recommendation Engines",
    "Predictive Modeling",
    "Database Query Optimization",
    "Financial Forecasting",
    "Budgeting",
    "Data Migration",
    "Quality Assurance Testing"
  ],
  "soft_skills": [
    "Innovative",
    "Analytical",
    "Leadership",
    "Communication"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Technology (Computer Science)",
  "years_of_experience": 6,
  "certifications": [
    "AWS Certified Data Analytics Specialty (2024)",
    "Google Professional Data Engineer (2023)",
    "Microsoft Azure Data Scientist Associate (2023)",
    "Tableau Desktop Certified Professional (2022)",
    "Google Analytics Individual Qualification (2022)"
  ],
  "industries": [
    "Tech Startups",
    "MNCs",
    "E-commerce",
    "Global Banking",
    "Retail",
    "Healthcare",
    "Fintech"
  ],
  "programming_languages": [
    "Python",
    "R",
    "SQL",
    "Java",
    "Scala"
  ],
  "frameworks": [
    "Pandas",
    "NumPy",
    "Scikit-learn",
    "TensorFlow",
    "Spark",
    "Hadoop"
  ],
  "tools": [
    "Tableau",
    "Power BI",
    "matplotlib",
    "seaborn",
    "D3.js",
    "Excel"
  ],
  "databases": [
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Cassandra",
    "Snowflake"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure",
    "GCP"
  ],
  "key_achievements": [
    "Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.",
    "Increased conversion rates by 28% by implementing an A/B testing framework.",
    "Achieved 94% accuracy in detecting fraudulent transactions using an ensemble learning model."
  ],
  "summary": "Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency."
}
```
2025-06-13 15:10:20 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Anjali Patel - Data Analyst.pdf
2025-06-13 15:10:20 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Processed candidate: Anjali Patel - Data Analyst.pdf with ID: ddfef07d-b601-4872-8372-f58775a11458
2025-06-13 15:10:20 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Anjali Patel - Data Analyst.pdf (ID: ddfef07d-b601-4872-8372-f58775a11458) in 15684ms
2025-06-13 15:10:20 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:10:20 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Anjali Patel - Data Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, skil (truncated)...]
2025-06-13 15:10:20 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:10:20 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 15:10:20 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 15:10:20 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Processing resume upload: Arjun Singh - Software Developer.pdf
2025-06-13 15:10:22 [http-nio-8081-exec-6] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/c23e8186-22d7-49cf-8954-bc581e5b825d-Arjun Singh - Software Developer.pdf
2025-06-13 15:10:26 [http-nio-8081-exec-6] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/c23e8186-22d7-49cf-8954-bc581e5b825d-Arjun Singh - Software Developer.pdf
2025-06-13 15:10:26 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Professional Summary
Experienced Full Stack Software Developer with 7+ years of
expertise in building scalable web applications and
Arjun Singh
microservices for Indian tech companies and global clients.
Proficient in modern JavaScript frameworks, cloud
Full Stack Developer
technologies, and agile methodologies. Strong track record of
leading development teams and delivering high-quality
arjun.singh@email.com
software solutions that improved system performance by 60%
+91 94567 89012
and reduced deployment time by 45%.
linkedin.com/in/arjunsingh
github.com/arjunsingh
Professional Experience
T
Hyderabad, Telangana, India
Senior Software Developer
TECHNICAL SKILLS
Zomato Limited
Mar 2022 Present
Frontend
React Node.js TypeScript MongoDB Redis AWS Docker
PostgreSQL
Led development of real-time order tracking system serving
Redis
200K+ daily orders
- Built microservices architecture reducing API response time by
55%
LANGUAGES
- Implemented automated testing pipeline achieving 90% code
Hindi
Native
coverage
English
Fluent
- Mentored 4 junior developers and conducted code reviews
Punjabi
Native
Optimized database queries reducing server costs by ₹8 lakh
monthly
Telugu
Conversational
Software Developer
TOOLS & PLATFORMS
PayTM (One97 Communications)
Jan 2020 Feb 2022
Git Docker . Kubernetes Jenkins AWS
Azure Jira Slack vs Code Intelli]
Vue.js
Express.js
MySQL
Python
Django
Jenkins
IDEA Postman Webpack
- Developed payment gateway integration handling 100 crore+
daily transactions
- Created fraud detection algorithms reducing fraudulent
transactions by 40%
- Built responsive wallet interface used by 50M+ active users
- Implemented CI/CD pipelines reducing deployment time from 4
hours to 30 minutes
Junior Software Developer
Mindtree Limited
Jul 2018 Dec 2019
Angular Spring Boot PostgreSQU HTML5 CSS3
- Developed e-commerce modules for US retail client using Angular
and Spring Boot
- Created responsive UI components improving user experience by
35%
T Participated in agile development with 2-week sprint cycles
1 Fixed 200+ bugs and implemented 50+ feature enhancements
Key Projects
Food Delivery
Cryptocurrency
Platform
Trading Bot
Built end-to-end food
Developed automated
delivery platform with real-
trading bot using Python
time tracking, payment
and machine learning
integration, and restaurant
algorithms achieving 15%
management system using
monthly returns in
MERN stack.
backtesting.
React
Node.js
Python TensorFlow
MongoDB
Redis
Education
Bachelor of Technology (Computer Science
Engineering)
Indian Institute of Technology, Hyderabad
2014 2018
Certifications & Achievements
AWS Certified Solutions Architect Associate (2024)
Google Cloud Professional Developer (2023)
MongoDB Certified Developer (2022)
Scrum Master Certified (2021)
Winner Smart India Hackathon 2017 (Government of India)
Open Source Contributor 1000+ GitHub contributions

2025-06-13 15:10:32 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Node.js\",\n    \"TypeScript\",\n    \"MongoDB\",\n    \"Redis\",\n    \"AWS\",\n    \"Docker\",\n    \"PostgreSQL\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"MySQL\",\n    \"Python\",\n    \"Django\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"TensorFlow\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentorship\",\n    \"Team Collaboration\",\n    \"Agile Methodologies\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science Engineering)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect Associate (2024)\",\n    \"Google Cloud Professional Developer (2023)\",\n    \"MongoDB Certified Developer (2022)\",\n    \"Scrum Master Certified (2021)\"\n  ],\n  \"industries\": [\n    \"Technology\",\n    \"E-commerce\",\n    \"Finance\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"HTML5\",\n    \"CSS3\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Node.js\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"Django\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"AWS\",\n    \"Azure\",\n    \"Jira\",\n    \"Slack\",\n    \"VS Code\",\n    \"IntelliJ IDEA\",\n    \"Postman\",\n    \"Webpack\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"Redis\",\n    \"PostgreSQL\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\"\n  ],\n  \"key_achievements\": [\n    \"Improved system performance by 60% and reduced deployment time by 45%\",\n    \"Reduced API response time by 55% through microservices architecture\",\n    \"Achieved 90% code coverage with automated testing pipeline\"\n  ],\n  \"summary\": \"Experienced Full Stack Software Developer with over 7 years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Proven track record of leading development teams and delivering high-quality software solutions.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":937,"outputTokens":663,"totalTokens":1600}}
2025-06-13 15:10:32 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Node.js",
    "TypeScript",
    "MongoDB",
    "Redis",
    "AWS",
    "Docker",
    "PostgreSQL",
    "Vue.js",
    "Express.js",
    "MySQL",
    "Python",
    "Django",
    "Angular",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "TensorFlow"
  ],
  "soft_skills": [
    "Leadership",
    "Mentorship",
    "Team Collaboration",
    "Agile Methodologies"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science Engineering)",
  "years_of_experience": 7,
  "certifications": [
    "AWS Certified Solutions Architect Associate (2024)",
    "Google Cloud Professional Developer (2023)",
    "MongoDB Certified Developer (2022)",
    "Scrum Master Certified (2021)"
  ],
  "industries": [
    "Technology",
    "E-commerce",
    "Finance"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "HTML5",
    "CSS3"
  ],
  "frameworks": [
    "React",
    "Node.js",
    "Vue.js",
    "Express.js",
    "Angular",
    "Spring Boot",
    "Django"
  ],
  "tools": [
    "Git",
    "Docker",
    "Kubernetes",
    "Jenkins",
    "AWS",
    "Azure",
    "Jira",
    "Slack",
    "VS Code",
    "IntelliJ IDEA",
    "Postman",
    "Webpack"
  ],
  "databases": [
    "MongoDB",
    "Redis",
    "PostgreSQL",
    "MySQL"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure"
  ],
  "key_achievements": [
    "Improved system performance by 60% and reduced deployment time by 45%",
    "Reduced API response time by 55% through microservices architecture",
    "Achieved 90% code coverage with automated testing pipeline"
  ],
  "summary": "Experienced Full Stack Software Developer with over 7 years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Proven track record of leading development teams and delivering high-quality software solutions."
}
```
2025-06-13 15:10:32 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Arjun Singh - Software Developer.pdf
2025-06-13 15:10:32 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Processed candidate: Arjun Singh - Software Developer.pdf with ID: fef4a87d-35b9-47f0-8973-edda47b99eb4
2025-06-13 15:10:32 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Arjun Singh - Software Developer.pdf (ID: fef4a87d-35b9-47f0-8973-edda47b99eb4) in 11651ms
2025-06-13 15:10:32 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:10:32 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Arjun Singh - Software Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, (truncated)...]
2025-06-13 15:10:32 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:10:32 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 15:10:32 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 15:10:32 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Processing resume upload: Deepika Reddy - Java Developer.pdf
2025-06-13 15:10:38 [http-nio-8081-exec-8] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/2172da96-cadd-4aec-bc33-6f01212c964a-Deepika Reddy - Java Developer.pdf
2025-06-13 15:10:53 [http-nio-8081-exec-8] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/2172da96-cadd-4aec-bc33-6f01212c964a-Deepika Reddy - Java Developer.pdf
2025-06-13 15:10:53 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Deepika Reddy
Java Developer & Backend Engineer
dccpika.reddy@email .com
H
+91 98712 34567
- linkedin com/1 in/deepikareddy
github.com/deepikareddy
T
Hyderabad, Telangana, India
PROFESSIONAL SUMMARY
TECHNICAL
SKILLS
Dedicated Java Developer with 5+ years of experience in
designing and developing enterprise level applications
CORE JAVA
using Java Spring Framework and microservices
lava I'
Java 11
architecture Expertise in building scalable backend
systems, RESTful APIs, and database integration with
lava OOP Concepts
strong knowledge of software design patterns and best
practices Proven track record of optimizing application
Multithreading
performance and delivering high-quality code in agile
environments
FRAMEWORKS
PROFESSIONAL EXPERIENCE
Spring Boot
Spring MVC
Spring Security
Senior Java Developer
Hibernato
JPA
Accenture Solutions
Jan 2022 Present
Java 17
Spring Boot
Spring Security
Microservices
DATABASES
PostgreSQL
Redis
Docker
Kafka
JUnit
PostgreSQI
MySQI
Developed microservices architecture using Java 17 and Spring
Oracle DB
Redis
Boot serving 500K+ daily transactions
Implemented secure authentication and authorization using
JDBC
Spring Security and JWT tokens
Designed and optimized PostgreSQI database schemas reducing
query execution time by 50%
WEB
Built event driven systems using Apache Kafka for real-time
TECHNOLOGIES
data processing
RESTAI
Implemented Redis caching strategies improving application
response 40%
Microservice
Servlets
Containerized applications using Docker and deployed on
Kubernetes clusters
JSP
SON
Achieved 90% code coverage through compreher sive unit
testing with JUnit and Mockito
TOOLS DEVOPS
Docker Kafka
Java Developer
Mayen Gi
Tomcat
Capgemini India
Mar 2020 Dec 2021
Java 11
Spring MVC
libernato
MySQI
RESTAPI
TESTING
Maven
Git
Unit
Mockito
Buil enterprise web applications using Java 11. Spring MVC.
and Hibernate ORM
Integration Testing
Developed RESTful APIs for frontend consumption and third-
party integrations
Unit Testing
Implemented database operations using Hibernate with MySQL
backend
Used Mayen for project management and dependency resolution
EDUCATION
Collaborated with cross-functional teams using Git for version
control
Participated code reviews and maintained high coding
Bachelor Technology
standards
(Computer Science)
Jawaharlal Nehru
Technological University
2015-2019
Associate Software Engineer
Wipro Technologies
Jul 2019 - Fcb 2020
CERTIFICATIONS
Juya8
Servlets
JSP
JDBC
Oracle
Tomcat
Oracle Certified Professional Java
Developed web applications using Java Servlets, and ISP
SE
technologies
Implemented database connectivity using JDBC with Oracle
Spring Professional Certification
database
Deployed applications on Apache Tomcat server
AWS Certified Developer
Fixed bugs and implemented feature enhancements based on
Associate
client requirements
Learned enterprise development practices and coding standards
Docker Certified Associate
Apache Kafka Developer
FEATURED PROJECTS
Microservice Architecture
LANGUAGES
Banking
E-Commerce Order
Microservices
Management
Platform
Telugu: Native
Java II
Spring MVC
Hindi: Fluent
Java 17
Spring Boot
libernate
MySQL
English: Fluent
PostgreSQ1
Redis
Tamil: Basic
RESTAPI
Kafka
Docker
Built order management
system using Java and
KEY
Architected prehensive
banki platform using
Spring MVC framework
ACHIEVEMENTS
microservices with Java 17
Implemented Hibernate for
and Spring Boot Implemented
ORM mapping with MySQL
database created REST APIs
PostgreSQL data
. performance improvement
persistence Redis caching
for order processing and
database queries
and Kalka for event streaming
integrated payment gateway
90% coverage
testing
Containerized services using
services
Led team of developers
500K daily transactions handled
Docker scalable
Zero production bugs in last months
deployment
Employee
Inventory Tracking
Management stem
API
Java 8
Servlets
Spring Boot
JSP
JDBC
Spring Security
JUnit
Oracle DB
Mockito
Mayen
Developed employee
Created REST for
management application using
inventory management using
Java with Servlets JSP
Spring Spring
for interface Used JDBC
Security authentication
for database operations with
Implemented comprehensive
Oracle backend implemented
testing with JUnit and
CRU D operations and
Mockito managed project
employee reporting features
dependencies with Mayen
build tool

2025-06-13 15:11:00 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Java 11\",\n    \"Java OOP Concepts\",\n    \"Multithreading\",\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\",\n    \"RESTful APIs\",\n    \"Microservices\",\n    \"Servlets\",\n    \"JSP\",\n    \"JDBC\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Maven\",\n    \"Git\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\",\n    \"SQL\",\n    \"NoSQL\",\n    \"JSON\",\n    \"XML\",\n    \"CI/CD\",\n    \"Agile methodologies\"\n  ],\n  \"soft_skills\": [\n    \"Team collaboration\",\n    \"Problem-solving\",\n    \"Code optimization\",\n    \"Project management\",\n    \"Leadership\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"Oracle Certified Professional Java SE\",\n    \"Spring Professional Certification\",\n    \"AWS Certified Developer Associate\",\n    \"Docker Certified Associate\",\n    \"Apache Kafka Developer\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\",\n    \"Inventory Management\"\n  ],\n  \"programming_languages\": [\n    \"Java 11\",\n    \"Java 17\",\n    \"SQL\"\n  ],\n  \"frameworks\": [\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\"\n  ],\n  \"tools\": [\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\",\n    \"Tomcat\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"Oracle DB\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions\",\n    \"Designed and optimized PostgreSQL database schemas reducing query execution time by 50%\",\n    \"Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito\"\n  ],\n  \"summary\": \"Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1286,"outputTokens":674,"totalTokens":1960}}
2025-06-13 15:11:00 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Java 11",
    "Java OOP Concepts",
    "Multithreading",
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA",
    "RESTful APIs",
    "Microservices",
    "Servlets",
    "JSP",
    "JDBC",
    "JUnit",
    "Mockito",
    "Maven",
    "Git",
    "Docker",
    "Kafka",
    "Kubernetes",
    "SQL",
    "NoSQL",
    "JSON",
    "XML",
    "CI/CD",
    "Agile methodologies"
  ],
  "soft_skills": [
    "Team collaboration",
    "Problem-solving",
    "Code optimization",
    "Project management",
    "Leadership"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 5,
  "certifications": [
    "Oracle Certified Professional Java SE",
    "Spring Professional Certification",
    "AWS Certified Developer Associate",
    "Docker Certified Associate",
    "Apache Kafka Developer"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce",
    "Inventory Management"
  ],
  "programming_languages": [
    "Java 11",
    "Java 17",
    "SQL"
  ],
  "frameworks": [
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA"
  ],
  "tools": [
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Docker",
    "Kafka",
    "Kubernetes",
    "Tomcat"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "Oracle DB",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions",
    "Designed and optimized PostgreSQL database schemas reducing query execution time by 50%",
    "Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito"
  ],
  "summary": "Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices."
}
```
2025-06-13 15:11:00 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Deepika Reddy - Java Developer.pdf
2025-06-13 15:11:00 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Processed candidate: Deepika Reddy - Java Developer.pdf with ID: efee760d-8301-4a3d-b9ba-45a8e63158cd
2025-06-13 15:11:00 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Deepika Reddy - Java Developer.pdf (ID: efee760d-8301-4a3d-b9ba-45a8e63158cd) in 27945ms
2025-06-13 15:11:00 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:11:00 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Deepika Reddy - Java Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, s (truncated)...]
2025-06-13 15:11:00 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:11:00 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 15:11:00 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 15:11:00 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Processing resume upload: Karan Singh - DevOps Engineer.pdf
2025-06-13 15:11:09 [http-nio-8081-exec-9] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/c2f34028-3e47-428d-b17f-7d6d7199bdf0-Karan Singh - DevOps Engineer.pdf
2025-06-13 15:11:23 [http-nio-8081-exec-9] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/c2f34028-3e47-428d-b17f-7d6d7199bdf0-Karan Singh - DevOps Engineer.pdf
2025-06-13 15:11:23 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
karan.singh@email.com
+91 97531 86420
Karan Singh
DevOps Engineer & Cloud Architect
linkedin.com/in/karansingh
STATUS: ACTIVE UPTIME: 5+ YEARS I DEPLOYMENTS: 1000+
in github.com/karansingh
o
Gurgaon, Haryana, India
$ cat professional_summary.txt
TECHNICAL ARSENAL
CLOUD PLATFORMS
Experienced DevOps Engineer with 5+ years of expertise in automating
AWS EC2
AWS EKS
AWS RDS
AWS
deployment pipelines, managing cloud infrastructure. and orchestrating
AWS CloudWatch
AWS CodePipeline
AWS CLI
containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD
automation with strong background in Infrastructure as Code and monitoring
solutions Proven track record of reducing deployment time by 80% and
CONTAINERIZATION
improving system reliability to 99.9% uptime through robust DevOps practices.
Docker
Kubernetes
Docker Swarm
Helm
Container Registry
$ grep -r "experience" /career/history
CI/CD TOOLS
[PROCESS]
Jenkins
GitLab
GitHub Actions
Git
Maven
Senior DevOps Engineer
SonarQub
Paytm (One97 Communications)
Jan 2022 Present
AWS
Kubernetes
Docker
Jenkins
Terraform
Ansible
Prometheus
Grafana
ELK Stack
INFRASTRUCTURE AS CODE
Architected AWS cloud infrastructure using Terraform managing 100+ EC2 instances
Terraform
Ansible
CloudFormation
YAML
JSON
and RDS clusters
Implemented Kubernetes orchestration for microservices serving 50M+ daily
transactions
MONITORING LOGGING
Built Jenkins CI/CD pipelines reducing deployment time from 4 hours to 30 minutes
Prometheus
Grafana
ELK Stack
Alertmanager
Elasticsearch
Kibana
Configured monitoring stack using Prometheus and Grafana achieving 99.9% uptime SLA
Automated infrastructure provisioning using Ansible playbooks saving 20 hours/week
Implemented ELK Stack for centralized logging and real-time log analysis
SYSTEM ADMINISTRATION
Managed Docker container registry and optimized image sizes by 60%
Linux
Shell Scripting
Nainx
Apache
Tomcat
Redis
[PROCESS]
# PERFORMANCE METRICS
DevOps Engineer
Nagarro Software
Mar 2021 Dec 2021
99.9%
80%
AWS EC2
Docker Swarm
GitLab CI
CloudFormation
Nginx
Redis
SYSTEMUPTIME
DEPLOY TIME REDUCTION
Deployed applications on AWS EC2 using Docker Swarm for container orchestration
1000+
100+
Created GitLab CT pipelines for automated testing and deployment processes
DEPLOYMENTS
EC2 INSTANCES
Implemented infrastructure using AWS CloudFormation templates
Configured Nginx load balancers for high availability and traffic distribution
# SYSTEM CONFIGURATION
Set up Redis clusters for caching and session management
Optimized application performance resulting in 40% faster response times
Bachelor of Technology (Information
Technology)
Guru Gobind Singh Indraprastha University
2016 2020
[PROCESS]
Junior DevOps Engineer
# SECURITY CERTIFICATES
Mindtree Limited
Jun 2020 Feb 2021
Linux
Shell Scripting
Git
Mayer
Tomcat
AWS Certified DevOps Engineer Professional
Managed Linux servers and wrote Shell scripts for automation tasks
Certified Kubernetes Administrator (CKA)
Implemented Git workflows and branching strategies for development teams
Docker Certified Associate
Configured Mayen build processes for Java applications
Terraform Associate Certification
Deployed applications on Apache Tomcat servers
Learned infrastructure management and deployment best practices
Jenkins Certified Engineer
AWS Solutions Architect Associate
Prometheus Certified Associate
$ ls -la /projects/featured
LANGUAGE SUPPORT
[PROJECT]
[PROJECT]
Microservices Platform
CI/CD Automation Pipeline
Hindi: Native
Kubernetes
Docker
AWS EKS
Terraform
Jenkins
GitLab
Docker
English: Fluent
Helm
AWS CodePipeline
SonarQube
Punjabi: Native
Urdu: Conversational
Built scalable microservices platform on
Implemented end-to-end CI/CD pipeline
AWS EKS using Kubernetes and Docker.
using Jenkins and GitLab CI with Docker
Automated infrastructure deployment with
containerization. Integrated AWS
ADDITIONAL MODULES
Terraform and managed application
CodePipeline for cloud-native deployments
deployments using Helm charts for
and SonarQube for code quality analysis.
Microservices Architecture
consistent and reliable releases.
Site Reliability Engineering
cloud Security Best Practices
Disaster Recovery Planning
Cost Optimization Strategies
Agile DevOps Methodologies
[PROJECT]
[PROJECT]
Infrastructure Monitoring
Infrastructure as Code
SYSTEM STATUS
Prometheus
Grafana
ELK Stack
Terraform
Ansible
CloudFormation
AWS CloudWatch
Alertmanager
Shell Scripting
AWS CLI
OPERATIONAL: All systems running
MONITORING: Active 24/7
BACKUP: Automated daily
Set up comprehensive monitoring solution
Automated infrastructure provisioning
SECURITY Enhanced protection
PERFORMANCE: Optimized
using Prometheus and Grafana with ELK
using Terraform and Ansible with AWS
Stack for log aggregation. Configured AWS
CloudFormation. Created Shell scripts and
CloudWatch and Alertmanager for proactive
AWS CLI automation for infrastructure
incident management
management and deployment processes.

2025-06-13 15:11:40 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"AWS EC2\",\n    \"AWS EKS\",\n    \"AWS RDS\",\n    \"AWS CloudWatch\",\n    \"AWS CodePipeline\",\n    \"AWS CLI\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Docker Swarm\",\n    \"Helm\",\n    \"Container Registry\",\n    \"Jenkins\",\n    \"GitLab\",\n    \"GitHub Actions\",\n    \"Git\",\n    \"Maven\",\n    \"SonarQub\",\n    \"Terraform\",\n    \"Ansible\",\n    \"Prometheus\",\n    \"Grafana\",\n    \"ELK Stack\",\n    \"CloudFormation\",\n    \"YAML\",\n    \"JSON\",\n    \"Linux\",\n    \"Shell Scripting\",\n    \"Nginx\",\n    \"Apache\",\n    \"Tomcat\",\n    \"Redis\",\n    \"Alertmanager\",\n    \"Elasticsearch\",\n    \"Kibana\"\n  ],\n  \"soft_skills\": [\n    \"Agile DevOps Methodologies\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Information Technology)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified DevOps Engineer Professional\",\n    \"Certified Kubernetes Administrator (CKA)\",\n    \"Docker Certified Associate\",\n    \"Terraform Associate Certification\",\n    \"Jenkins Certified Engineer\",\n    \"AWS Solutions Architect Associate\",\n    \"Prometheus Certified Associate\"\n  ],\n  \"industries\": [\n    \"IT\",\n    \"Software Development\",\n    \"Cloud Computing\"\n  ],\n  \"programming_languages\": [\n    \"Shell Scripting\"\n  ],\n  \"frameworks\": [\n    \"Kubernetes\",\n    \"Docker Swarm\",\n    \"Helm\"\n  ],\n  \"tools\": [\n    \"Jenkins\",\n    \"GitLab\",\n    \"GitHub Actions\",\n    \"Git\",\n    \"Maven\",\n    \"SonarQub\",\n    \"Terraform\",\n    \"Ansible\",\n    \"Prometheus\",\n    \"Grafana\",\n    \"ELK Stack\",\n    \"CloudFormation\",\n    \"YAML\",\n    \"JSON\",\n    \"Nginx\",\n    \"Apache\",\n    \"Tomcat\",\n    \"Redis\",\n    \"Alertmanager\",\n    \"Elasticsearch\",\n    \"Kibana\",\n    \"AWS CLI\"\n  ],\n  \"databases\": [\n    \"AWS RDS\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Reduced deployment time by 80%\",\n    \"Improved system reliability to 99.9% uptime\",\n    \"Optimized Docker image sizes by 60%\"\n  ],\n  \"summary\": \"Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of reducing deployment time and improving system reliability.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1431,"outputTokens":758,"totalTokens":2189}}
2025-06-13 15:11:40 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "AWS EC2",
    "AWS EKS",
    "AWS RDS",
    "AWS CloudWatch",
    "AWS CodePipeline",
    "AWS CLI",
    "Docker",
    "Kubernetes",
    "Docker Swarm",
    "Helm",
    "Container Registry",
    "Jenkins",
    "GitLab",
    "GitHub Actions",
    "Git",
    "Maven",
    "SonarQub",
    "Terraform",
    "Ansible",
    "Prometheus",
    "Grafana",
    "ELK Stack",
    "CloudFormation",
    "YAML",
    "JSON",
    "Linux",
    "Shell Scripting",
    "Nginx",
    "Apache",
    "Tomcat",
    "Redis",
    "Alertmanager",
    "Elasticsearch",
    "Kibana"
  ],
  "soft_skills": [
    "Agile DevOps Methodologies"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Information Technology)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified DevOps Engineer Professional",
    "Certified Kubernetes Administrator (CKA)",
    "Docker Certified Associate",
    "Terraform Associate Certification",
    "Jenkins Certified Engineer",
    "AWS Solutions Architect Associate",
    "Prometheus Certified Associate"
  ],
  "industries": [
    "IT",
    "Software Development",
    "Cloud Computing"
  ],
  "programming_languages": [
    "Shell Scripting"
  ],
  "frameworks": [
    "Kubernetes",
    "Docker Swarm",
    "Helm"
  ],
  "tools": [
    "Jenkins",
    "GitLab",
    "GitHub Actions",
    "Git",
    "Maven",
    "SonarQub",
    "Terraform",
    "Ansible",
    "Prometheus",
    "Grafana",
    "ELK Stack",
    "CloudFormation",
    "YAML",
    "JSON",
    "Nginx",
    "Apache",
    "Tomcat",
    "Redis",
    "Alertmanager",
    "Elasticsearch",
    "Kibana",
    "AWS CLI"
  ],
  "databases": [
    "AWS RDS",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Reduced deployment time by 80%",
    "Improved system reliability to 99.9% uptime",
    "Optimized Docker image sizes by 60%"
  ],
  "summary": "Experienced DevOps Engineer with 5+ years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of reducing deployment time and improving system reliability."
}
```
2025-06-13 15:11:40 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Karan Singh - DevOps Engineer.pdf
2025-06-13 15:11:40 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Processed candidate: Karan Singh - DevOps Engineer.pdf with ID: a7f80ebd-b8d8-4116-9ce6-0add02d7be94
2025-06-13 15:11:40 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Karan Singh - DevOps Engineer.pdf (ID: a7f80ebd-b8d8-4116-9ce6-0add02d7be94) in 39924ms
2025-06-13 15:11:40 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:11:40 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Karan Singh - DevOps Engineer.pdf, success=true, extractedData={experienceLevel=SENIOR, sk (truncated)...]
2025-06-13 15:11:40 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:11:40 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 15:11:40 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 15:11:40 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Processing resume upload: Kavya Nair - Full Stack Developer.pdf
2025-06-13 15:11:45 [http-nio-8081-exec-10] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/5c08a393-beb8-4e4d-9763-d7ca46e91759-Kavya Nair - Full Stack Developer.pdf
2025-06-13 15:11:57 [http-nio-8081-exec-10] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/5c08a393-beb8-4e4d-9763-d7ca46e91759-Kavya Nair - Full Stack Developer.pdf
2025-06-13 15:11:57 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
+91 98765 12345
Full Stack Developer
linkedin com/in/kavyanair
"Building scalable web solutions with modern technologies'
github.com/kavyanair
9
Kochi. Kerala India
PROFESSIONAL SUMMARY
TECHNICAL
ARSENAL
Passionate Full Stack Developer with 5+ years of experience
FRONTEND
building robust web applications using modern JavaScript
React
Vue.js
Angular
frameworks and cloud technologies. Expertise in React, Node.js,
TypeScript
JavaScript
Python, and AWS with a strong focus on creating scalable,
HTML5
CSS3
maintainable solutions. Proven track record of leading development
teams and delivering high-quality software that serves 100K+ users
daily.
BACKEND
Node.js
Express.js
Python
Django
Java
Spring Boot
PROFESSIONAL EXPERIENCE
DATABASES
PostgreSQL
MySQL
Senior Full Stack Developer
MongoDB
Redis
Oracle DE
Freshworks Inc.
Mar 2022 Present
React
TypeScript
Node.js
Express.js
PostgreSQL
Redis
AWS
Docker
CLOUD DEVOPS
Kubernetes
AWS
Docker
Kubernetes
Architected and developed microservices using Node js and Express.js
Jenkins
GitHub Actions
serving 100K+ daily active users
Built responsive React applications with TypeScript ensuring type safety and
maintainable code
APIS TOOLS
Optimized PostgreSQL database queries and implemented Redis caching
REST APIs
GraphQL
reducing API response time by 60%
Socket.ic
JWT
WebRTC
Deployed applications on AWS using Docker containers and Kubernetes
Chart.js
JUnit
Swagger
orchestration
Led team of developers and mentored junior developers in best practices
Implemented CI/CD pipelines using Jenkins and GitHub Actions reducing
EDUCATION
deployment time by 50%
Master of Computer
Applications (MCA)
Cochin University of Science &
Technology
Full Stack Developer
2017 2019
Zoho Corporation
Jan 2020 Feb 2022
Vue.js
Python
Django
MySQL
MongoDB
REST APIs
GraphQL
Bachelor of Science
(Computer Science)
Developed enterprise CRM features using Vue js frontend and Python Django
University of Kerala
backend
2014 2017
Created RESTful APIs and GraphQL endpoints handling 50K+ requests per
hour
Designed and implemented database schemas in MySQL and MongoDB for
CERTIFICATIONS
optimal performance
Integrated third-party services and APIs for email marketing and analytics
AWS Certified Solutions Architect
functionality
Participated in code reviews and maintained high code quality standards
MongoDB Certified Developer
React Professional Certificate
Node.js Application Developer
Software Developer
Docker Certified Associate
UST Global
Jun 2019 Dec 2019
Kubernetes Administrator
Angular
Java
Spring Boot
Oracle DB
JUnit
Built banking applications using Angular frontend and Java Spring Boot
backend
LANGUAGES
Implemented secure user authentication and authorization using Spring
Security
Malayalam: Native
Developed unit tests using JUnit achieving 85% code coverage
English: Fluent
Hindi: Conversational
Worked with Oracle databases and optimized complex SQL queries
Tamil: Basic
FEATURED PROJECTS
Social Media Analytics
E-Learning Management
Platform
System
React Node.js MongoDB
Vue.js Python Django
Redis Chart.js AWS
PostgreSQL WebRTC
Developed comprehensive social
Built an online learning platform with
media analytics dashboard using
Vue. js frontend and Django backend
React and Chart. js for data
Integrated video conferencing using
visualization. Built scalable backend
WebRTC, implemented course
with Node.js and MongoDB,
management features, and used
implemented Redis for caching, and
PostgreSQL for data storage with
deployed on AWS with auto-scaling
automated backups.
capabilities.
Real-time Chat Application
Inventory Management API
TypeScript Socket.io Express.js
Java
Spring Boot MySQL
JWT
Docker
JUnit
Swagger
Created real-time messaging
Developed RESTful API for inventory
application using Socket io for
management using Java Spring Boot
WebSocket communication and
and MySQL Created comprehensive
TypeScript for type safety.
API documentation with Swagger,
Implemented JWT authentication,
implemented unit testing with JUnit,
built with Express js backend and
and added data validation and error
containerized using Docker for easy
handling.
deployment.

2025-06-13 15:12:06 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"Python\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Java\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"REST APIs\",\n    \"GraphQL\",\n    \"Socket.io\",\n    \"JWT\",\n    \"WebRTC\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"Swagger\",\n    \"Spring Security\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Code Quality Standards\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Computer Applications (MCA)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect\",\n    \"MongoDB Certified Developer\",\n    \"React Professional Certificate\",\n    \"Node.js Application Developer\",\n    \"Docker Certified Associate\",\n    \"Kubernetes Administrator\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"CRM\",\n    \"Banking\",\n    \"Analytics\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Spring Boot\"\n  ],\n  \"tools\": [\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"GitHub Actions\",\n    \"Swagger\",\n    \"Chart.js\",\n    \"JUnit\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"MongoDB\",\n    \"Redis\",\n    \"Oracle DB\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Architected and developed microservices serving 100K+ daily active users\",\n    \"Optimized PostgreSQL database queries reducing API response time by 60%\",\n    \"Implemented CI/CD pipelines reducing deployment time by 50%\"\n  ],\n  \"summary\": \"Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1215,"outputTokens":667,"totalTokens":1882}}
2025-06-13 15:12:06 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Vue.js",
    "Angular",
    "TypeScript",
    "JavaScript",
    "Python",
    "Node.js",
    "Express.js",
    "Django",
    "Java",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "REST APIs",
    "GraphQL",
    "Socket.io",
    "JWT",
    "WebRTC",
    "Chart.js",
    "JUnit",
    "Swagger",
    "Spring Security"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Code Quality Standards"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Computer Applications (MCA)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified Solutions Architect",
    "MongoDB Certified Developer",
    "React Professional Certificate",
    "Node.js Application Developer",
    "Docker Certified Associate",
    "Kubernetes Administrator"
  ],
  "industries": [
    "Software Development",
    "CRM",
    "Banking",
    "Analytics"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "Java"
  ],
  "frameworks": [
    "React",
    "Vue.js",
    "Angular",
    "Node.js",
    "Express.js",
    "Django",
    "Spring Boot"
  ],
  "tools": [
    "Docker",
    "Kubernetes",
    "Jenkins",
    "GitHub Actions",
    "Swagger",
    "Chart.js",
    "JUnit"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "MongoDB",
    "Redis",
    "Oracle DB"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Architected and developed microservices serving 100K+ daily active users",
    "Optimized PostgreSQL database queries reducing API response time by 60%",
    "Implemented CI/CD pipelines reducing deployment time by 50%"
  ],
  "summary": "Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software that serves 100K+ users daily."
}
```
2025-06-13 15:12:06 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Kavya Nair - Full Stack Developer.pdf
2025-06-13 15:12:06 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Processed candidate: Kavya Nair - Full Stack Developer.pdf with ID: a2ed0926-725b-45a6-9d09-50e3dcb4b866
2025-06-13 15:12:06 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Kavya Nair - Full Stack Developer.pdf (ID: a2ed0926-725b-45a6-9d09-50e3dcb4b866) in 26412ms
2025-06-13 15:12:06 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:12:06 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Kavya Nair - Full Stack Developer.pdf, success=true, extractedData={experienceLevel=SENIOR (truncated)...]
2025-06-13 15:12:06 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:12:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 15:12:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 15:12:06 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Processing resume upload: Mei Chen - Marketing Analyst.pdf
2025-06-13 15:12:19 [http-nio-8081-exec-1] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/0406bd75-6ec6-4b5a-ab6d-cd03958d1186-Mei Chen - Marketing Analyst.pdf
2025-06-13 15:12:29 [http-nio-8081-exec-1] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/0406bd75-6ec6-4b5a-ab6d-cd03958d1186-Mei Chen - Marketing Analyst.pdf
2025-06-13 15:12:29 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Mei Chen
Marketing Analyst & Growth Strategist
mei.chen@email.com
+65 9876 5432
linkedin .com/in/meichen
Singapore
PROFESSIONAL SUMMARY
Core Skills
Data Analytics
95%
Data-driven Marketing Analyst with 6+ years of experience in
SQL & Python
90%
digital marketing analytics and customer insights across Asia-
Tableau & Power BI
88%
Pacific markets. Expert in transforming complex data into
actionable marketing strategies that drove 45% increase in ROI
Google Analytics
92%
and 35% growth in customer acquisition. Specialized in cross-
cultural marketing campaigns and multilingual market analysis.
A/B Testing
85%
Languages
PROFESSIONAL EXPERIENCE
Mandarin
English
Native
Fluent
Senior Marketing Analyst
Hindi
Shopee Singapore
Jan 2022 Present
Malay
Conversational
Basic
Analyzed user behavior data from 8 Southeast Asian markets with
100M+ active users
Developed attribution models improving campaign ROI
Education
measurement accuracy by 50%
Led A/B testing initiatives across mobile and web platforms with
28% conversion improvement
Master of Science in
Marketing Analytics
Created automated dashboards reducing manual reporting time by
National University of
75%
Singapore
2016 2018
Managed marketing analytics for flash sales generating S$50M+
revenue
Bachelor of Business
Administration
Nanyang Technological
University
Marketing Data Analyst
2012 2016
Grab Holdings
Mar 2020 Dec 2021
Performed cohort analysis for ride-hailing and food delivery
services across 6 countries
Certifications
Built predictive models for customer lifetime value with 89%
accuracy
Google Analytics 4 Certified
Optimized marketing spend allocation reducing CAC by 30%
across all verticals
Facebook Blueprint Certified
Conducted market research for new service launches in emerging
markets
Tableau Desktop Specialist
AWS Cloud Practitioner
Junior Marketing Analyst
Google Ads Certified
ByteDance (TikTok)
Jun 2018 Feb 2020
Analyzed viral content patterns and user engagement metrics for
HubSpot Marketing Analytics
APAC region
Created weekly performance reports for marketing campaigns
across 12 markets
Supported influencer marketing ROI analysis and campaign
optimization
Assisted in competitive analysis and market positioning strategies

2025-06-13 15:12:44 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Data Analytics\",\n    \"SQL\",\n    \"Python\",\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\",\n    \"A/B Testing\",\n    \"Predictive Modeling\",\n    \"Marketing Spend Allocation\",\n    \"Market Research\"\n  ],\n  \"soft_skills\": [\n    \"Cross-cultural Marketing\",\n    \"Multilingual Market Analysis\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Science in Marketing Analytics\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"Google Analytics 4 Certified\",\n    \"Facebook Blueprint Certified\",\n    \"Tableau Desktop Specialist\",\n    \"AWS Cloud Practitioner\",\n    \"Google Ads Certified\",\n    \"HubSpot Marketing Analytics\"\n  ],\n  \"industries\": [\n    \"Digital Marketing\",\n    \"E-commerce\",\n    \"Ride-hailing\",\n    \"Food Delivery\",\n    \"Social Media\"\n  ],\n  \"programming_languages\": [\n    \"SQL\",\n    \"Python\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Drove 45% increase in ROI and 35% growth in customer acquisition.\",\n    \"Improved campaign ROI measurement accuracy by 50%.\",\n    \"Achieved 28% conversion improvement through A/B testing initiatives.\"\n  ],\n  \"summary\": \"Data-driven Marketing Analyst with over 6 years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":751,"outputTokens":462,"totalTokens":1213}}
2025-06-13 15:12:44 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Data Analytics",
    "SQL",
    "Python",
    "Tableau",
    "Power BI",
    "Google Analytics",
    "A/B Testing",
    "Predictive Modeling",
    "Marketing Spend Allocation",
    "Market Research"
  ],
  "soft_skills": [
    "Cross-cultural Marketing",
    "Multilingual Market Analysis"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Science in Marketing Analytics",
  "years_of_experience": 6,
  "certifications": [
    "Google Analytics 4 Certified",
    "Facebook Blueprint Certified",
    "Tableau Desktop Specialist",
    "AWS Cloud Practitioner",
    "Google Ads Certified",
    "HubSpot Marketing Analytics"
  ],
  "industries": [
    "Digital Marketing",
    "E-commerce",
    "Ride-hailing",
    "Food Delivery",
    "Social Media"
  ],
  "programming_languages": [
    "SQL",
    "Python"
  ],
  "frameworks": [],
  "tools": [
    "Tableau",
    "Power BI",
    "Google Analytics"
  ],
  "databases": [],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Drove 45% increase in ROI and 35% growth in customer acquisition.",
    "Improved campaign ROI measurement accuracy by 50%.",
    "Achieved 28% conversion improvement through A/B testing initiatives."
  ],
  "summary": "Data-driven Marketing Analyst with over 6 years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis."
}
```
2025-06-13 15:12:44 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Mei Chen - Marketing Analyst.pdf
2025-06-13 15:12:44 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Processed candidate: Mei Chen - Marketing Analyst.pdf with ID: c8d65b5d-efd8-4876-bd93-d358e90867b0
2025-06-13 15:12:44 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Mei Chen - Marketing Analyst.pdf (ID: c8d65b5d-efd8-4876-bd93-d358e90867b0) in 37616ms
2025-06-13 15:12:44 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:12:44 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Mei Chen - Marketing Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, ski (truncated)...]
2025-06-13 15:12:44 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:12:44 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 15:12:44 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 15:12:44 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Processing resume upload: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 15:12:48 [http-nio-8081-exec-2] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/61636d1c-ec05-48d7-af94-f96da3d16942-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 15:13:01 [http-nio-8081-exec-2] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/61636d1c-ec05-48d7-af94-f96da3d16942-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 15:13:01 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
PROFESSIONAL SUMMARY
Results-oriented Sales & Marketing professional with 7+
years of experience in the Indian market, specializing in
digital marketing strategies and B2B sales. Proven track
Priya Sharma
record of increasing revenue by 40% and expanding
market presence across Tier 1 and Tier 2 cities. Expert in
Sales & Marketing Professional
managing multi-channel campaigns and building long-term
client relationships in competitive markets.
Contact
priya.sharma@email.com
PROFESSIONAL EXPERIENCE
+91 98765 43210
Senior Marketing Manager
linkedin.com/in/priyasharma
Tata Digital Solutions
Jan 2021 Present
Mumbai, Maharashtra, India
Led digital marketing initiatives for pan-India market expansion,
Core Skills
reaching 15+ states
Managed ₹50 lakh annual marketing budget with 35% ROI
Lead Generation
improvement
Developed localized campaigns for regional markets increasing
Digital Marketing
engagement by 60%
Built strategic partnerships with 25+ B2B clients across various
CRM Management
industries
Campaign Strategy
Implemented CRM system reducing sales cycle time by 30%
Analytics
Marketing Executive
Languages
Reliance Industries Ltd
Mar 2019 Dec 2020
Executed social media strategies achieving 2M+ followers across
Hindi (Native)
platforms
English (Fluent)
Coordinated trade shows and exhibitions in Mumbai, Delhi, and
Bangalore
Marathi (Native)
Managed vendor relationships and negotiated contracts saving
₹15 lakh annually
Certifications
Created content marketing strategy increasing website traffic by
150%
Google Ads Certified Professional
HubSpot Inbound Marketing
Salesforce Administrator
Sales Associate
Digital Marketing Institute
Wipro Technologies
Jun 2017 Feb 2019
Achieved 125% of sales targets consistently across Western
India region
Built client database of 200+ prospects through cold calling and
networking
Participated in 10+ industry conferences and generated 50+
qualified leads
EDUCATION
Master of Business Administration (Marketing)
Indian Institute of Management, Ahmedabad
2015 2017
Bachelor of Commerce
University of Mumbai
2012 2015

2025-06-13 15:13:05 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\"Lead Generation\", \"Digital Marketing\", \"CRM Management\", \"Campaign Strategy\", \"Analytics\"],\n  \"soft_skills\": [\"Managing multi-channel campaigns\", \"Building long-term client relationships\"],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Marketing)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\"Google Ads Certified Professional\", \"HubSpot Inbound Marketing\", \"Salesforce Administrator\"],\n  \"industries\": [\"Digital Solutions\", \"Reliance Industries\", \"Wipro Technologies\"],\n  \"programming_languages\": [],\n  \"frameworks\": [],\n  \"tools\": [\"CRM system\"],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities\",\n    \"Managed ₹50 lakh annual marketing budget with 35% ROI improvement\",\n    \"Executed social media strategies achieving 2M+ followers across platforms\"\n  ],\n  \"summary\": \"Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market, specializing in digital marketing strategies and B2B sales. Proven track record of increasing revenue by 40% and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":722,"outputTokens":320,"totalTokens":1042}}
2025-06-13 15:13:05 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": ["Lead Generation", "Digital Marketing", "CRM Management", "Campaign Strategy", "Analytics"],
  "soft_skills": ["Managing multi-channel campaigns", "Building long-term client relationships"],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Marketing)",
  "years_of_experience": 7,
  "certifications": ["Google Ads Certified Professional", "HubSpot Inbound Marketing", "Salesforce Administrator"],
  "industries": ["Digital Solutions", "Reliance Industries", "Wipro Technologies"],
  "programming_languages": [],
  "frameworks": [],
  "tools": ["CRM system"],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities",
    "Managed ₹50 lakh annual marketing budget with 35% ROI improvement",
    "Executed social media strategies achieving 2M+ followers across platforms"
  ],
  "summary": "Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market, specializing in digital marketing strategies and B2B sales. Proven track record of increasing revenue by 40% and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships."
}
```
2025-06-13 15:13:05 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 15:13:05 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Processed candidate: Priya Sharma - Sales & Marketing Professional.pdf with ID: 3811b357-7cd3-4bcf-93e3-45bcdd89f98a
2025-06-13 15:13:05 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Priya Sharma - Sales & Marketing Professional.pdf (ID: 3811b357-7cd3-4bcf-93e3-45bcdd89f98a) in 20854ms
2025-06-13 15:13:05 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:13:05 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Priya Sharma - Sales & Marketing Professional.pdf, success=true, extractedData={experience (truncated)...]
2025-06-13 15:13:05 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:13:05 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 15:13:05 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 15:13:05 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Processing resume upload: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 15:13:07 [http-nio-8081-exec-3] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/c2dcfd74-c498-4322-9d84-c2db2405dfcc-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 15:13:11 [http-nio-8081-exec-3] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/c2dcfd74-c498-4322-9d84-c2db2405dfcc-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 15:13:11 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Rajesh Kumar
Demand Planning Specialist
rajesh kumar@email.com
+91 98765 54321
linkedin.com/in/rajeshkumar
T
Pune, Maharashtra, India
Professional Summary
Strategic Demand Planning professional with 8+ years of experience in supply chain
optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting,
inventory management, and S&OP processes with proven track record of improving forecast
accuracy by 45% and reducing inventory costs by ₹2.5 crores annually. Skilled in implementing
demand planning solutions for multi-location operations across India.
Professional Experience
O
Senior Demand Planning Manager
Apr 202 Present
Hindustan Unilever Limited
Lead demand planning for 800+ SKUs across North and West India regions
Improved forecast accuracy from 72% to 91% using advanced analytics and ML models
Reduced excess inventory by ₹1.8 crores through enhanced demand sensing
Led S&OP implementation across 8 manufacturing locations
Managed cross-functional teams of 15+ members across supply chain functions
Implemented SAP IBP resulting in 40% reduction in planning cycle time
Demand Planner
Jun 2019 Mar 2021
ITC Limited
Managed demand planning for cigarettes and FMCG portfolio worth ₹500 crores
Developed statistical models for seasonal demand patterns using R and Python
Collaborated with marketing teams for promotional planning and new product launches
Reduced stockout incidents by 35% through improved demand sensing
Created automated dashboards using Power BI for executive reporting
Supply Chain Analyst
Jul 2017 May 2019
Mahindra & Mahindra
Supported inventory optimization for automotive spare parts across 200+ dealers
Performed root cause analysis on forecast variances and implemented corrections
Created Excel-based planning tools reducing manual effort by 60%
Assisted in vendor collaboration initiatives improving supplier fill rates
Core Competencies
Planning & Forecasting
Technology & Tools
Statistical Forecasting
Demand Sensing
SAP IBP/APO
Oracle Demantra
Power BI
S&OP
Inventory Optimization
Advanced Excel
Python
R Programming
Collaborative Planning
Industry Knowledge
FMCG
Automotive
Manufacturing
Retail
Multi- location Ops
Education & Certifications
Master of Business Administration (Operations)
Indian Institute of Management, Kozhikode
2015 2017
Bachelor of Engineering (Mechanical)
Pune University
2011 2015
Certifications
APICS SCOR Certified CPIM Certified SAP IBP Certification Six Sigma Green Belt

2025-06-13 15:13:16 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Statistical Forecasting\",\n    \"Demand Sensing\",\n    \"Inventory Optimization\",\n    \"Advanced Excel\",\n    \"Python\",\n    \"R Programming\",\n    \"SAP IBP\",\n    \"Oracle Demantra\",\n    \"Power BI\"\n  ],\n  \"soft_skills\": [\n    \"Collaborative Planning\",\n    \"Team Management\",\n    \"Cross-functional Coordination\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Operations)\",\n  \"years_of_experience\": 8,\n  \"certifications\": [\n    \"APICS SCOR Certified\",\n    \"CPIM Certified\",\n    \"SAP IBP Certification\",\n    \"Six Sigma Green Belt\"\n  ],\n  \"industries\": [\n    \"FMCG\",\n    \"Automotive\",\n    \"Manufacturing\",\n    \"Retail\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R Programming\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"SAP IBP\",\n    \"Oracle Demantra\",\n    \"Power BI\",\n    \"Advanced Excel\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Improved forecast accuracy from 72% to 91% using advanced analytics and ML models\",\n    \"Reduced excess inventory by ₹1.8 crores through enhanced demand sensing\",\n    \"Reduced stockout incidents by 35% through improved demand sensing\"\n  ],\n  \"summary\": \"Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with proven track record of improving forecast accuracy by 45% and reducing inventory costs by ₹2.5 crores annually.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":775,"outputTokens":453,"totalTokens":1228}}
2025-06-13 15:13:16 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Statistical Forecasting",
    "Demand Sensing",
    "Inventory Optimization",
    "Advanced Excel",
    "Python",
    "R Programming",
    "SAP IBP",
    "Oracle Demantra",
    "Power BI"
  ],
  "soft_skills": [
    "Collaborative Planning",
    "Team Management",
    "Cross-functional Coordination"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Operations)",
  "years_of_experience": 8,
  "certifications": [
    "APICS SCOR Certified",
    "CPIM Certified",
    "SAP IBP Certification",
    "Six Sigma Green Belt"
  ],
  "industries": [
    "FMCG",
    "Automotive",
    "Manufacturing",
    "Retail"
  ],
  "programming_languages": [
    "Python",
    "R Programming"
  ],
  "frameworks": [],
  "tools": [
    "SAP IBP",
    "Oracle Demantra",
    "Power BI",
    "Advanced Excel"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Improved forecast accuracy from 72% to 91% using advanced analytics and ML models",
    "Reduced excess inventory by ₹1.8 crores through enhanced demand sensing",
    "Reduced stockout incidents by 35% through improved demand sensing"
  ],
  "summary": "Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with proven track record of improving forecast accuracy by 45% and reducing inventory costs by ₹2.5 crores annually."
}
```
2025-06-13 15:13:16 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 15:13:16 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Processed candidate: Rajesh Kumar - Demand Planning Specialist.pdf with ID: d7481177-7ece-45ee-86b1-28c038c15fa4
2025-06-13 15:13:16 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rajesh Kumar - Demand Planning Specialist.pdf (ID: d7481177-7ece-45ee-86b1-28c038c15fa4) in 10845ms
2025-06-13 15:13:16 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:13:16 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rajesh Kumar - Demand Planning Specialist.pdf, success=true, extractedData={experienceLeve (truncated)...]
2025-06-13 15:13:16 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:13:16 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 15:13:16 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 15:13:16 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Processing resume upload: Rohit Gupta - Angular Developer.pdf
2025-06-13 15:13:18 [http-nio-8081-exec-4] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/be149053-efa7-4fde-964e-af4a65236332-Rohit Gupta - Angular Developer.pdf
2025-06-13 15:13:28 [http-nio-8081-exec-4] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/be149053-efa7-4fde-964e-af4a65236332-Rohit Gupta - Angular Developer.pdf
2025-06-13 15:13:28 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
hit Gupta
per & Frontend Specialist
+91 99876 54321
A linkedin.com/in/rohitgupta
github.com/rohitgupta
Delhi. India
I
PROFESSIONAL SUMMARY
TECHNICAL
EXPERTISE
Experienced Angular Developer with 4+ years of
ANGULAR FRAMEWORK
expertise in building dynamic, responsive web
applications using Angular framework and
Angular
Angular 1
TypeScript. Proficient in creating scalable frontend
Angular
Angular CLI
solutions with RxJS, NgRx state management, and
Angula Router
modern UI libraries. Strong background in integrating
RESTful APIs, implementing unit testing with Jasmine
and Karma, and optimizing application performance.
CORE TECHNOLOGIES
Passionate about clean code, user experience, and
TypeScript
JavaScript
staying updated with latest Angular trends and best
practices.
HTML5 CSS3
STATE MANAGEMENT
T
PROFESSIONAL EXPERIENCE
NgRx RxJ
Observable
Reactive Programming
Senior Angular Developer
HCL Technologies
Feb 2022 Present
UI LIBRARIES
Angular
TypeScript
RxJS
NgRx
ingula Material
Bootstra
Angular Material
Jasmine Karma REST APIs
Chart.j
PrimeNG
. Developed enterprise banking applications using Angular
15+ and TypeScript with 99 9% uptime
.
Implemented state management using NgR> for complex
TESTING APIS
application state handling
Jasmine
Karma
. Built reusable components using Angular Material and
custom UI libraries
REST
Integrated RESTful APIs and handled asynchronous
WebSocke
Socket.ic
operations using Rx1S observables
Achieved 95% code coverage through comprehensive unit
testing with Jasmine and Karma
TOOLS OTHERS
Optimized application performance resulting 40% faster
page load times
VS Code
Mentored junior developers Angular best practices
Webpack
and code review processes
EDUCATION
Angular Developer
Tech Mahindra
Jun 2021 2022
Bachelor of Technology
Angular 12
TypeScript
Bootstrap
Chart.js
(Computer Science)
HTTP Client
Forms
Delhi Technological University
2016-2020
. Built responsive dashboard applications using Angular 12
and Bootstrap framework
.
Created interactive data visualizations using Chart.js and
Angular integration
CERTIFICATIONS
Implemented reactive forms and template-driven forms
for data collection
Angular Certified Developer
Consumed REST APIs using Angular HTTP Client and
handled error scenarios
TypeScript Professional
Collaborated with UX/UI teams to implement pixel perfect
designs
NgRx State Management
Participated agile development cycles with daily
standups and sprint planning
Rx1S Reactive Programming
Frontend Web Development
Frontend Developer
Angular Testing with Jasmine
Cognizant Technology
Aug 2020 May
Solutions
2021
LANGUAGES
Angular
JavaScript
HTML5
CSS3
SCSS
Gi
Hindi: Native
English: Fluent
.
Developed customer facing web applications using
Angular 10 and modern JavaScript
Punjabi: Conversational
Created responsive layouts using HTML5, CSS3, and SCSS
preprocessor
INTERESTS
Implemented routing and navigation using Angular Router
Worked with version control using Git and collaborated in
Frontend Architectur Angular
team environments
Updates Open Source Contributing
Fixed bugs and implemented feature enhancements
. Tech Blogging UI/UX Design
based on client requirements
FEATURED PROJECTS
Banking Dashboard
E-Commerce Admin
System
Panel
Angular
NgRx
Angular 12
Angular Material
TypeScript
Bootstrap
Chart.js
RxJS
REST APIs
Forms
Developed comprehensive
Built admin panel e
banking dashboard using
commerce management
Angular with NgRx for
using Angular 12 and
state management
TypeScript Implemented
Integrated Angular Material
Bootstrap responsive
components consistent
design integrated REST
UI and Chart.j for financial
APIs data operations,
data visualization Used
and created complex forms
RxJS handling complex
for product and inventory
asynchronous operations
management
and real-time updates.
Task Management
Real-time Chat
Application
Interface
Angular
Jasmine
Angula Socket.ig
Karma
HTTP Client
SCSS WebSocket
Local Storage
Reactive Forms
Created task management
Developed real-time chat
app using Angular 10 with
application using Angular 14
local storage data
and Socket.ic WebSocket
persistence. Implemented
communication Styled with
comprehensive unit testing
SCSS custom
with Jasmine and Karma.
animations impleme nted
used HTTP Client for API
reactive forms message
integration and built drag
input. and handled real time
and-drop functionality for
message updates efficiently
task organization

2025-06-13 15:13:34 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Angular\",\n    \"Angular 1\",\n    \"Angular CLI\",\n    \"Angular Router\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\",\n    \"NgRx\",\n    \"RxJS\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"Chart.js\",\n    \"PrimeNG\",\n    \"Jasmine\",\n    \"Karma\",\n    \"REST APIs\",\n    \"WebSocket\",\n    \"Socket.io\",\n    \"HTTP Client\",\n    \"Forms\",\n    \"Local Storage\",\n    \"Reactive Forms\",\n    \"Git\"\n  ],\n  \"soft_skills\": [\n    \"Mentoring\",\n    \"Collaboration\",\n    \"Agile development\",\n    \"Team environments\"\n  ],\n  \"experience_level\": \"MID\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 4,\n  \"certifications\": [\n    \"Angular Certified Developer\",\n    \"TypeScript Professional\",\n    \"NgRx State Management\",\n    \"RxJS Reactive Programming\",\n    \"Frontend Web Development\",\n    \"Angular Testing with Jasmine\"\n  ],\n  \"industries\": [\n    \"IT\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"TypeScript\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\"\n  ],\n  \"frameworks\": [\n    \"Angular\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"PrimeNG\"\n  ],\n  \"tools\": [\n    \"VS Code\",\n    \"Webpack\",\n    \"Git\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime\",\n    \"Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma\",\n    \"Optimized application performance resulting in 40% faster page load times\"\n  ],\n  \"summary\": \"Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular, TypeScript, RxJS, and NgRx state management. Passionate about clean code, user experience, and staying updated with the latest Angular trends and best practices.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1267,"outputTokens":593,"totalTokens":1860}}
2025-06-13 15:13:34 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Angular",
    "Angular 1",
    "Angular CLI",
    "Angular Router",
    "TypeScript",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS",
    "NgRx",
    "RxJS",
    "Angular Material",
    "Bootstrap",
    "Chart.js",
    "PrimeNG",
    "Jasmine",
    "Karma",
    "REST APIs",
    "WebSocket",
    "Socket.io",
    "HTTP Client",
    "Forms",
    "Local Storage",
    "Reactive Forms",
    "Git"
  ],
  "soft_skills": [
    "Mentoring",
    "Collaboration",
    "Agile development",
    "Team environments"
  ],
  "experience_level": "MID",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 4,
  "certifications": [
    "Angular Certified Developer",
    "TypeScript Professional",
    "NgRx State Management",
    "RxJS Reactive Programming",
    "Frontend Web Development",
    "Angular Testing with Jasmine"
  ],
  "industries": [
    "IT",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "TypeScript",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS"
  ],
  "frameworks": [
    "Angular",
    "Angular Material",
    "Bootstrap",
    "PrimeNG"
  ],
  "tools": [
    "VS Code",
    "Webpack",
    "Git"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime",
    "Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma",
    "Optimized application performance resulting in 40% faster page load times"
  ],
  "summary": "Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular, TypeScript, RxJS, and NgRx state management. Passionate about clean code, user experience, and staying updated with the latest Angular trends and best practices."
}
```
2025-06-13 15:13:34 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rohit Gupta - Angular Developer.pdf
2025-06-13 15:13:34 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Processed candidate: Rohit Gupta - Angular Developer.pdf with ID: 27c886d0-1cbd-4e34-a5c1-129e0e73fee7
2025-06-13 15:13:34 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rohit Gupta - Angular Developer.pdf (ID: 27c886d0-1cbd-4e34-a5c1-129e0e73fee7) in 18724ms
2025-06-13 15:13:34 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:13:34 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rohit Gupta - Angular Developer.pdf, success=true, extractedData={experienceLevel=MID, ski (truncated)...]
2025-06-13 15:13:34 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:13:36 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 15:13:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 15:13:36 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 15:13:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:13:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@45545c96, com.hackathon.hr.model.Candidate@6a2d8fc4, com.hackathon (truncated)...]
2025-06-13 15:13:36 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 15:13:44 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 3 (Senior Full Stack Developer)
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 38.0 for candidate Aarav Sharma - Junior Developer.pdf and job Senior Full Stack Developer
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 74.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Senior Full Stack Developer
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 54.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Senior Full Stack Developer
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Mei Chen - Marketing Analyst.pdf and job Senior Full Stack Developer
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 32.0 for candidate Rohit Gupta - Angular Developer.pdf and job Senior Full Stack Developer
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 72.0 for candidate Deepika Reddy - Java Developer.pdf and job Senior Full Stack Developer
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Karan Singh - DevOps Engineer.pdf and job Senior Full Stack Developer
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Anjali Patel - Data Analyst.pdf and job Senior Full Stack Developer
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Senior Full Stack Developer
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 90.0 for candidate Arjun Singh - Software Developer.pdf and job Senior Full Stack Developer
2025-06-13 15:13:44 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Senior Full Stack Developer
2025-06-13 15:13:44 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 3 in 20ms
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=3, success=true, totalCandidates=10, jobTitle=Senior Full Stack Developer, matchCount=10, mat (truncated)...]
2025-06-13 15:13:44 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 15:13:50 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 1 (Junior Frontend Developer)
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 92.36363636363636 for candidate Aarav Sharma - Junior Developer.pdf and job Junior Frontend Developer
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 72.0909090909091 for candidate Kavya Nair - Full Stack Developer.pdf and job Junior Frontend Developer
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 39.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Junior Frontend Developer
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 39.0 for candidate Mei Chen - Marketing Analyst.pdf and job Junior Frontend Developer
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 64.81818181818181 for candidate Rohit Gupta - Angular Developer.pdf and job Junior Frontend Developer
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.63636363636364 for candidate Deepika Reddy - Java Developer.pdf and job Junior Frontend Developer
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 40.63636363636364 for candidate Karan Singh - DevOps Engineer.pdf and job Junior Frontend Developer
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Anjali Patel - Data Analyst.pdf and job Junior Frontend Developer
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Junior Frontend Developer
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 64.81818181818181 for candidate Arjun Singh - Software Developer.pdf and job Junior Frontend Developer
2025-06-13 15:13:50 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Junior Frontend Developer
2025-06-13 15:13:50 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 1 in 12ms
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=1, success=true, totalCandidates=10, jobTitle=Junior Frontend Developer, matchCount=10, match (truncated)...]
2025-06-13 15:13:50 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 15:15:16 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 9 (Demand Planning Manager - Supply Chain)
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 26.0 for candidate Aarav Sharma - Junior Developer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 62.44444444444444 for candidate Kavya Nair - Full Stack Developer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 54.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.44444444444444 for candidate Mei Chen - Marketing Analyst.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Rohit Gupta - Angular Developer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Deepika Reddy - Java Developer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 52.0 for candidate Karan Singh - DevOps Engineer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Anjali Patel - Data Analyst.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 69.33333333333333 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 62.44444444444444 for candidate Arjun Singh - Software Developer.pdf and job Demand Planning Manager - Supply Chain
2025-06-13 15:15:16 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Demand Planning Manager - Supply Chain
2025-06-13 15:15:16 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 9 in 2ms
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=9, success=true, totalCandidates=10, jobTitle=Demand Planning Manager - Supply Chain, matchCo (truncated)...]
2025-06-13 15:15:16 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 15:15:20 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 7 (Marketing Data Analyst)
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 26.0 for candidate Aarav Sharma - Junior Developer.pdf and job Marketing Data Analyst
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.0 for candidate Kavya Nair - Full Stack Developer.pdf and job Marketing Data Analyst
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 39.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Marketing Data Analyst
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 74.0 for candidate Mei Chen - Marketing Analyst.pdf and job Marketing Data Analyst
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Rohit Gupta - Angular Developer.pdf and job Marketing Data Analyst
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 50.0 for candidate Deepika Reddy - Java Developer.pdf and job Marketing Data Analyst
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 37.0 for candidate Karan Singh - DevOps Engineer.pdf and job Marketing Data Analyst
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Anjali Patel - Data Analyst.pdf and job Marketing Data Analyst
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Marketing Data Analyst
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.0 for candidate Arjun Singh - Software Developer.pdf and job Marketing Data Analyst
2025-06-13 15:15:20 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Marketing Data Analyst
2025-06-13 15:15:20 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 7 in 1ms
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=7, success=true, totalCandidates=10, jobTitle=Marketing Data Analyst, matchCount=10, matches= (truncated)...]
2025-06-13 15:15:20 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 15:15:28 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 5 (DevOps Engineer - Cloud Infrastructure)
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 26.0 for candidate Aarav Sharma - Junior Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Kavya Nair - Full Stack Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 39.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 39.0 for candidate Mei Chen - Marketing Analyst.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 58.0 for candidate Rohit Gupta - Angular Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 57.0 for candidate Deepika Reddy - Java Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 69.0 for candidate Karan Singh - DevOps Engineer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Anjali Patel - Data Analyst.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.0 for candidate Arjun Singh - Software Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 15:15:28 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: DevOps Engineer - Cloud Infrastructure
2025-06-13 15:15:28 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 5 in 2ms
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=5, success=true, totalCandidates=10, jobTitle=DevOps Engineer - Cloud Infrastructure, matchCo (truncated)...]
2025-06-13 15:15:28 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:29:16 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 15:29:16 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 15:29:16 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Index page loaded with 10 candidates and 10 jobs
2025-06-13 15:29:16 [http-nio-8081-exec-3] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 15:29:16 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:29:17 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 15:29:17 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 15:29:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 15:29:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 15:29:17 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 15:29:17 [http-nio-8081-exec-4] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 15:29:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:29:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@45545c96, com.hackathon.hr.model.Candidate@6a2d8fc4, com.hackathon (truncated)...]
2025-06-13 15:29:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 15:29:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@4ffb16cb, com.hackathon.hr.model.JobRequirement@1f0fd1eb, com (truncated)...]
2025-06-13 15:29:17 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:29:17 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 15:40:59 [RMI TCP Connection(40)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 15:40:59 [RMI TCP Connection(40)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 15:40:59 [RMI TCP Connection(40)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-06-13 20:01:01 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Starting AwsHackathonHrHiringAgentApplication using Java 17.0.14 on Somdips-MacBook-Air.local with PID 77890 (/Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent/target/classes started by somdiproy in /Users/somdiproy/Documents/AWS Hackathon/HR Hiring Agent)
2025-06-13 20:01:01 [restartedMain] DEBUG c.h.h.AwsHackathonHrHiringAgentApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-06-13 20:01:01 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-13 20:01:01 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-13 20:01:01 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-13 20:01:02 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-06-13 20:01:02 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-13 20:01:02 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-06-13 20:01:02 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-13 20:01:02 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1087 ms
2025-06-13 20:01:03 [restartedMain] INFO  c.h.hr.service.CandidateService - Initialized 10 sample jobs matching candidate profiles
2025-06-13 20:01:03 [restartedMain] INFO  c.h.hr.service.CandidateService - CandidateService initialized with 10 sample jobs
2025-06-13 20:01:03 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-13 20:01:03 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-06-13 20:01:03 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2025-06-13 20:01:03 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /static/**, /css/**, /js/**, /images/**] in 'resourceHandlerMapping'
2025-06-13 20:01:03 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-13 20:01:03 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-13 20:01:03 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-06-13 20:01:03 [restartedMain] INFO  c.h.h.AwsHackathonHrHiringAgentApplication - Started AwsHackathonHrHiringAgentApplication in 3.01 seconds (JVM running for 4.294)
2025-06-13 20:01:12 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-13 20:01:12 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3ff9ad56
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@545e0916
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-13 20:01:12 [http-nio-8081-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@14e9c393
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1d0ac411
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@765e09f3
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-06-13 20:01:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:01:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 20:01:13 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 20:01:13 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 20:01:13 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 20:01:13 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:01:13 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:01:13 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 20:01:13 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 20:01:13 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 20:01:13 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 20:01:13 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 20:01:13 [http-nio-8081-exec-4] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 20:01:13 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:01:13 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:01:13 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 20:01:13 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@5994f037, com.hackathon.hr.model.JobRequirement@1b9f11ef, com (truncated)...]
2025-06-13 20:01:13 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:01:13 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 20:01:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 20:01:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 20:01:13 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 20:01:13 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 20:01:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 20:01:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:01:13 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 20:01:13 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 20:01:13 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:01:13 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 20:01:39 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 20:01:39 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 20:01:39 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 20:01:39 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 20:01:39 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:02:03 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 20:02:03 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 20:02:03 [http-nio-8081-exec-10] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 20:02:03 [http-nio-8081-exec-10] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 20:02:03 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:02:03 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 20:02:03 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 20:02:03 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 20:02:03 [http-nio-8081-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 20:02:03 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:02:03 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:02:03 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 20:02:03 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 20:02:03 [http-nio-8081-exec-4] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 20:02:03 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 20:02:03 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:02:03 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 20:02:03 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@5994f037, com.hackathon.hr.model.JobRequirement@1b9f11ef, com (truncated)...]
2025-06-13 20:02:03 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 20:02:03 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:02:03 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 20:02:03 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:02:03 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:02:18 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 20:02:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 20:02:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 20:02:18 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 20:02:18 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 20:02:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 20:02:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:02:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 20:02:18 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 20:02:18 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 20:02:22 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 20:02:22 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 20:02:22 [http-nio-8081-exec-6] DEBUG c.h.hr.controller.HRController - Index page loaded with 0 candidates and 10 jobs
2025-06-13 20:02:22 [http-nio-8081-exec-6] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 20:02:22 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:02:23 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-06-13 20:02:23 [http-nio-8081-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 20:02:23 [http-nio-8081-exec-6] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 20:02:23 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 20:02:23 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 20:02:23 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 20:02:23 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 20:02:23 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:02:23 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 20:02:23 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 20:02:23 [http-nio-8081-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 20:02:23 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 20:02:23 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 20:02:23 [http-nio-8081-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 20:02:23 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:02:23 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:02:23 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 20:02:23 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 20:02:23 [http-nio-8081-exec-10] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 20:02:23 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 20:02:23 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:02:23 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 20:02:23 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@5994f037, com.hackathon.hr.model.JobRequirement@1b9f11ef, com (truncated)...]
2025-06-13 20:02:23 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Retrieved 0 candidates
2025-06-13 20:02:23 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:02:23 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-13 20:02:23 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:02:23 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:02:23 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 20:02:23 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 20:02:23 [http-nio-8081-exec-2] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 20:02:23 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 20:02:23 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 20:02:23 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 20:02:23 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:02:23 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 20:02:23 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 20:02:23 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 20:02:33 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/sample-resumes/download", parameters={}
2025-06-13 20:02:33 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#downloadSampleResumes()
2025-06-13 20:02:33 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/zip' in response
2025-06-13 20:02:33 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [class path resource [static/sample-resumes/sample-resumes.zip]]
2025-06-13 20:02:33 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:03:09 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 20:03:09 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 20:03:09 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Processing resume upload: Aarav Sharma - Junior Developer.pdf
2025-06-13 20:03:19 [http-nio-8081-exec-4] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/77f16b05-1dd2-4d71-ba18-19fc906a8339-Aarav Sharma - Junior Developer.pdf
2025-06-13 20:03:29 [http-nio-8081-exec-4] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/77f16b05-1dd2-4d71-ba18-19fc906a8339-Aarav Sharma - Junior Developer.pdf
2025-06-13 20:03:29 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Aarav Sharma
Junior Software Developer
aarav.sharma@email.com
+91 98765 43210
linkedin.com/in/aaravsharma
github .com/aaravsharma
Jaipur, Rajasthan, India
Professional Summary
Technical Skills
Enthusiastic Junior Software Developer with 2+ years
FRONTEND
of experience in web development using modern
HTML5
CSS3
JavaScript
React
technologies. Passionate about creating clean,
efficient code and building user-friendly applications.
Bootstrap
Strong foundation in JavaScript, React, and Node is
BACKEND
with hands-on experience in full-stack development
Node.j
Express
PHP
REST APIs
projects. Eager to contribute to innovative software
solutions and grow within a dynamic development
DATABASES
team.
MongoDB
MySQL
TOOLS TECHNOLOGIES
Git GitHub
VS Code
Postman
Professional Experience
JWT
APIS INTEGRATIONS
Junior Software Developer
TechStart Solutions Pvt Ltd
Jun 2022 Present
Stripe API
Local Storage
JavaScript React Node.js MongoDB Express.js Git
Education
Developed responsive web applications using React and
JavaScript ES6+
Bachelor of Computer
Built REST APIs using Node js and Express js serving
10,000+ daily requests
Applications (BCA)
University of Rajasthan
Implemented user authentication and authorization using
2019 - 2022
JWT tokens
Collaborated with senior developers using Git for version
control and code reviews
Certifications
Optimized database queries in MongoDB reducing
.
response time by 25%
JavaScript Fundamentals freeCodeCamp
.
React Developer Course Udemy
Participated in agile development cycles with daily
.
Node js Certification Coursera
standups and sprint planning
.
Git Version Control Codecademy
Languages
Hindi: Native
Web Development Intern
English: Fluent
Digital Innovators
Jan 2022 May 2022
Rajasthani: Native
HTML5 CSS3 JavaScript Bootstrap MySQL
Created static websites using HTML5, CSS3, and
Bootstrap framework
Implemented interactive features using vanilla JavaScript
Assisted in maintaining MySQL databases and writing
basic SQL queries
Fixed UI bugs and improved cross-browser compatibility
Learned modern development practices and coding
standards
Key Projects
E-Commerce Shopping Platform
React
Node.j
Express
MongoDB
JWT
Stripe API
Built full-stack e-commerce application with React frontend
and Node js backend Implemented user authentication using
JWT. integrated Stripe payment gateway, and created admin
dashboard for inventory management. Used MongoDB for
data storage and Express js for API development.
Task Management System
JavaScript
React
Local Storage
CSS3
Bootstrap
Developed a responsive task management application using
React and JavaScript. Features include task creation, editing,
deletion. and status tracking. Implemented local storage for
data persistence and used Bootstrap for responsive design
across devices.
Restaurant Website
HTML5
CSS3
JavaScript
MySQL
PHP
Created dynamic restaurant website with online reservation
system. Used HTML5 and CSS3 for layout and styling,
JavaScript for interactive features, and PHP with MySQL for
backend functionality including reservation management and
menu display.

2025-06-13 20:03:35 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"HTML5\",\n    \"CSS3\",\n    \"JavaScript\",\n    \"React\",\n    \"Bootstrap\",\n    \"Node.js\",\n    \"Express.js\",\n    \"PHP\",\n    \"REST APIs\",\n    \"MongoDB\",\n    \"MySQL\",\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\",\n    \"JWT\",\n    \"Stripe API\",\n    \"Local Storage\"\n  ],\n  \"soft_skills\": [\n    \"Collaboration\",\n    \"Communication\",\n    \"Problem-solving\",\n    \"Adaptability\"\n  ],\n  \"experience_level\": \"ENTRY\",\n  \"education\": \"Bachelor of Computer Applications (BCA)\",\n  \"years_of_experience\": 2,\n  \"certifications\": [\n    \"JavaScript Fundamentals - freeCodeCamp\",\n    \"React Developer Course - Udemy\",\n    \"Node.js Certification - Coursera\",\n    \"Git Version Control - Codecademy\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"Web Development\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"Node.js\",\n    \"PHP\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Bootstrap\",\n    \"Express.js\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"GitHub\",\n    \"VS Code\",\n    \"Postman\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Built REST APIs using Node.js and Express.js serving 10,000+ daily requests\",\n    \"Optimized database queries in MongoDB reducing response time by 25%\",\n    \"Implemented user authentication and authorization using JWT tokens\"\n  ],\n  \"summary\": \"Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":920,"outputTokens":534,"totalTokens":1454}}
2025-06-13 20:03:35 [http-nio-8081-exec-4] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "HTML5",
    "CSS3",
    "JavaScript",
    "React",
    "Bootstrap",
    "Node.js",
    "Express.js",
    "PHP",
    "REST APIs",
    "MongoDB",
    "MySQL",
    "Git",
    "GitHub",
    "VS Code",
    "Postman",
    "JWT",
    "Stripe API",
    "Local Storage"
  ],
  "soft_skills": [
    "Collaboration",
    "Communication",
    "Problem-solving",
    "Adaptability"
  ],
  "experience_level": "ENTRY",
  "education": "Bachelor of Computer Applications (BCA)",
  "years_of_experience": 2,
  "certifications": [
    "JavaScript Fundamentals - freeCodeCamp",
    "React Developer Course - Udemy",
    "Node.js Certification - Coursera",
    "Git Version Control - Codecademy"
  ],
  "industries": [
    "Software Development",
    "Web Development"
  ],
  "programming_languages": [
    "JavaScript",
    "Node.js",
    "PHP"
  ],
  "frameworks": [
    "React",
    "Bootstrap",
    "Express.js"
  ],
  "tools": [
    "Git",
    "GitHub",
    "VS Code",
    "Postman"
  ],
  "databases": [
    "MongoDB",
    "MySQL"
  ],
  "cloud_platforms": [],
  "key_achievements": [
    "Built REST APIs using Node.js and Express.js serving 10,000+ daily requests",
    "Optimized database queries in MongoDB reducing response time by 25%",
    "Implemented user authentication and authorization using JWT tokens"
  ],
  "summary": "Enthusiastic Junior Software Developer with 2+ years of experience in web development using modern technologies. Passionate about creating clean, efficient code and building user-friendly applications. Strong foundation in JavaScript, React, and Node.js with hands-on experience in full-stack development projects."
}
```
2025-06-13 20:03:35 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Aarav Sharma - Junior Developer.pdf
2025-06-13 20:03:35 [http-nio-8081-exec-4] INFO  c.h.hr.service.CandidateService - Processed candidate: Aarav Sharma - Junior Developer.pdf with ID: 9b858f29-7945-4e35-8ef3-a2100140140f
2025-06-13 20:03:35 [http-nio-8081-exec-4] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Aarav Sharma - Junior Developer.pdf (ID: 9b858f29-7945-4e35-8ef3-a2100140140f) in 26502ms
2025-06-13 20:03:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:03:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Aarav Sharma - Junior Developer.pdf, success=true, extractedData={experienceLevel=ENTRY, s (truncated)...]
2025-06-13 20:03:35 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:03:35 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 20:03:35 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 20:03:35 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Processing resume upload: Anjali Patel - Data Analyst.pdf
2025-06-13 20:03:41 [http-nio-8081-exec-6] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/51ef7f51-c867-4a6b-bbbb-458e55fa98de-Anjali Patel - Data Analyst.pdf
2025-06-13 20:03:48 [http-nio-8081-exec-6] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/51ef7f51-c867-4a6b-bbbb-458e55fa98de-Anjali Patel - Data Analyst.pdf
2025-06-13 20:03:48 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Pater
S Intelligence Specialist
anjali.patel@email.com
+91 97845 62310
linkedin.com/in/anjalipate
Bangalore, Karnataka, India
Professional Summary
Technical Skills
Innovative Data Analyst with 6+ years of experience in
transforming complex datasets into strategic business
Programming
insights for Indian tech startups and MNCs. Expert in
Python
R
SQL
Java
Scala
machine learning, statistical modeling, and data
visualization with proven track record of improving
business efficiency by 50% and reducing costs by
Databases
₹30 lakh annually through data-driven
recommendations.
MySQL
PostgreSQL
MongoDB
Cassandra
Snowflake
Professional Experience
Analytics & ML
Senior Data Analyst
Pandas
NumPy
Scikit-learn
TensorFlow
Flipkart Group
Feb 2022 Present
Statistical Modeling
Developed ML models for customer behavior analysis
processing 10M+ transactions daily
Created automated dashboards reducing reporting time by
Visualization
70% for 15+ stakeholders
Led data quality initiatives improving accuracy by 95%
Tableau
Power B
matplotlib
seaborn
across e-commerce platform
D3.js
Implemented A/B testing framework increasing conversion
rates by 28%
Built recommendation engines improving customer
engagement by 35%
Cloud Platforms
AWS
Azure
GCP
Spark
Hadoop
Data Analyst
Infosys Limited
Jun 2020 Jan 2022
Analyzed financial data for global banking clients using
Python and SQL
Developed predictive models for fraud detection with 92%
Key Projects
accuracy
Created Power BI dashboards for C-level executives and
stakeholders
E-commerce Customer Segmentation
Optimized database queries improving performance by
Built ML clustering model using K-means and RFM
45%
analysis to segment 5M+ customers, enabling
personalized marketing campaigns with 40% higher
conversion rates.
Junior Data Analyst
Tata Consultancy Services
Jul 2018 May 2020
Real-time Fraud Detection System
Supported market research analysis for retail and
Developed ensemble learning model combining
healthcare clients
Random Forest and XGBoost achieving 94% accuracy
Developed Excel-based models for financial forecasting
in detecting fraudulent transactions for fintech
and budgeting
application.
Assisted in data migration projects and quality assurance
testing
Supply Chain Optimization Dashboard
Created interactive Tableau dashboard tracking 50+
KPIs across inventory, logistics, and vendor
performance, reducing operational costs by ₹25 lakh
annually.
Education
Master of Technology (Computer Science)
Indian Institute of Technology, Bombay
Certifications
2016 2018
AWS Certified Data Analytics Specialty (2024)
Bachelor of Engineering (Information
Technology)
Google Professional Data Engineer (2023)
Gujarat Technological University
2012 2016
Microsoft Azure Data Scientist Associate (2023)
Tableau Desktop Certified Professional (2022)
Google Analytics Individual Qualification (2022)
Languages
Hindi (Native)
English (Fluent)
Gujarati (Native)
Tamil (Conversational)

2025-06-13 20:03:56 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Machine Learning\",\n    \"Statistical Modeling\",\n    \"Data Visualization\",\n    \"Data Quality\",\n    \"A/B Testing\",\n    \"Recommendation Engines\",\n    \"Predictive Modeling\",\n    \"Fraud Detection\",\n    \"Database Optimization\",\n    \"Ensemble Learning\",\n    \"Financial Forecasting\",\n    \"Budgeting\",\n    \"Data Migration\",\n    \"Quality Assurance Testing\",\n    \"KPI Tracking\"\n  ],\n  \"soft_skills\": [\n    \"Innovative\",\n    \"Leadership\",\n    \"Analytical Thinking\",\n    \"Problem Solving\",\n    \"Communication\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Technology (Computer Science)\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"AWS Certified Data Analytics Specialty (2024)\",\n    \"Google Professional Data Engineer (2023)\",\n    \"Microsoft Azure Data Scientist Associate (2023)\",\n    \"Tableau Desktop Certified Professional (2022)\",\n    \"Google Analytics Individual Qualification (2022)\"\n  ],\n  \"industries\": [\n    \"Tech Startups\",\n    \"MNCs\",\n    \"E-commerce\",\n    \"Global Banking\",\n    \"Retail\",\n    \"Healthcare\",\n    \"Fintech\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R\",\n    \"SQL\",\n    \"Java\",\n    \"Scala\"\n  ],\n  \"frameworks\": [\n    \"Pandas\",\n    \"NumPy\",\n    \"Scikit-learn\",\n    \"TensorFlow\",\n    \"Spark\",\n    \"Hadoop\"\n  ],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"matplotlib\",\n    \"seaborn\",\n    \"D3.js\",\n    \"Excel\"\n  ],\n  \"databases\": [\n    \"MySQL\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"Cassandra\",\n    \"Snowflake\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\",\n    \"GCP\"\n  ],\n  \"key_achievements\": [\n    \"Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.\",\n    \"Increased conversion rates by 28% by implementing an A/B testing framework.\",\n    \"Achieved 94% accuracy in detecting fraudulent transactions using an ensemble learning model.\"\n  ],\n  \"summary\": \"Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":934,"outputTokens":686,"totalTokens":1620}}
2025-06-13 20:03:56 [http-nio-8081-exec-6] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Machine Learning",
    "Statistical Modeling",
    "Data Visualization",
    "Data Quality",
    "A/B Testing",
    "Recommendation Engines",
    "Predictive Modeling",
    "Fraud Detection",
    "Database Optimization",
    "Ensemble Learning",
    "Financial Forecasting",
    "Budgeting",
    "Data Migration",
    "Quality Assurance Testing",
    "KPI Tracking"
  ],
  "soft_skills": [
    "Innovative",
    "Leadership",
    "Analytical Thinking",
    "Problem Solving",
    "Communication"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Technology (Computer Science)",
  "years_of_experience": 6,
  "certifications": [
    "AWS Certified Data Analytics Specialty (2024)",
    "Google Professional Data Engineer (2023)",
    "Microsoft Azure Data Scientist Associate (2023)",
    "Tableau Desktop Certified Professional (2022)",
    "Google Analytics Individual Qualification (2022)"
  ],
  "industries": [
    "Tech Startups",
    "MNCs",
    "E-commerce",
    "Global Banking",
    "Retail",
    "Healthcare",
    "Fintech"
  ],
  "programming_languages": [
    "Python",
    "R",
    "SQL",
    "Java",
    "Scala"
  ],
  "frameworks": [
    "Pandas",
    "NumPy",
    "Scikit-learn",
    "TensorFlow",
    "Spark",
    "Hadoop"
  ],
  "tools": [
    "Tableau",
    "Power BI",
    "matplotlib",
    "seaborn",
    "D3.js",
    "Excel"
  ],
  "databases": [
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Cassandra",
    "Snowflake"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure",
    "GCP"
  ],
  "key_achievements": [
    "Improved business efficiency by 50% and reduced costs by ₹30 lakh annually through data-driven recommendations.",
    "Increased conversion rates by 28% by implementing an A/B testing framework.",
    "Achieved 94% accuracy in detecting fraudulent transactions using an ensemble learning model."
  ],
  "summary": "Innovative Data Analyst with 6+ years of experience in transforming complex datasets into strategic business insights for Indian tech startups and MNCs. Expert in machine learning, statistical modeling, and data visualization with a proven track record of improving business efficiency and reducing costs."
}
```
2025-06-13 20:03:56 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Anjali Patel - Data Analyst.pdf
2025-06-13 20:03:56 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Processed candidate: Anjali Patel - Data Analyst.pdf with ID: 8dba92b1-2b22-4a05-bec2-ebc8f44bd84e
2025-06-13 20:03:56 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Anjali Patel - Data Analyst.pdf (ID: 8dba92b1-2b22-4a05-bec2-ebc8f44bd84e) in 20739ms
2025-06-13 20:03:56 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:03:56 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Anjali Patel - Data Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, skil (truncated)...]
2025-06-13 20:03:56 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:03:56 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 20:03:56 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 20:03:56 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Processing resume upload: Arjun Singh - Software Developer.pdf
2025-06-13 20:04:00 [http-nio-8081-exec-8] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/304ee9df-d941-4508-b6b9-599474d30578-Arjun Singh - Software Developer.pdf
2025-06-13 20:04:04 [http-nio-8081-exec-8] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/304ee9df-d941-4508-b6b9-599474d30578-Arjun Singh - Software Developer.pdf
2025-06-13 20:04:04 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Professional Summary
Experienced Full Stack Software Developer with 7+ years of
expertise in building scalable web applications and
Arjun Singh
microservices for Indian tech companies and global clients.
Proficient in modern JavaScript frameworks, cloud
Full Stack Developer
technologies, and agile methodologies. Strong track record of
leading development teams and delivering high-quality
arjun.singh@email.com
software solutions that improved system performance by 60%
+91 94567 89012
and reduced deployment time by 45%.
linkedin.com/in/arjunsingh
github.com/arjunsingh
Professional Experience
T
Hyderabad, Telangana, India
Senior Software Developer
TECHNICAL SKILLS
Zomato Limited
Mar 2022 Present
Frontend
React Node.js TypeScript MongoDB Redis AWS Docker
PostgreSQL
Led development of real-time order tracking system serving
Redis
200K+ daily orders
- Built microservices architecture reducing API response time by
55%
LANGUAGES
- Implemented automated testing pipeline achieving 90% code
Hindi
Native
coverage
English
Fluent
- Mentored 4 junior developers and conducted code reviews
Punjabi
Native
Optimized database queries reducing server costs by ₹8 lakh
monthly
Telugu
Conversational
Software Developer
TOOLS & PLATFORMS
PayTM (One97 Communications)
Jan 2020 Feb 2022
Git Docker . Kubernetes Jenkins AWS
Azure Jira Slack vs Code Intelli]
Vue.js
Express.js
MySQL
Python
Django
Jenkins
IDEA Postman Webpack
- Developed payment gateway integration handling 100 crore+
daily transactions
- Created fraud detection algorithms reducing fraudulent
transactions by 40%
- Built responsive wallet interface used by 50M+ active users
- Implemented CI/CD pipelines reducing deployment time from 4
hours to 30 minutes
Junior Software Developer
Mindtree Limited
Jul 2018 Dec 2019
Angular Spring Boot PostgreSQU HTML5 CSS3
- Developed e-commerce modules for US retail client using Angular
and Spring Boot
- Created responsive UI components improving user experience by
35%
T Participated in agile development with 2-week sprint cycles
1 Fixed 200+ bugs and implemented 50+ feature enhancements
Key Projects
Food Delivery
Cryptocurrency
Platform
Trading Bot
Built end-to-end food
Developed automated
delivery platform with real-
trading bot using Python
time tracking, payment
and machine learning
integration, and restaurant
algorithms achieving 15%
management system using
monthly returns in
MERN stack.
backtesting.
React
Node.js
Python TensorFlow
MongoDB
Redis
Education
Bachelor of Technology (Computer Science
Engineering)
Indian Institute of Technology, Hyderabad
2014 2018
Certifications & Achievements
AWS Certified Solutions Architect Associate (2024)
Google Cloud Professional Developer (2023)
MongoDB Certified Developer (2022)
Scrum Master Certified (2021)
Winner Smart India Hackathon 2017 (Government of India)
Open Source Contributor 1000+ GitHub contributions

2025-06-13 20:04:11 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Node.js\",\n    \"TypeScript\",\n    \"MongoDB\",\n    \"Redis\",\n    \"AWS\",\n    \"Docker\",\n    \"PostgreSQL\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"MySQL\",\n    \"Python\",\n    \"Django\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"TensorFlow\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Agile Methodologies\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science Engineering)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect Associate (2024)\",\n    \"Google Cloud Professional Developer (2023)\",\n    \"MongoDB Certified Developer (2022)\",\n    \"Scrum Master Certified (2021)\"\n  ],\n  \"industries\": [\n    \"Technology\",\n    \"E-commerce\",\n    \"Finance\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"HTML5\",\n    \"CSS3\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Node.js\",\n    \"Vue.js\",\n    \"Express.js\",\n    \"Angular\",\n    \"Spring Boot\",\n    \"Django\"\n  ],\n  \"tools\": [\n    \"Git\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"AWS\",\n    \"Azure\",\n    \"Jira\",\n    \"Slack\",\n    \"VS Code\",\n    \"IntelliJ IDEA\",\n    \"Postman\",\n    \"Webpack\"\n  ],\n  \"databases\": [\n    \"MongoDB\",\n    \"Redis\",\n    \"PostgreSQL\",\n    \"MySQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\",\n    \"Azure\"\n  ],\n  \"key_achievements\": [\n    \"Improved system performance by 60% and reduced deployment time by 45%.\",\n    \"Reduced API response time by 55% through microservices architecture.\",\n    \"Achieved 90% code coverage with automated testing pipeline.\"\n  ],\n  \"summary\": \"Experienced Full Stack Software Developer with over 7 years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Proven track record in leading development teams and delivering high-quality software solutions.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":937,"outputTokens":665,"totalTokens":1602}}
2025-06-13 20:04:11 [http-nio-8081-exec-8] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Node.js",
    "TypeScript",
    "MongoDB",
    "Redis",
    "AWS",
    "Docker",
    "PostgreSQL",
    "Vue.js",
    "Express.js",
    "MySQL",
    "Python",
    "Django",
    "Angular",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "TensorFlow"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Agile Methodologies"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science Engineering)",
  "years_of_experience": 7,
  "certifications": [
    "AWS Certified Solutions Architect Associate (2024)",
    "Google Cloud Professional Developer (2023)",
    "MongoDB Certified Developer (2022)",
    "Scrum Master Certified (2021)"
  ],
  "industries": [
    "Technology",
    "E-commerce",
    "Finance"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "HTML5",
    "CSS3"
  ],
  "frameworks": [
    "React",
    "Node.js",
    "Vue.js",
    "Express.js",
    "Angular",
    "Spring Boot",
    "Django"
  ],
  "tools": [
    "Git",
    "Docker",
    "Kubernetes",
    "Jenkins",
    "AWS",
    "Azure",
    "Jira",
    "Slack",
    "VS Code",
    "IntelliJ IDEA",
    "Postman",
    "Webpack"
  ],
  "databases": [
    "MongoDB",
    "Redis",
    "PostgreSQL",
    "MySQL"
  ],
  "cloud_platforms": [
    "AWS",
    "Azure"
  ],
  "key_achievements": [
    "Improved system performance by 60% and reduced deployment time by 45%.",
    "Reduced API response time by 55% through microservices architecture.",
    "Achieved 90% code coverage with automated testing pipeline."
  ],
  "summary": "Experienced Full Stack Software Developer with over 7 years of expertise in building scalable web applications and microservices. Proficient in modern JavaScript frameworks, cloud technologies, and agile methodologies. Proven track record in leading development teams and delivering high-quality software solutions."
}
```
2025-06-13 20:04:11 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Arjun Singh - Software Developer.pdf
2025-06-13 20:04:11 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Processed candidate: Arjun Singh - Software Developer.pdf with ID: ffd3332b-be08-49db-8ad4-d5577eaad22b
2025-06-13 20:04:11 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Arjun Singh - Software Developer.pdf (ID: ffd3332b-be08-49db-8ad4-d5577eaad22b) in 14629ms
2025-06-13 20:04:11 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:04:11 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Arjun Singh - Software Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, (truncated)...]
2025-06-13 20:04:11 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:04:11 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 20:04:11 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 20:04:11 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Processing resume upload: Deepika Reddy - Java Developer.pdf
2025-06-13 20:04:16 [http-nio-8081-exec-9] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/4a3b952b-364e-4578-8466-764616e7763e-Deepika Reddy - Java Developer.pdf
2025-06-13 20:04:25 [http-nio-8081-exec-9] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/4a3b952b-364e-4578-8466-764616e7763e-Deepika Reddy - Java Developer.pdf
2025-06-13 20:04:25 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Deepika Reddy
Java Developer & Backend Engineer
dccpika.reddy@email .com
H
+91 98712 34567
- linkedin com/1 in/deepikareddy
github.com/deepikareddy
T
Hyderabad, Telangana, India
PROFESSIONAL SUMMARY
TECHNICAL
SKILLS
Dedicated Java Developer with 5+ years of experience in
designing and developing enterprise level applications
CORE JAVA
using Java Spring Framework and microservices
lava I'
Java 11
architecture Expertise in building scalable backend
systems, RESTful APIs, and database integration with
lava OOP Concepts
strong knowledge of software design patterns and best
practices Proven track record of optimizing application
Multithreading
performance and delivering high-quality code in agile
environments
FRAMEWORKS
PROFESSIONAL EXPERIENCE
Spring Boot
Spring MVC
Spring Security
Senior Java Developer
Hibernato
JPA
Accenture Solutions
Jan 2022 Present
Java 17
Spring Boot
Spring Security
Microservices
DATABASES
PostgreSQL
Redis
Docker
Kafka
JUnit
PostgreSQI
MySQI
Developed microservices architecture using Java 17 and Spring
Oracle DB
Redis
Boot serving 500K+ daily transactions
Implemented secure authentication and authorization using
JDBC
Spring Security and JWT tokens
Designed and optimized PostgreSQI database schemas reducing
query execution time by 50%
WEB
Built event driven systems using Apache Kafka for real-time
TECHNOLOGIES
data processing
RESTAI
Implemented Redis caching strategies improving application
response 40%
Microservice
Servlets
Containerized applications using Docker and deployed on
Kubernetes clusters
JSP
SON
Achieved 90% code coverage through compreher sive unit
testing with JUnit and Mockito
TOOLS DEVOPS
Docker Kafka
Java Developer
Mayen Gi
Tomcat
Capgemini India
Mar 2020 Dec 2021
Java 11
Spring MVC
libernato
MySQI
RESTAPI
TESTING
Maven
Git
Unit
Mockito
Buil enterprise web applications using Java 11. Spring MVC.
and Hibernate ORM
Integration Testing
Developed RESTful APIs for frontend consumption and third-
party integrations
Unit Testing
Implemented database operations using Hibernate with MySQL
backend
Used Mayen for project management and dependency resolution
EDUCATION
Collaborated with cross-functional teams using Git for version
control
Participated code reviews and maintained high coding
Bachelor Technology
standards
(Computer Science)
Jawaharlal Nehru
Technological University
2015-2019
Associate Software Engineer
Wipro Technologies
Jul 2019 - Fcb 2020
CERTIFICATIONS
Juya8
Servlets
JSP
JDBC
Oracle
Tomcat
Oracle Certified Professional Java
Developed web applications using Java Servlets, and ISP
SE
technologies
Implemented database connectivity using JDBC with Oracle
Spring Professional Certification
database
Deployed applications on Apache Tomcat server
AWS Certified Developer
Fixed bugs and implemented feature enhancements based on
Associate
client requirements
Learned enterprise development practices and coding standards
Docker Certified Associate
Apache Kafka Developer
FEATURED PROJECTS
Microservice Architecture
LANGUAGES
Banking
E-Commerce Order
Microservices
Management
Platform
Telugu: Native
Java II
Spring MVC
Hindi: Fluent
Java 17
Spring Boot
libernate
MySQL
English: Fluent
PostgreSQ1
Redis
Tamil: Basic
RESTAPI
Kafka
Docker
Built order management
system using Java and
KEY
Architected prehensive
banki platform using
Spring MVC framework
ACHIEVEMENTS
microservices with Java 17
Implemented Hibernate for
and Spring Boot Implemented
ORM mapping with MySQL
database created REST APIs
PostgreSQL data
. performance improvement
persistence Redis caching
for order processing and
database queries
and Kalka for event streaming
integrated payment gateway
90% coverage
testing
Containerized services using
services
Led team of developers
500K daily transactions handled
Docker scalable
Zero production bugs in last months
deployment
Employee
Inventory Tracking
Management stem
API
Java 8
Servlets
Spring Boot
JSP
JDBC
Spring Security
JUnit
Oracle DB
Mockito
Mayen
Developed employee
Created REST for
management application using
inventory management using
Java with Servlets JSP
Spring Spring
for interface Used JDBC
Security authentication
for database operations with
Implemented comprehensive
Oracle backend implemented
testing with JUnit and
CRU D operations and
Mockito managed project
employee reporting features
dependencies with Mayen
build tool

2025-06-13 20:04:33 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Java 11\",\n    \"Java OOP Concepts\",\n    \"Multithreading\",\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\",\n    \"RESTful APIs\",\n    \"Microservices\",\n    \"Servlets\",\n    \"JSP\",\n    \"JDBC\",\n    \"JSON\",\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Integration Testing\",\n    \"Unit Testing\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\"\n  ],\n  \"soft_skills\": [\n    \"Team Collaboration\",\n    \"Code Reviews\",\n    \"Problem Solving\",\n    \"High Coding Standards\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"Oracle Certified Professional Java SE\",\n    \"Spring Professional Certification\",\n    \"AWS Certified Developer Associate\",\n    \"Docker Certified Associate\",\n    \"Apache Kafka Developer\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"Spring Boot\",\n    \"Spring MVC\",\n    \"Spring Security\",\n    \"Hibernate\",\n    \"JPA\"\n  ],\n  \"tools\": [\n    \"Maven\",\n    \"Git\",\n    \"JUnit\",\n    \"Mockito\",\n    \"Docker\",\n    \"Kafka\",\n    \"Kubernetes\",\n    \"Apache Tomcat\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"Oracle DB\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions\",\n    \"Designed and optimized PostgreSQL database schemas reducing query execution time by 50%\",\n    \"Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito\"\n  ],\n  \"summary\": \"Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1286,"outputTokens":646,"totalTokens":1932}}
2025-06-13 20:04:33 [http-nio-8081-exec-9] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Java 11",
    "Java OOP Concepts",
    "Multithreading",
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA",
    "RESTful APIs",
    "Microservices",
    "Servlets",
    "JSP",
    "JDBC",
    "JSON",
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Integration Testing",
    "Unit Testing",
    "Docker",
    "Kafka",
    "Kubernetes"
  ],
  "soft_skills": [
    "Team Collaboration",
    "Code Reviews",
    "Problem Solving",
    "High Coding Standards"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 5,
  "certifications": [
    "Oracle Certified Professional Java SE",
    "Spring Professional Certification",
    "AWS Certified Developer Associate",
    "Docker Certified Associate",
    "Apache Kafka Developer"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "Java"
  ],
  "frameworks": [
    "Spring Boot",
    "Spring MVC",
    "Spring Security",
    "Hibernate",
    "JPA"
  ],
  "tools": [
    "Maven",
    "Git",
    "JUnit",
    "Mockito",
    "Docker",
    "Kafka",
    "Kubernetes",
    "Apache Tomcat"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "Oracle DB",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Developed microservices architecture using Java 17 and Spring Boot serving 500K+ daily transactions",
    "Designed and optimized PostgreSQL database schemas reducing query execution time by 50%",
    "Achieved 90% code coverage through comprehensive unit testing with JUnit and Mockito"
  ],
  "summary": "Dedicated Java Developer with 5+ years of experience in designing and developing enterprise-level applications using Java Spring Framework and microservices architecture. Expertise in building scalable backend systems, RESTful APIs, and database integration with strong knowledge of software design patterns and best practices. Proven track record of optimizing application performance and delivering high-quality code in agile environments."
}
```
2025-06-13 20:04:33 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Deepika Reddy - Java Developer.pdf
2025-06-13 20:04:33 [http-nio-8081-exec-9] INFO  c.h.hr.service.CandidateService - Processed candidate: Deepika Reddy - Java Developer.pdf with ID: be077e94-0a14-4edf-ab54-a6603651270b
2025-06-13 20:04:33 [http-nio-8081-exec-9] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Deepika Reddy - Java Developer.pdf (ID: be077e94-0a14-4edf-ab54-a6603651270b) in 21773ms
2025-06-13 20:04:33 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:04:33 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Deepika Reddy - Java Developer.pdf, success=true, extractedData={experienceLevel=SENIOR, s (truncated)...]
2025-06-13 20:04:33 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:04:33 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 20:04:33 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 20:04:33 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Processing resume upload: Karan Singh - DevOps Engineer.pdf
2025-06-13 20:04:43 [http-nio-8081-exec-1] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/ad96d12f-6d5c-4eff-aa32-76f009bca86f-Karan Singh - DevOps Engineer.pdf
2025-06-13 20:04:56 [http-nio-8081-exec-1] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/ad96d12f-6d5c-4eff-aa32-76f009bca86f-Karan Singh - DevOps Engineer.pdf
2025-06-13 20:04:56 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
karan.singh@email.com
+91 97531 86420
Karan Singh
DevOps Engineer & Cloud Architect
linkedin.com/in/karansingh
STATUS: ACTIVE UPTIME: 5+ YEARS I DEPLOYMENTS: 1000+
in github.com/karansingh
o
Gurgaon, Haryana, India
$ cat professional_summary.txt
TECHNICAL ARSENAL
CLOUD PLATFORMS
Experienced DevOps Engineer with 5+ years of expertise in automating
AWS EC2
AWS EKS
AWS RDS
AWS
deployment pipelines, managing cloud infrastructure. and orchestrating
AWS CloudWatch
AWS CodePipeline
AWS CLI
containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD
automation with strong background in Infrastructure as Code and monitoring
solutions Proven track record of reducing deployment time by 80% and
CONTAINERIZATION
improving system reliability to 99.9% uptime through robust DevOps practices.
Docker
Kubernetes
Docker Swarm
Helm
Container Registry
$ grep -r "experience" /career/history
CI/CD TOOLS
[PROCESS]
Jenkins
GitLab
GitHub Actions
Git
Maven
Senior DevOps Engineer
SonarQub
Paytm (One97 Communications)
Jan 2022 Present
AWS
Kubernetes
Docker
Jenkins
Terraform
Ansible
Prometheus
Grafana
ELK Stack
INFRASTRUCTURE AS CODE
Architected AWS cloud infrastructure using Terraform managing 100+ EC2 instances
Terraform
Ansible
CloudFormation
YAML
JSON
and RDS clusters
Implemented Kubernetes orchestration for microservices serving 50M+ daily
transactions
MONITORING LOGGING
Built Jenkins CI/CD pipelines reducing deployment time from 4 hours to 30 minutes
Prometheus
Grafana
ELK Stack
Alertmanager
Elasticsearch
Kibana
Configured monitoring stack using Prometheus and Grafana achieving 99.9% uptime SLA
Automated infrastructure provisioning using Ansible playbooks saving 20 hours/week
Implemented ELK Stack for centralized logging and real-time log analysis
SYSTEM ADMINISTRATION
Managed Docker container registry and optimized image sizes by 60%
Linux
Shell Scripting
Nainx
Apache
Tomcat
Redis
[PROCESS]
# PERFORMANCE METRICS
DevOps Engineer
Nagarro Software
Mar 2021 Dec 2021
99.9%
80%
AWS EC2
Docker Swarm
GitLab CI
CloudFormation
Nginx
Redis
SYSTEMUPTIME
DEPLOY TIME REDUCTION
Deployed applications on AWS EC2 using Docker Swarm for container orchestration
1000+
100+
Created GitLab CT pipelines for automated testing and deployment processes
DEPLOYMENTS
EC2 INSTANCES
Implemented infrastructure using AWS CloudFormation templates
Configured Nginx load balancers for high availability and traffic distribution
# SYSTEM CONFIGURATION
Set up Redis clusters for caching and session management
Optimized application performance resulting in 40% faster response times
Bachelor of Technology (Information
Technology)
Guru Gobind Singh Indraprastha University
2016 2020
[PROCESS]
Junior DevOps Engineer
# SECURITY CERTIFICATES
Mindtree Limited
Jun 2020 Feb 2021
Linux
Shell Scripting
Git
Mayer
Tomcat
AWS Certified DevOps Engineer Professional
Managed Linux servers and wrote Shell scripts for automation tasks
Certified Kubernetes Administrator (CKA)
Implemented Git workflows and branching strategies for development teams
Docker Certified Associate
Configured Mayen build processes for Java applications
Terraform Associate Certification
Deployed applications on Apache Tomcat servers
Learned infrastructure management and deployment best practices
Jenkins Certified Engineer
AWS Solutions Architect Associate
Prometheus Certified Associate
$ ls -la /projects/featured
LANGUAGE SUPPORT
[PROJECT]
[PROJECT]
Microservices Platform
CI/CD Automation Pipeline
Hindi: Native
Kubernetes
Docker
AWS EKS
Terraform
Jenkins
GitLab
Docker
English: Fluent
Helm
AWS CodePipeline
SonarQube
Punjabi: Native
Urdu: Conversational
Built scalable microservices platform on
Implemented end-to-end CI/CD pipeline
AWS EKS using Kubernetes and Docker.
using Jenkins and GitLab CI with Docker
Automated infrastructure deployment with
containerization. Integrated AWS
ADDITIONAL MODULES
Terraform and managed application
CodePipeline for cloud-native deployments
deployments using Helm charts for
and SonarQube for code quality analysis.
Microservices Architecture
consistent and reliable releases.
Site Reliability Engineering
cloud Security Best Practices
Disaster Recovery Planning
Cost Optimization Strategies
Agile DevOps Methodologies
[PROJECT]
[PROJECT]
Infrastructure Monitoring
Infrastructure as Code
SYSTEM STATUS
Prometheus
Grafana
ELK Stack
Terraform
Ansible
CloudFormation
AWS CloudWatch
Alertmanager
Shell Scripting
AWS CLI
OPERATIONAL: All systems running
MONITORING: Active 24/7
BACKUP: Automated daily
Set up comprehensive monitoring solution
Automated infrastructure provisioning
SECURITY Enhanced protection
PERFORMANCE: Optimized
using Prometheus and Grafana with ELK
using Terraform and Ansible with AWS
Stack for log aggregation. Configured AWS
CloudFormation. Created Shell scripts and
CloudWatch and Alertmanager for proactive
AWS CLI automation for infrastructure
incident management
management and deployment processes.

2025-06-13 20:05:05 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"AWS EC2\",\n    \"AWS EKS\",\n    \"AWS RDS\",\n    \"AWS CloudWatch\",\n    \"AWS CodePipeline\",\n    \"AWS CLI\",\n    \"Docker\",\n    \"Kubernetes\",\n    \"Docker Swarm\",\n    \"Helm\",\n    \"Container Registry\",\n    \"Jenkins\",\n    \"GitLab\",\n    \"GitHub Actions\",\n    \"Git\",\n    \"Maven\",\n    \"SonarQub\",\n    \"Terraform\",\n    \"Ansible\",\n    \"Prometheus\",\n    \"Grafana\",\n    \"ELK Stack\",\n    \"CloudFormation\",\n    \"YAML\",\n    \"JSON\",\n    \"Linux\",\n    \"Shell Scripting\",\n    \"Nginx\",\n    \"Apache\",\n    \"Tomcat\",\n    \"Redis\",\n    \"Alertmanager\",\n    \"Elasticsearch\",\n    \"Kibana\"\n  ],\n  \"soft_skills\": [\n    \"Problem-solving\",\n    \"Automation\",\n    \"Optimization\",\n    \"Team collaboration\",\n    \"Project management\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Information Technology)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified DevOps Engineer Professional\",\n    \"Certified Kubernetes Administrator (CKA)\",\n    \"Docker Certified Associate\",\n    \"Terraform Associate Certification\",\n    \"Jenkins Certified Engineer\",\n    \"AWS Solutions Architect Associate\",\n    \"Prometheus Certified Associate\"\n  ],\n  \"industries\": [\n    \"IT\",\n    \"Finance\",\n    \"Consulting\"\n  ],\n  \"programming_languages\": [\n    \"Shell Scripting\"\n  ],\n  \"frameworks\": [\n    \"Kubernetes\",\n    \"Docker Swarm\",\n    \"Helm\"\n  ],\n  \"tools\": [\n    \"Jenkins\",\n    \"GitLab\",\n    \"GitHub Actions\",\n    \"Git\",\n    \"Maven\",\n    \"SonarQub\",\n    \"Terraform\",\n    \"Ansible\",\n    \"Prometheus\",\n    \"Grafana\",\n    \"ELK Stack\",\n    \"CloudFormation\",\n    \"Nginx\",\n    \"Apache\",\n    \"Tomcat\",\n    \"Redis\",\n    \"Alertmanager\",\n    \"Elasticsearch\",\n    \"Kibana\",\n    \"AWS CLI\"\n  ],\n  \"databases\": [\n    \"AWS RDS\",\n    \"Redis\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Reduced deployment time by 80%\",\n    \"Improved system reliability to 99.9% uptime\",\n    \"Optimized Docker image sizes by 60%\"\n  ],\n  \"summary\": \"Experienced DevOps Engineer with over 5 years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment times and enhancing system reliability.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1431,"outputTokens":769,"totalTokens":2200}}
2025-06-13 20:05:05 [http-nio-8081-exec-1] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "AWS EC2",
    "AWS EKS",
    "AWS RDS",
    "AWS CloudWatch",
    "AWS CodePipeline",
    "AWS CLI",
    "Docker",
    "Kubernetes",
    "Docker Swarm",
    "Helm",
    "Container Registry",
    "Jenkins",
    "GitLab",
    "GitHub Actions",
    "Git",
    "Maven",
    "SonarQub",
    "Terraform",
    "Ansible",
    "Prometheus",
    "Grafana",
    "ELK Stack",
    "CloudFormation",
    "YAML",
    "JSON",
    "Linux",
    "Shell Scripting",
    "Nginx",
    "Apache",
    "Tomcat",
    "Redis",
    "Alertmanager",
    "Elasticsearch",
    "Kibana"
  ],
  "soft_skills": [
    "Problem-solving",
    "Automation",
    "Optimization",
    "Team collaboration",
    "Project management"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Information Technology)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified DevOps Engineer Professional",
    "Certified Kubernetes Administrator (CKA)",
    "Docker Certified Associate",
    "Terraform Associate Certification",
    "Jenkins Certified Engineer",
    "AWS Solutions Architect Associate",
    "Prometheus Certified Associate"
  ],
  "industries": [
    "IT",
    "Finance",
    "Consulting"
  ],
  "programming_languages": [
    "Shell Scripting"
  ],
  "frameworks": [
    "Kubernetes",
    "Docker Swarm",
    "Helm"
  ],
  "tools": [
    "Jenkins",
    "GitLab",
    "GitHub Actions",
    "Git",
    "Maven",
    "SonarQub",
    "Terraform",
    "Ansible",
    "Prometheus",
    "Grafana",
    "ELK Stack",
    "CloudFormation",
    "Nginx",
    "Apache",
    "Tomcat",
    "Redis",
    "Alertmanager",
    "Elasticsearch",
    "Kibana",
    "AWS CLI"
  ],
  "databases": [
    "AWS RDS",
    "Redis"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Reduced deployment time by 80%",
    "Improved system reliability to 99.9% uptime",
    "Optimized Docker image sizes by 60%"
  ],
  "summary": "Experienced DevOps Engineer with over 5 years of expertise in automating deployment pipelines, managing cloud infrastructure, and orchestrating containerized applications. Specialized in AWS, Docker, Kubernetes, and CI/CD automation with a strong background in Infrastructure as Code and monitoring solutions. Proven track record of significantly reducing deployment times and enhancing system reliability."
}
```
2025-06-13 20:05:05 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Karan Singh - DevOps Engineer.pdf
2025-06-13 20:05:05 [http-nio-8081-exec-1] INFO  c.h.hr.service.CandidateService - Processed candidate: Karan Singh - DevOps Engineer.pdf with ID: 680e07bc-f6bf-40db-8a0b-a29976461b50
2025-06-13 20:05:05 [http-nio-8081-exec-1] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Karan Singh - DevOps Engineer.pdf (ID: 680e07bc-f6bf-40db-8a0b-a29976461b50) in 32176ms
2025-06-13 20:05:05 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:05:05 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Karan Singh - DevOps Engineer.pdf, success=true, extractedData={experienceLevel=SENIOR, sk (truncated)...]
2025-06-13 20:05:05 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:05:05 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 20:05:05 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 20:05:05 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Processing resume upload: Kavya Nair - Full Stack Developer.pdf
2025-06-13 20:05:07 [http-nio-8081-exec-10] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/c99fc0be-6e85-468a-b76f-85ef4f22e602-Kavya Nair - Full Stack Developer.pdf
2025-06-13 20:05:15 [http-nio-8081-exec-10] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/c99fc0be-6e85-468a-b76f-85ef4f22e602-Kavya Nair - Full Stack Developer.pdf
2025-06-13 20:05:15 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
+91 98765 12345
Full Stack Developer
linkedin com/in/kavyanair
"Building scalable web solutions with modern technologies'
github.com/kavyanair
9
Kochi. Kerala India
PROFESSIONAL SUMMARY
TECHNICAL
ARSENAL
Passionate Full Stack Developer with 5+ years of experience
FRONTEND
building robust web applications using modern JavaScript
React
Vue.js
Angular
frameworks and cloud technologies. Expertise in React, Node.js,
TypeScript
JavaScript
Python, and AWS with a strong focus on creating scalable,
HTML5
CSS3
maintainable solutions. Proven track record of leading development
teams and delivering high-quality software that serves 100K+ users
daily.
BACKEND
Node.js
Express.js
Python
Django
Java
Spring Boot
PROFESSIONAL EXPERIENCE
DATABASES
PostgreSQL
MySQL
Senior Full Stack Developer
MongoDB
Redis
Oracle DE
Freshworks Inc.
Mar 2022 Present
React
TypeScript
Node.js
Express.js
PostgreSQL
Redis
AWS
Docker
CLOUD DEVOPS
Kubernetes
AWS
Docker
Kubernetes
Architected and developed microservices using Node js and Express.js
Jenkins
GitHub Actions
serving 100K+ daily active users
Built responsive React applications with TypeScript ensuring type safety and
maintainable code
APIS TOOLS
Optimized PostgreSQL database queries and implemented Redis caching
REST APIs
GraphQL
reducing API response time by 60%
Socket.ic
JWT
WebRTC
Deployed applications on AWS using Docker containers and Kubernetes
Chart.js
JUnit
Swagger
orchestration
Led team of developers and mentored junior developers in best practices
Implemented CI/CD pipelines using Jenkins and GitHub Actions reducing
EDUCATION
deployment time by 50%
Master of Computer
Applications (MCA)
Cochin University of Science &
Technology
Full Stack Developer
2017 2019
Zoho Corporation
Jan 2020 Feb 2022
Vue.js
Python
Django
MySQL
MongoDB
REST APIs
GraphQL
Bachelor of Science
(Computer Science)
Developed enterprise CRM features using Vue js frontend and Python Django
University of Kerala
backend
2014 2017
Created RESTful APIs and GraphQL endpoints handling 50K+ requests per
hour
Designed and implemented database schemas in MySQL and MongoDB for
CERTIFICATIONS
optimal performance
Integrated third-party services and APIs for email marketing and analytics
AWS Certified Solutions Architect
functionality
Participated in code reviews and maintained high code quality standards
MongoDB Certified Developer
React Professional Certificate
Node.js Application Developer
Software Developer
Docker Certified Associate
UST Global
Jun 2019 Dec 2019
Kubernetes Administrator
Angular
Java
Spring Boot
Oracle DB
JUnit
Built banking applications using Angular frontend and Java Spring Boot
backend
LANGUAGES
Implemented secure user authentication and authorization using Spring
Security
Malayalam: Native
Developed unit tests using JUnit achieving 85% code coverage
English: Fluent
Hindi: Conversational
Worked with Oracle databases and optimized complex SQL queries
Tamil: Basic
FEATURED PROJECTS
Social Media Analytics
E-Learning Management
Platform
System
React Node.js MongoDB
Vue.js Python Django
Redis Chart.js AWS
PostgreSQL WebRTC
Developed comprehensive social
Built an online learning platform with
media analytics dashboard using
Vue. js frontend and Django backend
React and Chart. js for data
Integrated video conferencing using
visualization. Built scalable backend
WebRTC, implemented course
with Node.js and MongoDB,
management features, and used
implemented Redis for caching, and
PostgreSQL for data storage with
deployed on AWS with auto-scaling
automated backups.
capabilities.
Real-time Chat Application
Inventory Management API
TypeScript Socket.io Express.js
Java
Spring Boot MySQL
JWT
Docker
JUnit
Swagger
Created real-time messaging
Developed RESTful API for inventory
application using Socket io for
management using Java Spring Boot
WebSocket communication and
and MySQL Created comprehensive
TypeScript for type safety.
API documentation with Swagger,
Implemented JWT authentication,
implemented unit testing with JUnit,
built with Express js backend and
and added data validation and error
containerized using Docker for easy
handling.
deployment.

2025-06-13 20:05:22 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"Python\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Java\",\n    \"Spring Boot\",\n    \"HTML5\",\n    \"CSS3\",\n    \"REST APIs\",\n    \"GraphQL\",\n    \"Socket.io\",\n    \"JWT\",\n    \"WebRTC\",\n    \"Chart.js\",\n    \"JUnit\",\n    \"Swagger\"\n  ],\n  \"soft_skills\": [\n    \"Leadership\",\n    \"Mentoring\",\n    \"Team Collaboration\",\n    \"Code Quality Standards\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Computer Applications (MCA)\",\n  \"years_of_experience\": 5,\n  \"certifications\": [\n    \"AWS Certified Solutions Architect\",\n    \"MongoDB Certified Developer\",\n    \"React Professional Certificate\",\n    \"Node.js Application Developer\",\n    \"Docker Certified Associate\",\n    \"Kubernetes Administrator\"\n  ],\n  \"industries\": [\n    \"Software Development\",\n    \"CRM\",\n    \"Banking\",\n    \"Analytics\"\n  ],\n  \"programming_languages\": [\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Python\",\n    \"Java\"\n  ],\n  \"frameworks\": [\n    \"React\",\n    \"Vue.js\",\n    \"Angular\",\n    \"Node.js\",\n    \"Express.js\",\n    \"Django\",\n    \"Spring Boot\"\n  ],\n  \"tools\": [\n    \"Docker\",\n    \"Kubernetes\",\n    \"Jenkins\",\n    \"GitHub Actions\",\n    \"Swagger\",\n    \"Chart.js\",\n    \"JUnit\"\n  ],\n  \"databases\": [\n    \"PostgreSQL\",\n    \"MySQL\",\n    \"MongoDB\",\n    \"Redis\",\n    \"Oracle DB\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Architected and developed microservices serving 100K+ daily active users\",\n    \"Optimized PostgreSQL database queries and implemented Redis caching reducing API response time by 60%\",\n    \"Implemented CI/CD pipelines reducing deployment time by 50%\"\n  ],\n  \"summary\": \"Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1215,"outputTokens":655,"totalTokens":1870}}
2025-06-13 20:05:22 [http-nio-8081-exec-10] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "React",
    "Vue.js",
    "Angular",
    "TypeScript",
    "JavaScript",
    "Python",
    "Node.js",
    "Express.js",
    "Django",
    "Java",
    "Spring Boot",
    "HTML5",
    "CSS3",
    "REST APIs",
    "GraphQL",
    "Socket.io",
    "JWT",
    "WebRTC",
    "Chart.js",
    "JUnit",
    "Swagger"
  ],
  "soft_skills": [
    "Leadership",
    "Mentoring",
    "Team Collaboration",
    "Code Quality Standards"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Computer Applications (MCA)",
  "years_of_experience": 5,
  "certifications": [
    "AWS Certified Solutions Architect",
    "MongoDB Certified Developer",
    "React Professional Certificate",
    "Node.js Application Developer",
    "Docker Certified Associate",
    "Kubernetes Administrator"
  ],
  "industries": [
    "Software Development",
    "CRM",
    "Banking",
    "Analytics"
  ],
  "programming_languages": [
    "JavaScript",
    "TypeScript",
    "Python",
    "Java"
  ],
  "frameworks": [
    "React",
    "Vue.js",
    "Angular",
    "Node.js",
    "Express.js",
    "Django",
    "Spring Boot"
  ],
  "tools": [
    "Docker",
    "Kubernetes",
    "Jenkins",
    "GitHub Actions",
    "Swagger",
    "Chart.js",
    "JUnit"
  ],
  "databases": [
    "PostgreSQL",
    "MySQL",
    "MongoDB",
    "Redis",
    "Oracle DB"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Architected and developed microservices serving 100K+ daily active users",
    "Optimized PostgreSQL database queries and implemented Redis caching reducing API response time by 60%",
    "Implemented CI/CD pipelines reducing deployment time by 50%"
  ],
  "summary": "Passionate Full Stack Developer with 5+ years of experience building robust web applications using modern JavaScript frameworks and cloud technologies. Expertise in React, Node.js, Python, and AWS with a strong focus on creating scalable, maintainable solutions. Proven track record of leading development teams and delivering high-quality software."
}
```
2025-06-13 20:05:22 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Kavya Nair - Full Stack Developer.pdf
2025-06-13 20:05:22 [http-nio-8081-exec-10] INFO  c.h.hr.service.CandidateService - Processed candidate: Kavya Nair - Full Stack Developer.pdf with ID: 9bbeafc4-54b1-42ee-86d3-d8cb914e750f
2025-06-13 20:05:22 [http-nio-8081-exec-10] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Kavya Nair - Full Stack Developer.pdf (ID: 9bbeafc4-54b1-42ee-86d3-d8cb914e750f) in 17068ms
2025-06-13 20:05:22 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:05:22 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Kavya Nair - Full Stack Developer.pdf, success=true, extractedData={experienceLevel=SENIOR (truncated)...]
2025-06-13 20:05:22 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:05:22 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 20:05:22 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 20:05:22 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Processing resume upload: Mei Chen - Marketing Analyst.pdf
2025-06-13 20:05:32 [http-nio-8081-exec-2] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/455aa38f-f075-4d07-a953-3aec8cbd1763-Mei Chen - Marketing Analyst.pdf
2025-06-13 20:05:42 [http-nio-8081-exec-2] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/455aa38f-f075-4d07-a953-3aec8cbd1763-Mei Chen - Marketing Analyst.pdf
2025-06-13 20:05:42 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Mei Chen
Marketing Analyst & Growth Strategist
mei.chen@email.com
+65 9876 5432
linkedin .com/in/meichen
Singapore
PROFESSIONAL SUMMARY
Core Skills
Data Analytics
95%
Data-driven Marketing Analyst with 6+ years of experience in
SQL & Python
90%
digital marketing analytics and customer insights across Asia-
Tableau & Power BI
88%
Pacific markets. Expert in transforming complex data into
actionable marketing strategies that drove 45% increase in ROI
Google Analytics
92%
and 35% growth in customer acquisition. Specialized in cross-
cultural marketing campaigns and multilingual market analysis.
A/B Testing
85%
Languages
PROFESSIONAL EXPERIENCE
Mandarin
English
Native
Fluent
Senior Marketing Analyst
Hindi
Shopee Singapore
Jan 2022 Present
Malay
Conversational
Basic
Analyzed user behavior data from 8 Southeast Asian markets with
100M+ active users
Developed attribution models improving campaign ROI
Education
measurement accuracy by 50%
Led A/B testing initiatives across mobile and web platforms with
28% conversion improvement
Master of Science in
Marketing Analytics
Created automated dashboards reducing manual reporting time by
National University of
75%
Singapore
2016 2018
Managed marketing analytics for flash sales generating S$50M+
revenue
Bachelor of Business
Administration
Nanyang Technological
University
Marketing Data Analyst
2012 2016
Grab Holdings
Mar 2020 Dec 2021
Performed cohort analysis for ride-hailing and food delivery
services across 6 countries
Certifications
Built predictive models for customer lifetime value with 89%
accuracy
Google Analytics 4 Certified
Optimized marketing spend allocation reducing CAC by 30%
across all verticals
Facebook Blueprint Certified
Conducted market research for new service launches in emerging
markets
Tableau Desktop Specialist
AWS Cloud Practitioner
Junior Marketing Analyst
Google Ads Certified
ByteDance (TikTok)
Jun 2018 Feb 2020
Analyzed viral content patterns and user engagement metrics for
HubSpot Marketing Analytics
APAC region
Created weekly performance reports for marketing campaigns
across 12 markets
Supported influencer marketing ROI analysis and campaign
optimization
Assisted in competitive analysis and market positioning strategies

2025-06-13 20:05:51 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Data Analytics\",\n    \"SQL\",\n    \"Python\",\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\",\n    \"A/B Testing\",\n    \"Predictive Modeling\",\n    \"Marketing Spend Allocation\",\n    \"Market Research\",\n    \"Attribution Models\",\n    \"Automated Dashboards\",\n    \"Customer Lifetime Value\"\n  ],\n  \"soft_skills\": [\n    \"Cross-cultural Marketing\",\n    \"Multilingual Market Analysis\",\n    \"Campaign Optimization\",\n    \"Market Positioning Strategies\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Science in Marketing Analytics\",\n  \"years_of_experience\": 6,\n  \"certifications\": [\n    \"Google Analytics 4 Certified\",\n    \"Facebook Blueprint Certified\",\n    \"Tableau Desktop Specialist\",\n    \"AWS Cloud Practitioner\",\n    \"Google Ads Certified\",\n    \"HubSpot Marketing Analytics\"\n  ],\n  \"industries\": [\n    \"Digital Marketing\",\n    \"E-commerce\",\n    \"Ride-hailing\",\n    \"Food Delivery\",\n    \"Social Media\"\n  ],\n  \"programming_languages\": [\n    \"SQL\",\n    \"Python\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"Tableau\",\n    \"Power BI\",\n    \"Google Analytics\"\n  ],\n  \"databases\": [\n    \"SQL\"\n  ],\n  \"cloud_platforms\": [\n    \"AWS\"\n  ],\n  \"key_achievements\": [\n    \"Drove 45% increase in ROI and 35% growth in customer acquisition\",\n    \"Improved campaign ROI measurement accuracy by 50%\",\n    \"Achieved 28% conversion improvement through A/B testing initiatives\"\n  ],\n  \"summary\": \"Data-driven Marketing Analyst with over 6 years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":751,"outputTokens":505,"totalTokens":1256}}
2025-06-13 20:05:51 [http-nio-8081-exec-2] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Data Analytics",
    "SQL",
    "Python",
    "Tableau",
    "Power BI",
    "Google Analytics",
    "A/B Testing",
    "Predictive Modeling",
    "Marketing Spend Allocation",
    "Market Research",
    "Attribution Models",
    "Automated Dashboards",
    "Customer Lifetime Value"
  ],
  "soft_skills": [
    "Cross-cultural Marketing",
    "Multilingual Market Analysis",
    "Campaign Optimization",
    "Market Positioning Strategies"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Science in Marketing Analytics",
  "years_of_experience": 6,
  "certifications": [
    "Google Analytics 4 Certified",
    "Facebook Blueprint Certified",
    "Tableau Desktop Specialist",
    "AWS Cloud Practitioner",
    "Google Ads Certified",
    "HubSpot Marketing Analytics"
  ],
  "industries": [
    "Digital Marketing",
    "E-commerce",
    "Ride-hailing",
    "Food Delivery",
    "Social Media"
  ],
  "programming_languages": [
    "SQL",
    "Python"
  ],
  "frameworks": [],
  "tools": [
    "Tableau",
    "Power BI",
    "Google Analytics"
  ],
  "databases": [
    "SQL"
  ],
  "cloud_platforms": [
    "AWS"
  ],
  "key_achievements": [
    "Drove 45% increase in ROI and 35% growth in customer acquisition",
    "Improved campaign ROI measurement accuracy by 50%",
    "Achieved 28% conversion improvement through A/B testing initiatives"
  ],
  "summary": "Data-driven Marketing Analyst with over 6 years of experience in digital marketing analytics and customer insights across Asia-Pacific markets. Expert in transforming complex data into actionable marketing strategies. Specialized in cross-cultural marketing campaigns and multilingual market analysis."
}
```
2025-06-13 20:05:51 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Mei Chen - Marketing Analyst.pdf
2025-06-13 20:05:51 [http-nio-8081-exec-2] INFO  c.h.hr.service.CandidateService - Processed candidate: Mei Chen - Marketing Analyst.pdf with ID: 58c459ea-ada7-41ac-a029-309854dfbae7
2025-06-13 20:05:51 [http-nio-8081-exec-2] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Mei Chen - Marketing Analyst.pdf (ID: 58c459ea-ada7-41ac-a029-309854dfbae7) in 28812ms
2025-06-13 20:05:51 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:05:51 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Mei Chen - Marketing Analyst.pdf, success=true, extractedData={experienceLevel=SENIOR, ski (truncated)...]
2025-06-13 20:05:51 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:05:51 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 20:05:51 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 20:05:51 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Processing resume upload: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 20:05:55 [http-nio-8081-exec-3] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/f1fd5d35-2b2d-473d-be2c-ab30071dc750-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 20:06:00 [http-nio-8081-exec-3] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/f1fd5d35-2b2d-473d-be2c-ab30071dc750-Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 20:06:00 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
PROFESSIONAL SUMMARY
Results-oriented Sales & Marketing professional with 7+
years of experience in the Indian market, specializing in
digital marketing strategies and B2B sales. Proven track
Priya Sharma
record of increasing revenue by 40% and expanding
market presence across Tier 1 and Tier 2 cities. Expert in
Sales & Marketing Professional
managing multi-channel campaigns and building long-term
client relationships in competitive markets.
Contact
priya.sharma@email.com
PROFESSIONAL EXPERIENCE
+91 98765 43210
Senior Marketing Manager
linkedin.com/in/priyasharma
Tata Digital Solutions
Jan 2021 Present
Mumbai, Maharashtra, India
Led digital marketing initiatives for pan-India market expansion,
Core Skills
reaching 15+ states
Managed ₹50 lakh annual marketing budget with 35% ROI
Lead Generation
improvement
Developed localized campaigns for regional markets increasing
Digital Marketing
engagement by 60%
Built strategic partnerships with 25+ B2B clients across various
CRM Management
industries
Campaign Strategy
Implemented CRM system reducing sales cycle time by 30%
Analytics
Marketing Executive
Languages
Reliance Industries Ltd
Mar 2019 Dec 2020
Executed social media strategies achieving 2M+ followers across
Hindi (Native)
platforms
English (Fluent)
Coordinated trade shows and exhibitions in Mumbai, Delhi, and
Bangalore
Marathi (Native)
Managed vendor relationships and negotiated contracts saving
₹15 lakh annually
Certifications
Created content marketing strategy increasing website traffic by
150%
Google Ads Certified Professional
HubSpot Inbound Marketing
Salesforce Administrator
Sales Associate
Digital Marketing Institute
Wipro Technologies
Jun 2017 Feb 2019
Achieved 125% of sales targets consistently across Western
India region
Built client database of 200+ prospects through cold calling and
networking
Participated in 10+ industry conferences and generated 50+
qualified leads
EDUCATION
Master of Business Administration (Marketing)
Indian Institute of Management, Ahmedabad
2015 2017
Bachelor of Commerce
University of Mumbai
2012 2015

2025-06-13 20:06:04 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Lead Generation\",\n    \"Digital Marketing\",\n    \"CRM Management\",\n    \"Campaign Strategy\",\n    \"Analytics\"\n  ],\n  \"soft_skills\": [\n    \"Client Relationship Management\",\n    \"Strategic Partnerships\",\n    \"Negotiation\",\n    \"Content Creation\",\n    \"Budget Management\"\n  ],\n  \"experience_level\": \"MID\",\n  \"education\": \"Master of Business Administration (Marketing)\",\n  \"years_of_experience\": 7,\n  \"certifications\": [\n    \"Google Ads Certified Professional\",\n    \"HubSpot Inbound Marketing\",\n    \"Salesforce Administrator\",\n    \"Digital Marketing Institute\"\n  ],\n  \"industries\": [\n    \"Digital Solutions\",\n    \"Reliance Industries\",\n    \"Information Technology\"\n  ],\n  \"programming_languages\": [],\n  \"frameworks\": [],\n  \"tools\": [\n    \"CRM system\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.\",\n    \"Managed ₹50 lakh annual marketing budget with 35% ROI improvement.\",\n    \"Executed social media strategies achieving 2M+ followers across platforms.\"\n  ],\n  \"summary\": \"Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market. Specializes in digital marketing strategies and B2B sales, with a proven track record of increasing revenue and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":722,"outputTokens":394,"totalTokens":1116}}
2025-06-13 20:06:04 [http-nio-8081-exec-3] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Lead Generation",
    "Digital Marketing",
    "CRM Management",
    "Campaign Strategy",
    "Analytics"
  ],
  "soft_skills": [
    "Client Relationship Management",
    "Strategic Partnerships",
    "Negotiation",
    "Content Creation",
    "Budget Management"
  ],
  "experience_level": "MID",
  "education": "Master of Business Administration (Marketing)",
  "years_of_experience": 7,
  "certifications": [
    "Google Ads Certified Professional",
    "HubSpot Inbound Marketing",
    "Salesforce Administrator",
    "Digital Marketing Institute"
  ],
  "industries": [
    "Digital Solutions",
    "Reliance Industries",
    "Information Technology"
  ],
  "programming_languages": [],
  "frameworks": [],
  "tools": [
    "CRM system"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Increased revenue by 40% and expanded market presence across Tier 1 and Tier 2 cities.",
    "Managed ₹50 lakh annual marketing budget with 35% ROI improvement.",
    "Executed social media strategies achieving 2M+ followers across platforms."
  ],
  "summary": "Results-oriented Sales & Marketing professional with over 7 years of experience in the Indian market. Specializes in digital marketing strategies and B2B sales, with a proven track record of increasing revenue and expanding market presence. Expert in managing multi-channel campaigns and building long-term client relationships."
}
```
2025-06-13 20:06:04 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Priya Sharma - Sales & Marketing Professional.pdf
2025-06-13 20:06:04 [http-nio-8081-exec-3] INFO  c.h.hr.service.CandidateService - Processed candidate: Priya Sharma - Sales & Marketing Professional.pdf with ID: e2ae33a2-0215-4750-ba26-d4acd9bfdeb0
2025-06-13 20:06:04 [http-nio-8081-exec-3] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Priya Sharma - Sales & Marketing Professional.pdf (ID: e2ae33a2-0215-4750-ba26-d4acd9bfdeb0) in 13394ms
2025-06-13 20:06:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:06:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Priya Sharma - Sales & Marketing Professional.pdf, success=true, extractedData={experience (truncated)...]
2025-06-13 20:06:04 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:06:04 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 20:06:04 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 20:06:04 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Processing resume upload: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 20:06:12 [http-nio-8081-exec-5] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/f353a08e-56c9-46d4-811a-a8f7f76747e5-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 20:06:18 [http-nio-8081-exec-5] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/f353a08e-56c9-46d4-811a-a8f7f76747e5-Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 20:06:18 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
Rajesh Kumar
Demand Planning Specialist
rajesh kumar@email.com
+91 98765 54321
linkedin.com/in/rajeshkumar
T
Pune, Maharashtra, India
Professional Summary
Strategic Demand Planning professional with 8+ years of experience in supply chain
optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting,
inventory management, and S&OP processes with proven track record of improving forecast
accuracy by 45% and reducing inventory costs by ₹2.5 crores annually. Skilled in implementing
demand planning solutions for multi-location operations across India.
Professional Experience
O
Senior Demand Planning Manager
Apr 202 Present
Hindustan Unilever Limited
Lead demand planning for 800+ SKUs across North and West India regions
Improved forecast accuracy from 72% to 91% using advanced analytics and ML models
Reduced excess inventory by ₹1.8 crores through enhanced demand sensing
Led S&OP implementation across 8 manufacturing locations
Managed cross-functional teams of 15+ members across supply chain functions
Implemented SAP IBP resulting in 40% reduction in planning cycle time
Demand Planner
Jun 2019 Mar 2021
ITC Limited
Managed demand planning for cigarettes and FMCG portfolio worth ₹500 crores
Developed statistical models for seasonal demand patterns using R and Python
Collaborated with marketing teams for promotional planning and new product launches
Reduced stockout incidents by 35% through improved demand sensing
Created automated dashboards using Power BI for executive reporting
Supply Chain Analyst
Jul 2017 May 2019
Mahindra & Mahindra
Supported inventory optimization for automotive spare parts across 200+ dealers
Performed root cause analysis on forecast variances and implemented corrections
Created Excel-based planning tools reducing manual effort by 60%
Assisted in vendor collaboration initiatives improving supplier fill rates
Core Competencies
Planning & Forecasting
Technology & Tools
Statistical Forecasting
Demand Sensing
SAP IBP/APO
Oracle Demantra
Power BI
S&OP
Inventory Optimization
Advanced Excel
Python
R Programming
Collaborative Planning
Industry Knowledge
FMCG
Automotive
Manufacturing
Retail
Multi- location Ops
Education & Certifications
Master of Business Administration (Operations)
Indian Institute of Management, Kozhikode
2015 2017
Bachelor of Engineering (Mechanical)
Pune University
2011 2015
Certifications
APICS SCOR Certified CPIM Certified SAP IBP Certification Six Sigma Green Belt

2025-06-13 20:06:22 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Statistical Forecasting\",\n    \"Demand Sensing\",\n    \"Inventory Optimization\",\n    \"Advanced Excel\",\n    \"Python\",\n    \"R Programming\",\n    \"SAP IBP/APO\",\n    \"Oracle Demantra\",\n    \"Power BI\"\n  ],\n  \"soft_skills\": [\n    \"Collaborative Planning\",\n    \"Team Management\",\n    \"Vendor Collaboration\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Master of Business Administration (Operations)\",\n  \"years_of_experience\": 8,\n  \"certifications\": [\n    \"APICS SCOR Certified\",\n    \"CPIM Certified\",\n    \"SAP IBP Certification\",\n    \"Six Sigma Green Belt\"\n  ],\n  \"industries\": [\n    \"FMCG\",\n    \"Automotive\",\n    \"Manufacturing\",\n    \"Retail\"\n  ],\n  \"programming_languages\": [\n    \"Python\",\n    \"R Programming\"\n  ],\n  \"frameworks\": [],\n  \"tools\": [\n    \"SAP IBP/APO\",\n    \"Oracle Demantra\",\n    \"Power BI\",\n    \"Advanced Excel\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Improved forecast accuracy from 72% to 91% using advanced analytics and ML models\",\n    \"Reduced excess inventory by ₹1.8 crores through enhanced demand sensing\",\n    \"Reduced stockout incidents by 35% through improved demand sensing\"\n  ],\n  \"summary\": \"Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with a proven track record of improving forecast accuracy by 45% and reducing inventory costs by ₹2.5 crores annually.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":775,"outputTokens":458,"totalTokens":1233}}
2025-06-13 20:06:22 [http-nio-8081-exec-5] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Statistical Forecasting",
    "Demand Sensing",
    "Inventory Optimization",
    "Advanced Excel",
    "Python",
    "R Programming",
    "SAP IBP/APO",
    "Oracle Demantra",
    "Power BI"
  ],
  "soft_skills": [
    "Collaborative Planning",
    "Team Management",
    "Vendor Collaboration"
  ],
  "experience_level": "SENIOR",
  "education": "Master of Business Administration (Operations)",
  "years_of_experience": 8,
  "certifications": [
    "APICS SCOR Certified",
    "CPIM Certified",
    "SAP IBP Certification",
    "Six Sigma Green Belt"
  ],
  "industries": [
    "FMCG",
    "Automotive",
    "Manufacturing",
    "Retail"
  ],
  "programming_languages": [
    "Python",
    "R Programming"
  ],
  "frameworks": [],
  "tools": [
    "SAP IBP/APO",
    "Oracle Demantra",
    "Power BI",
    "Advanced Excel"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Improved forecast accuracy from 72% to 91% using advanced analytics and ML models",
    "Reduced excess inventory by ₹1.8 crores through enhanced demand sensing",
    "Reduced stockout incidents by 35% through improved demand sensing"
  ],
  "summary": "Strategic Demand Planning professional with 8+ years of experience in supply chain optimization across Indian manufacturing and FMCG sectors. Expert in statistical forecasting, inventory management, and S&OP processes with a proven track record of improving forecast accuracy by 45% and reducing inventory costs by ₹2.5 crores annually."
}
```
2025-06-13 20:06:22 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rajesh Kumar - Demand Planning Specialist.pdf
2025-06-13 20:06:22 [http-nio-8081-exec-5] INFO  c.h.hr.service.CandidateService - Processed candidate: Rajesh Kumar - Demand Planning Specialist.pdf with ID: f312155d-f9ea-4b45-a8fa-4279e9219615
2025-06-13 20:06:22 [http-nio-8081-exec-5] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rajesh Kumar - Demand Planning Specialist.pdf (ID: f312155d-f9ea-4b45-a8fa-4279e9219615) in 18113ms
2025-06-13 20:06:22 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:06:22 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rajesh Kumar - Demand Planning Specialist.pdf, success=true, extractedData={experienceLeve (truncated)...]
2025-06-13 20:06:22 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:06:23 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/upload", parameters={multipart}
2025-06-13 20:06:23 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#uploadResume(MultipartFile)
2025-06-13 20:06:23 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Processing resume upload: Rohit Gupta - Angular Developer.pdf
2025-06-13 20:06:28 [http-nio-8081-exec-7] INFO  com.hackathon.hr.service.S3Service - File uploaded successfully: resumes/bf0371d5-c56f-41af-8f77-9981069a5863-Rohit Gupta - Angular Developer.pdf
2025-06-13 20:06:33 [http-nio-8081-exec-7] INFO  c.h.hr.service.TextractService - Text extracted successfully from: resumes/bf0371d5-c56f-41af-8f77-9981069a5863-Rohit Gupta - Angular Developer.pdf
2025-06-13 20:06:33 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Invoking model us.amazon.nova-premier-v1:0 with prompt: Perform a comprehensive analysis of this resume. Extract all relevant information.

Return a JSON object with this structure:
{
  "technical_skills": ["list all technical skills found"],
  "soft_skills": ["list all soft skills found"],
  "experience_level": "ENTRY/MID/SENIOR",
  "education": "highest education level",
  "years_of_experience": number,
  "certifications": ["list all certifications"],
  "industries": ["list relevant industries"],
  "programming_languages": ["list all programming languages"],
  "frameworks": ["list all frameworks/libraries"],
  "tools": ["list all tools/software"],
  "databases": ["list all databases"],
  "cloud_platforms": ["list cloud platforms"],
  "key_achievements": ["list 2-3 key achievements"],
  "summary": "2-3 sentence professional summary"
}

Resume Text:
hit Gupta
per & Frontend Specialist
+91 99876 54321
A linkedin.com/in/rohitgupta
github.com/rohitgupta
Delhi. India
I
PROFESSIONAL SUMMARY
TECHNICAL
EXPERTISE
Experienced Angular Developer with 4+ years of
ANGULAR FRAMEWORK
expertise in building dynamic, responsive web
applications using Angular framework and
Angular
Angular 1
TypeScript. Proficient in creating scalable frontend
Angular
Angular CLI
solutions with RxJS, NgRx state management, and
Angula Router
modern UI libraries. Strong background in integrating
RESTful APIs, implementing unit testing with Jasmine
and Karma, and optimizing application performance.
CORE TECHNOLOGIES
Passionate about clean code, user experience, and
TypeScript
JavaScript
staying updated with latest Angular trends and best
practices.
HTML5 CSS3
STATE MANAGEMENT
T
PROFESSIONAL EXPERIENCE
NgRx RxJ
Observable
Reactive Programming
Senior Angular Developer
HCL Technologies
Feb 2022 Present
UI LIBRARIES
Angular
TypeScript
RxJS
NgRx
ingula Material
Bootstra
Angular Material
Jasmine Karma REST APIs
Chart.j
PrimeNG
. Developed enterprise banking applications using Angular
15+ and TypeScript with 99 9% uptime
.
Implemented state management using NgR> for complex
TESTING APIS
application state handling
Jasmine
Karma
. Built reusable components using Angular Material and
custom UI libraries
REST
Integrated RESTful APIs and handled asynchronous
WebSocke
Socket.ic
operations using Rx1S observables
Achieved 95% code coverage through comprehensive unit
testing with Jasmine and Karma
TOOLS OTHERS
Optimized application performance resulting 40% faster
page load times
VS Code
Mentored junior developers Angular best practices
Webpack
and code review processes
EDUCATION
Angular Developer
Tech Mahindra
Jun 2021 2022
Bachelor of Technology
Angular 12
TypeScript
Bootstrap
Chart.js
(Computer Science)
HTTP Client
Forms
Delhi Technological University
2016-2020
. Built responsive dashboard applications using Angular 12
and Bootstrap framework
.
Created interactive data visualizations using Chart.js and
Angular integration
CERTIFICATIONS
Implemented reactive forms and template-driven forms
for data collection
Angular Certified Developer
Consumed REST APIs using Angular HTTP Client and
handled error scenarios
TypeScript Professional
Collaborated with UX/UI teams to implement pixel perfect
designs
NgRx State Management
Participated agile development cycles with daily
standups and sprint planning
Rx1S Reactive Programming
Frontend Web Development
Frontend Developer
Angular Testing with Jasmine
Cognizant Technology
Aug 2020 May
Solutions
2021
LANGUAGES
Angular
JavaScript
HTML5
CSS3
SCSS
Gi
Hindi: Native
English: Fluent
.
Developed customer facing web applications using
Angular 10 and modern JavaScript
Punjabi: Conversational
Created responsive layouts using HTML5, CSS3, and SCSS
preprocessor
INTERESTS
Implemented routing and navigation using Angular Router
Worked with version control using Git and collaborated in
Frontend Architectur Angular
team environments
Updates Open Source Contributing
Fixed bugs and implemented feature enhancements
. Tech Blogging UI/UX Design
based on client requirements
FEATURED PROJECTS
Banking Dashboard
E-Commerce Admin
System
Panel
Angular
NgRx
Angular 12
Angular Material
TypeScript
Bootstrap
Chart.js
RxJS
REST APIs
Forms
Developed comprehensive
Built admin panel e
banking dashboard using
commerce management
Angular with NgRx for
using Angular 12 and
state management
TypeScript Implemented
Integrated Angular Material
Bootstrap responsive
components consistent
design integrated REST
UI and Chart.j for financial
APIs data operations,
data visualization Used
and created complex forms
RxJS handling complex
for product and inventory
asynchronous operations
management
and real-time updates.
Task Management
Real-time Chat
Application
Interface
Angular
Jasmine
Angula Socket.ig
Karma
HTTP Client
SCSS WebSocket
Local Storage
Reactive Forms
Created task management
Developed real-time chat
app using Angular 10 with
application using Angular 14
local storage data
and Socket.ic WebSocket
persistence. Implemented
communication Styled with
comprehensive unit testing
SCSS custom
with Jasmine and Karma.
animations impleme nted
used HTTP Client for API
reactive forms message
integration and built drag
input. and handled real time
and-drop functionality for
message updates efficiently
task organization

2025-06-13 20:06:42 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Raw response: {"output":{"message":{"content":[{"text":"```json\n{\n  \"technical_skills\": [\n    \"Angular 1\",\n    \"Angular CLI\",\n    \"Angular Router\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\",\n    \"NgRx\",\n    \"RxJS\",\n    \"Angular Material\",\n    \"Bootstrap\",\n    \"Chart.js\",\n    \"PrimeNG\",\n    \"Jasmine\",\n    \"Karma\",\n    \"REST APIs\",\n    \"WebSocket\",\n    \"Socket.io\",\n    \"VS Code\",\n    \"Webpack\",\n    \"Git\"\n  ],\n  \"soft_skills\": [\n    \"Mentoring\",\n    \"Agile development\",\n    \"Collaboration\",\n    \"Team environments\",\n    \"Communication\"\n  ],\n  \"experience_level\": \"SENIOR\",\n  \"education\": \"Bachelor of Technology (Computer Science)\",\n  \"years_of_experience\": 4,\n  \"certifications\": [\n    \"Angular Certified Developer\",\n    \"TypeScript Professional\",\n    \"NgRx State Management\",\n    \"RxJS Reactive Programming\",\n    \"Frontend Web Development\",\n    \"Angular Testing with Jasmine\"\n  ],\n  \"industries\": [\n    \"IT Services\",\n    \"Banking\",\n    \"E-Commerce\"\n  ],\n  \"programming_languages\": [\n    \"TypeScript\",\n    \"JavaScript\",\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\"\n  ],\n  \"frameworks\": [\n    \"Angular\",\n    \"Bootstrap\",\n    \"Angular Material\",\n    \"PrimeNG\"\n  ],\n  \"tools\": [\n    \"VS Code\",\n    \"Webpack\",\n    \"Git\"\n  ],\n  \"databases\": [],\n  \"cloud_platforms\": [],\n  \"key_achievements\": [\n    \"Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime\",\n    \"Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma\",\n    \"Optimized application performance resulting 40% faster page load times\"\n  ],\n  \"summary\": \"Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular framework, TypeScript, RxJS, and NgRx state management. Passionate about clean code and user experience.\"\n}\n```"}],"role":"assistant"}},"stopReason":"end_turn","usage":{"inputTokens":1267,"outputTokens":571,"totalTokens":1838}}
2025-06-13 20:06:42 [http-nio-8081-exec-7] DEBUG c.h.hr.service.BedrockService - Model response: ```json
{
  "technical_skills": [
    "Angular 1",
    "Angular CLI",
    "Angular Router",
    "TypeScript",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS",
    "NgRx",
    "RxJS",
    "Angular Material",
    "Bootstrap",
    "Chart.js",
    "PrimeNG",
    "Jasmine",
    "Karma",
    "REST APIs",
    "WebSocket",
    "Socket.io",
    "VS Code",
    "Webpack",
    "Git"
  ],
  "soft_skills": [
    "Mentoring",
    "Agile development",
    "Collaboration",
    "Team environments",
    "Communication"
  ],
  "experience_level": "SENIOR",
  "education": "Bachelor of Technology (Computer Science)",
  "years_of_experience": 4,
  "certifications": [
    "Angular Certified Developer",
    "TypeScript Professional",
    "NgRx State Management",
    "RxJS Reactive Programming",
    "Frontend Web Development",
    "Angular Testing with Jasmine"
  ],
  "industries": [
    "IT Services",
    "Banking",
    "E-Commerce"
  ],
  "programming_languages": [
    "TypeScript",
    "JavaScript",
    "HTML5",
    "CSS3",
    "SCSS"
  ],
  "frameworks": [
    "Angular",
    "Bootstrap",
    "Angular Material",
    "PrimeNG"
  ],
  "tools": [
    "VS Code",
    "Webpack",
    "Git"
  ],
  "databases": [],
  "cloud_platforms": [],
  "key_achievements": [
    "Developed enterprise banking applications using Angular 15+ and TypeScript with 99.9% uptime",
    "Achieved 95% code coverage through comprehensive unit testing with Jasmine and Karma",
    "Optimized application performance resulting 40% faster page load times"
  ],
  "summary": "Experienced Angular Developer with 4+ years of expertise in building dynamic, responsive web applications. Proficient in Angular framework, TypeScript, RxJS, and NgRx state management. Passionate about clean code and user experience."
}
```
2025-06-13 20:06:42 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Successfully performed enhanced analysis for candidate: Rohit Gupta - Angular Developer.pdf
2025-06-13 20:06:42 [http-nio-8081-exec-7] INFO  c.h.hr.service.CandidateService - Processed candidate: Rohit Gupta - Angular Developer.pdf with ID: 2ac6a6d8-e47a-493a-8983-08e3af5e2232
2025-06-13 20:06:42 [http-nio-8081-exec-7] INFO  c.h.hr.controller.HRController - Resume uploaded successfully: Rohit Gupta - Angular Developer.pdf (ID: 2ac6a6d8-e47a-493a-8983-08e3af5e2232) in 19872ms
2025-06-13 20:06:42 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:06:42 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{fileName=Rohit Gupta - Angular Developer.pdf, success=true, extractedData={experienceLevel=SENIOR,  (truncated)...]
2025-06-13 20:06:42 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:06:45 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 20:06:45 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 20:06:45 [http-nio-8081-exec-4] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 20:06:45 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:06:45 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@7ab01470, com.hackathon.hr.model.Candidate@1a107c23, com.hackathon (truncated)...]
2025-06-13 20:06:45 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 20:07:19 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 2 (Data Analyst - Tech & Analytics)
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.63636363636364 for candidate Anjali Patel - Data Analyst.pdf and job Data Analyst - Tech & Analytics
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 53.90909090909091 for candidate Arjun Singh - Software Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 46.63636363636364 for candidate Kavya Nair - Full Stack Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job Data Analyst - Tech & Analytics
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 57.54545454545455 for candidate Mei Chen - Marketing Analyst.pdf and job Data Analyst - Tech & Analytics
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 48.27272727272727 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job Data Analyst - Tech & Analytics
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Karan Singh - DevOps Engineer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Deepika Reddy - Java Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Rohit Gupta - Angular Developer.pdf and job Data Analyst - Tech & Analytics
2025-06-13 20:07:19 [http-nio-8081-exec-6] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: Data Analyst - Tech & Analytics
2025-06-13 20:07:19 [http-nio-8081-exec-6] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 2 in 10ms
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=2, success=true, totalCandidates=10, jobTitle=Data Analyst - Tech & Analytics, matchCount=10, (truncated)...]
2025-06-13 20:07:19 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/match", parameters={masked}
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#matchCandidates(String)
2025-06-13 20:07:25 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Matching candidates for job ID: 5 (DevOps Engineer - Cloud Infrastructure)
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 28.0 for candidate Aarav Sharma - Junior Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Anjali Patel - Data Analyst.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.0 for candidate Arjun Singh - Software Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Kavya Nair - Full Stack Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 60.0 for candidate Priya Sharma - Sales & Marketing Professional.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 43.0 for candidate Mei Chen - Marketing Analyst.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 41.0 for candidate Rajesh Kumar - Demand Planning Specialist.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 77.0 for candidate Karan Singh - DevOps Engineer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 51.0 for candidate Deepika Reddy - Java Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG c.h.hr.service.CandidateService - Heuristic calculated match score 45.0 for candidate Rohit Gupta - Angular Developer.pdf and job DevOps Engineer - Cloud Infrastructure
2025-06-13 20:07:25 [http-nio-8081-exec-8] INFO  c.h.hr.service.CandidateService - Found 10 matches for job: DevOps Engineer - Cloud Infrastructure
2025-06-13 20:07:25 [http-nio-8081-exec-8] INFO  c.h.hr.controller.HRController - Found 10 matches for job ID: 5 in 12ms
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{jobId=5, success=true, totalCandidates=10, jobTitle=DevOps Engineer - Cloud Infrastructure, matchCo (truncated)...]
2025-06-13 20:07:25 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:14:47 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-13 20:14:47 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#index(Model)
2025-06-13 20:14:47 [http-nio-8081-exec-1] DEBUG c.h.hr.controller.HRController - Index page loaded with 10 candidates and 10 jobs
2025-06-13 20:14:47 [http-nio-8081-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
2025-06-13 20:14:47 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:14:47 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/main.css", parameters={}
2025-06-13 20:14:47 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/js/main.js", parameters={}
2025-06-13 20:14:47 [http-nio-8081-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/js/]]
2025-06-13 20:14:47 [http-nio-8081-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/css/]]
2025-06-13 20:14:47 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:14:47 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:14:47 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/jobs", parameters={}
2025-06-13 20:14:47 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/candidates", parameters={}
2025-06-13 20:14:47 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getJobs()
2025-06-13 20:14:47 [http-nio-8081-exec-5] DEBUG c.h.hr.controller.HRController - Retrieved 10 job requirements
2025-06-13 20:14:47 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:14:47 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.JobRequirement@5994f037, com.hackathon.hr.model.JobRequirement@1b9f11ef, com (truncated)...]
2025-06-13 20:14:47 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.hackathon.hr.controller.HRController#getCandidates()
2025-06-13 20:14:47 [http-nio-8081-exec-3] DEBUG c.h.hr.controller.HRController - Retrieved 10 candidates
2025-06-13 20:14:47 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:14:47 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.hackathon.hr.model.Candidate@7ab01470, com.hackathon.hr.model.Candidate@1a107c23, com.hackathon (truncated)...]
2025-06-13 20:14:47 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:14:47 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-13 20:14:48 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-13 20:14:48 [http-nio-8081-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-13 20:14:48 [http-nio-8081-exec-7] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-13 20:14:48 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-13 20:14:48 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-13 20:14:48 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-13 20:14:48 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2025-06-13 20:14:48 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Jun 13 20:14:48 IST 2025, status=404, error=Not Found, message=No message available,  (truncated)...]
2025-06-13 20:14:48 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-13 20:14:54 [RMI TCP Connection(23)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-13 20:14:54 [RMI TCP Connection(23)-127.0.0.1] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-13 20:14:54 [RMI TCP Connection(23)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
